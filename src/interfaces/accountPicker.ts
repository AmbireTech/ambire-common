import { ControllerInterface } from './controller'

export type IAccountPickerController = ControllerInterface<
  import('../controllers/accountPicker/accountPicker').AccountPickerController,
  // Public properties
  | 'initParams'
  | 'keyIterator'
  | 'hdPathTemplate'
  | 'isInitialized'
  | 'shouldSearchForLinkedAccounts'
  | 'shouldGetAccountsUsedOnNetworks'
  | 'shouldAddNextAccountAutomatically'
  | 'page'
  | 'pageSize'
  | 'pageError'
  | 'selectedAccountsFromCurrentSession'
  | 'readyToAddAccounts'
  | 'readyToRemoveAccounts'
  | 'readyToAddKeys'
  | 'addAccountsStatus'
  | 'selectNextAccountStatus'
  | 'accountsLoading'
  | 'linkedAccountsLoading'
  | 'networksWithAccountStateError'
  | 'addAccountsPromise'
  | 'findAndSetLinkedAccountsPromise'
  // Public getters
  | 'accountsOnPage'
  | 'allKeysOnPage'
  | 'selectedAccounts'
  | 'addedAccountsFromCurrentSession'
  | 'type'
  | 'subType'
  | 'isPageLocked'
  // Public methods
  | 'setInitParams'
  | 'init'
  | 'reset'
  | 'resetAccountsSelection'
  | 'setHDPathTemplate'
  | 'selectAccount'
  | 'deselectAccount'
  | 'retrieveInternalKeysOfSelectedAccounts'
  | 'setPage'
  | 'addAccounts'
  | 'selectNextAccount'
  | 'createAndAddEmailAccount'
  | 'addExistingEmailAccounts'
  | 'removeNetworkData'
>
