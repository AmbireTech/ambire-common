{
    "0xdd62ed3e": {
        "type": "function",
        "value": "allowance(address owner,address spender)"
    },
    "0x095ea7b3": {
        "type": "function",
        "value": "approve(address spender,uint256 amount)"
    },
    "0x70a08231": {
        "type": "function",
        "value": "balanceOf(address account)"
    },
    "0xb0ac19a0": {
        "type": "function",
        "value": "computeAddress2(uint256 salt)"
    },
    "0x313ce567": {
        "type": "function",
        "value": "decimals()"
    },
    "0xd8ccd0f3": {
        "type": "function",
        "value": "free(uint256 value)"
    },
    "0x5f2e2b45": {
        "type": "function",
        "value": "freeFrom(address from,uint256 value)"
    },
    "0x079d229f": {
        "type": "function",
        "value": "freeFromUpTo(address from,uint256 value)"
    },
    "0x6366b936": {
        "type": "function",
        "value": "freeUpTo(uint256 value)"
    },
    "0xa0712d68": {
        "type": "function",
        "value": "mint(uint256 mintAmount)"
    },
    "0x06fdde03": {
        "type": "function",
        "value": "name()"
    },
    "0x95d89b41": {
        "type": "function",
        "value": "symbol()"
    },
    "0xd89135cd": {
        "type": "function",
        "value": "totalBurned()"
    },
    "0xa2309ff8": {
        "type": "function",
        "value": "totalMinted()"
    },
    "0x18160ddd": {
        "type": "function",
        "value": "totalSupply()"
    },
    "0xa9059cbb": {
        "type": "function",
        "value": "transfer(address recipient,uint256 amount)"
    },
    "0x23b872dd": {
        "type": "function",
        "value": "transferFrom(address sender,address recipient,uint256 amount)"
    },
    "0x0562b1a4": {
        "type": "function",
        "value": "setMarketActiveState(bool state)"
    },
    "0x008244c8": {
        "type": "function",
        "value": "executeReserveReserveTradeWithData(address makerReserve,address takerReserve,tuple trade,bytes32[] makerData,bytes32[] takerData)"
    },
    "0x54b8cd08": {
        "type": "function",
        "value": "settleReserveReserveTradeWithData(tuple tradeInput,bytes32[] makerData,bytes32[] takerData)"
    },
    "0x61f1ad44": {
        "type": "function",
        "value": "settleReserveReserveTrade(tuple tradeInput)"
    },
    "0x0902f1ac": {
        "type": "function",
        "value": "getReserves()"
    },
    "0x12fde4b7": {
        "type": "function",
        "value": "getFeeCollector()"
    },
    "0x268139d5": {
        "type": "function",
        "value": "removePublicReserveAddress(address reserve)"
    },
    "0xee4ca163": {
        "type": "function",
        "value": "ringTradeFromInput(tuple packed)"
    },
    "0x2c580a1f": {
        "type": "function",
        "value": "nominateFeeCollector(address collector)"
    },
    "0x338b5dea": {
        "type": "function",
        "value": "depositToken(address token,uint256 amount)"
    },
    "0x3af89d03": {
        "type": "function",
        "value": "directWithdrawal(address token,uint256 amount)"
    },
    "0x49c35605": {
        "type": "function",
        "value": "multiSigTransfer(address token,uint256 amount,uint64 nonce,uint8 v,bytes32 r,bytes32 s,address receiving_address)"
    },
    "0x4a0c3c3b": {
        "type": "function",
        "value": "delegateAddress(address delegate)"
    },
    "0x60ad9693": {
        "type": "function",
        "value": "orderFromInput(tuple orderInput)"
    },
    "0x36062d6c": {
        "type": "function",
        "value": "batchSettleTrades(tuple[] orderInput,tuple[] tradeInput)"
    },
    "0x59b07e7a": {
        "type": "function",
        "value": "removeTokenAddressFromArr(address token)"
    },
    "0x5d7bdccd": {
        "type": "function",
        "value": "multiSigSend(address token,uint256 amount,uint64 nonce,uint8 v,bytes32 r,bytes32 s,address receiving_address)"
    },
    "0x33f7636f": {
        "type": "function",
        "value": "executeReserveReserveTrade(address makerReserve,address takerReserve,tuple trade)"
    },
    "0x5e75228f": {
        "type": "function",
        "value": "swap(address sell_token,uint256 sell_amount,address buy_token,uint256 min_output,uint256 deadline)"
    },
    "0x61902470": {
        "type": "function",
        "value": "cacheTokenAddress(address token,uint256 index)"
    },
    "0x660c5132": {
        "type": "function",
        "value": "getBestReserve(address sell_token,uint256 sell_amount,address buy_token)"
    },
    "0x66c0bd24": {
        "type": "function",
        "value": "getTokenIndex(address token)"
    },
    "0x6849dbe5": {
        "type": "function",
        "value": "nominateArbiter(address arbiter,bool status)"
    },
    "0xf6bef201": {
        "type": "function",
        "value": "reserveTradeFromInput(tuple packed)"
    },
    "0x72521dcd": {
        "type": "function",
        "value": "lockFeeCollector()"
    },
    "0x73ee4d09": {
        "type": "function",
        "value": "executeReserveTrade(address sellToken,uint256 sellAmount,address buyToken,uint256 buyAmount,address reserve)"
    },
    "0x7bae7c22": {
        "type": "function",
        "value": "swapWithReserve(address sell_token,uint256 sell_amount,address buy_token,uint256 min_output,address reserve,uint256 deadline)"
    },
    "0x862f9f5a": {
        "type": "function",
        "value": "getLastBlockedTimestamp(address user)"
    },
    "0x888d0e1d": {
        "type": "function",
        "value": "multiSigOrderBatchCancel(bytes32[] orderHashes,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x570c7772": {
        "type": "function",
        "value": "settleReserveTradeWithData(tuple orderInput,tuple tradeInput,bytes32[] data)"
    },
    "0x28f49637": {
        "type": "function",
        "value": "reserveReserveTradeFromInput(tuple packed)"
    },
    "0x94785a0c": {
        "type": "function",
        "value": "blockFundsForSingleSigWithdrawal(address token,uint256 amount)"
    },
    "0x98a968c1": {
        "type": "function",
        "value": "depositWrappedEther(uint256 amount)"
    },
    "0x98ea5fca": {
        "type": "function",
        "value": "depositEther()"
    },
    "0x9946ce7d": {
        "type": "function",
        "value": "getTokenFromIndex(uint256 index)"
    },
    "0x9bafc515": {
        "type": "function",
        "value": "userSigWithdrawal(bytes32 packedInput1,bytes32 packedInput2,bytes32 r,bytes32 s)"
    },
    "0x9e892372": {
        "type": "function",
        "value": "multiSigWithdrawal(address token,uint256 amount,uint64 nonce,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xa2c38a23": {
        "type": "function",
        "value": "initiateSingleSigWithdrawal(address token,uint256 amount)"
    },
    "0xe3d91ce3": {
        "type": "function",
        "value": "settleRingTrade(tuple[] orderInput,tuple[] tradeInput)"
    },
    "0xa4d72d7c": {
        "type": "function",
        "value": "getReserveFromIndex(uint256 index)"
    },
    "0xa6f9dae1": {
        "type": "function",
        "value": "changeOwner(address new_owner)"
    },
    "0xaa6ca808": {
        "type": "function",
        "value": "getTokens()"
    },
    "0xb695d805": {
        "type": "function",
        "value": "changeSingleSigWaitingPeriod(uint256 waiting_period)"
    },
    "0x27f2cb0b": {
        "type": "function",
        "value": "tradeFromInput(tuple packed)"
    },
    "0xc47b8164": {
        "type": "function",
        "value": "cacheReserveAddress(address reserve,uint256 index,bool is_public)"
    },
    "0xd0de4a63": {
        "type": "function",
        "value": "settleTrade(tuple makerOrderInput,tuple takerOrderInput,tuple tradeInput)"
    },
    "0xcabfc903": {
        "type": "function",
        "value": "getSwapOutput(address sell_token,uint256 sell_amount,address buy_token)"
    },
    "0xd0847f1c": {
        "type": "function",
        "value": "mintGasTokens(uint256 amount)"
    },
    "0xd4fac45d": {
        "type": "function",
        "value": "getBalance(address token,address user)"
    },
    "0xdedcc21b": {
        "type": "function",
        "value": "getReserveIndex(address reserve)"
    },
    "0x0a757da2": {
        "type": "function",
        "value": "settleRingTradeWithData(tuple[] orderInput,tuple[] tradeInput,bytes32[][] data)"
    },
    "0xe4e695fe": {
        "type": "function",
        "value": "getAvailableGasTokens()"
    },
    "0xebf26a42": {
        "type": "function",
        "value": "revokeDelegation(address delegate,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xf6188339": {
        "type": "function",
        "value": "getBlocked(address token,address holder)"
    },
    "0xf8cd6e01": {
        "type": "function",
        "value": "executeReserveTradeWithData(address sellToken,uint256 sellAmount,address buyToken,uint256 buyAmount,address reserve,bytes32[] data)"
    },
    "0x2fbf0980": {
        "type": "function",
        "value": "settleReserveTrade(tuple orderInput,tuple tradeInput)"
    },
    "0x07f7aafb": {
        "type": "function",
        "value": "approveContract(address _contract)"
    },
    "0x69dc9ff3": {
        "type": "function",
        "value": "contracts(address )"
    },
    "0xb7e2077e": {
        "type": "function",
        "value": "denyContract(address _contract)"
    },
    "0xa8034df1": {
        "type": "function",
        "value": "grantApproval()"
    },
    "0x8da5cb5b": {
        "type": "function",
        "value": "owner()"
    },
    "0x715018a6": {
        "type": "function",
        "value": "renounceOwnership()"
    },
    "0x90d02b3c": {
        "type": "function",
        "value": "revokeApproval()"
    },
    "0x4a3e3a1f": {
        "type": "function",
        "value": "revokedApproval(address )"
    },
    "0x74a9402e": {
        "type": "function",
        "value": "transferERC1155(address collection,address from,address to,uint256 tokenId,uint256 amount)"
    },
    "0xda3e8ce4": {
        "type": "function",
        "value": "transferERC20(address token,address from,address to,uint256 amount)"
    },
    "0x789f93f6": {
        "type": "function",
        "value": "transferERC721(address collection,address from,address to,uint256 tokenId)"
    },
    "0xca72da8e": {
        "type": "function",
        "value": "transferERC721Unsafe(address collection,address from,address to,uint256 tokenId)"
    },
    "0xf2fde38b": {
        "type": "function",
        "value": "transferOwnership(address newOwner)"
    },
    "0xd81b2f2e": {
        "type": "error",
        "value": "AllowanceExpired(uint256 deadline)"
    },
    "0x24d35a26": {
        "type": "error",
        "value": "ExcessiveInvalidation()"
    },
    "0xf96fb071": {
        "type": "error",
        "value": "InsufficientAllowance(uint256 amount)"
    },
    "0x3728b83d": {
        "type": "error",
        "value": "InvalidAmount(uint256 maxAmount)"
    },
    "0xb0669cbc": {
        "type": "error",
        "value": "InvalidContractSignature()"
    },
    "0x756688fe": {
        "type": "error",
        "value": "InvalidNonce()"
    },
    "0x8baa579f": {
        "type": "error",
        "value": "InvalidSignature()"
    },
    "0x4be6321b": {
        "type": "error",
        "value": "InvalidSignatureLength()"
    },
    "0x815e1d64": {
        "type": "error",
        "value": "InvalidSigner()"
    },
    "0xff633a38": {
        "type": "error",
        "value": "LengthMismatch()"
    },
    "0xcd21db4f": {
        "type": "error",
        "value": "SignatureExpired(uint256 signatureDeadline)"
    },
    "0x3644e515": {
        "type": "function",
        "value": "DOMAIN_SEPARATOR()"
    },
    "0x927da105": {
        "type": "function",
        "value": "allowance(address ,address ,address )"
    },
    "0x87517c45": {
        "type": "function",
        "value": "approve(address token,address spender,uint160 amount,uint48 expiration)"
    },
    "0x65d9723c": {
        "type": "function",
        "value": "invalidateNonces(address token,address spender,uint48 newNonce)"
    },
    "0x3ff9dcb1": {
        "type": "function",
        "value": "invalidateUnorderedNonces(uint256 wordPos,uint256 mask)"
    },
    "0xab1bc1f8": {
        "type": "function",
        "value": "lockdown(tuple[] approvals)"
    },
    "0x4fe02b44": {
        "type": "function",
        "value": "nonceBitmap(address ,uint256 )"
    },
    "0xe4d1b8e4": {
        "type": "function",
        "value": "permit(address owner,tuple permitSingle,bytes signature)"
    },
    "0x8c1b8baa": {
        "type": "function",
        "value": "permitTransferFrom(tuple permit,tuple transferDetails,address owner,bytes signature)"
    },
    "0xd8ea8a80": {
        "type": "function",
        "value": "permitTransferFrom(tuple permit,tuple[] transferDetails,address owner,bytes signature)"
    },
    "0x9f97ecd0": {
        "type": "function",
        "value": "permitWitnessTransferFrom(tuple permit,tuple transferDetails,address owner,bytes32 witness,string witnessTypeString,bytes signature)"
    },
    "0xcec4be07": {
        "type": "function",
        "value": "permitWitnessTransferFrom(tuple permit,tuple[] transferDetails,address owner,bytes32 witness,string witnessTypeString,bytes signature)"
    },
    "0x855a2299": {
        "type": "function",
        "value": "transferFrom(tuple[] transferDetails)"
    },
    "0x36c78516": {
        "type": "function",
        "value": "transferFrom(address from,address to,uint160 amount,address token)"
    },
    "0x3659cfe6": {
        "type": "function",
        "value": "upgradeTo(address newImplementation)"
    },
    "0x4f1ef286": {
        "type": "function",
        "value": "upgradeToAndCall(address newImplementation,bytes data)"
    },
    "0x5c60da1b": {
        "type": "function",
        "value": "implementation()"
    },
    "0x8f283970": {
        "type": "function",
        "value": "changeAdmin(address newAdmin)"
    },
    "0xf851a440": {
        "type": "function",
        "value": "admin()"
    },
    "0x66d38203": {
        "type": "function",
        "value": "setup(address token_addr)"
    },
    "0x422f1043": {
        "type": "function",
        "value": "addLiquidity(uint256 min_liquidity,uint256 max_tokens,uint256 deadline)"
    },
    "0xf88bf15a": {
        "type": "function",
        "value": "removeLiquidity(uint256 amount,uint256 min_eth,uint256 min_tokens,uint256 deadline)"
    },
    "0x89402a72": {
        "type": "function",
        "value": "__default__()"
    },
    "0xf39b5b9b": {
        "type": "function",
        "value": "ethToTokenSwapInput(uint256 min_tokens,uint256 deadline)"
    },
    "0xad65d76d": {
        "type": "function",
        "value": "ethToTokenTransferInput(uint256 min_tokens,uint256 deadline,address recipient)"
    },
    "0x6b1d4db7": {
        "type": "function",
        "value": "ethToTokenSwapOutput(uint256 tokens_bought,uint256 deadline)"
    },
    "0x0b573638": {
        "type": "function",
        "value": "ethToTokenTransferOutput(uint256 tokens_bought,uint256 deadline,address recipient)"
    },
    "0x95e3c50b": {
        "type": "function",
        "value": "tokenToEthSwapInput(uint256 tokens_sold,uint256 min_eth,uint256 deadline)"
    },
    "0x7237e031": {
        "type": "function",
        "value": "tokenToEthTransferInput(uint256 tokens_sold,uint256 min_eth,uint256 deadline,address recipient)"
    },
    "0x013efd8b": {
        "type": "function",
        "value": "tokenToEthSwapOutput(uint256 eth_bought,uint256 max_tokens,uint256 deadline)"
    },
    "0xd4e4841d": {
        "type": "function",
        "value": "tokenToEthTransferOutput(uint256 eth_bought,uint256 max_tokens,uint256 deadline,address recipient)"
    },
    "0xddf7e1a7": {
        "type": "function",
        "value": "tokenToTokenSwapInput(uint256 tokens_sold,uint256 min_tokens_bought,uint256 min_eth_bought,uint256 deadline,address token_addr)"
    },
    "0xf552d91b": {
        "type": "function",
        "value": "tokenToTokenTransferInput(uint256 tokens_sold,uint256 min_tokens_bought,uint256 min_eth_bought,uint256 deadline,address recipient,address token_addr)"
    },
    "0xb040d545": {
        "type": "function",
        "value": "tokenToTokenSwapOutput(uint256 tokens_bought,uint256 max_tokens_sold,uint256 max_eth_sold,uint256 deadline,address token_addr)"
    },
    "0xf3c0efe9": {
        "type": "function",
        "value": "tokenToTokenTransferOutput(uint256 tokens_bought,uint256 max_tokens_sold,uint256 max_eth_sold,uint256 deadline,address recipient,address token_addr)"
    },
    "0xb1cb43bf": {
        "type": "function",
        "value": "tokenToExchangeSwapInput(uint256 tokens_sold,uint256 min_tokens_bought,uint256 min_eth_bought,uint256 deadline,address exchange_addr)"
    },
    "0xec384a3e": {
        "type": "function",
        "value": "tokenToExchangeTransferInput(uint256 tokens_sold,uint256 min_tokens_bought,uint256 min_eth_bought,uint256 deadline,address recipient,address exchange_addr)"
    },
    "0xea650c7d": {
        "type": "function",
        "value": "tokenToExchangeSwapOutput(uint256 tokens_bought,uint256 max_tokens_sold,uint256 max_eth_sold,uint256 deadline,address exchange_addr)"
    },
    "0x981a1327": {
        "type": "function",
        "value": "tokenToExchangeTransferOutput(uint256 tokens_bought,uint256 max_tokens_sold,uint256 max_eth_sold,uint256 deadline,address recipient,address exchange_addr)"
    },
    "0xcd7724c3": {
        "type": "function",
        "value": "getEthToTokenInputPrice(uint256 eth_sold)"
    },
    "0x59e94862": {
        "type": "function",
        "value": "getEthToTokenOutputPrice(uint256 tokens_bought)"
    },
    "0x95b68fe7": {
        "type": "function",
        "value": "getTokenToEthInputPrice(uint256 tokens_sold)"
    },
    "0x2640f62c": {
        "type": "function",
        "value": "getTokenToEthOutputPrice(uint256 eth_bought)"
    },
    "0x9d76ea58": {
        "type": "function",
        "value": "tokenAddress()"
    },
    "0x966dae0e": {
        "type": "function",
        "value": "factoryAddress()"
    },
    "0xa24a13a6": {
        "type": "error",
        "value": "ArrayLengthMismatch()"
    },
    "0xb29526b9": {
        "type": "error",
        "value": "BearAlreadyClaimedReward()"
    },
    "0x3c16d2dc": {
        "type": "error",
        "value": "BitAlreadyClaimedReward()"
    },
    "0x49e27cff": {
        "type": "error",
        "value": "InvalidOwner()"
    },
    "0x9430a17e": {
        "type": "error",
        "value": "NonExistentToken()"
    },
    "0x5fd76e04": {
        "type": "error",
        "value": "NotCompleted()"
    },
    "0x091fe61c": {
        "type": "error",
        "value": "NotYourToken()"
    },
    "0xa3df9bcf": {
        "type": "error",
        "value": "StakingNotEnabled()"
    },
    "0x8cd22d19": {
        "type": "error",
        "value": "TransferNotAllowed()"
    },
    "0x27e235e3": {
        "type": "function",
        "value": "balances(address )"
    },
    "0x6c0360eb": {
        "type": "function",
        "value": "baseURI()"
    },
    "0xdc39f583": {
        "type": "function",
        "value": "bearsClaimed(uint256 )"
    },
    "0x4c7cecdd": {
        "type": "function",
        "value": "bitsClaimed(uint256 )"
    },
    "0xb1a8adfd": {
        "type": "function",
        "value": "enter(uint256[] bears,uint256[] bits)"
    },
    "0x9c87e0a8": {
        "type": "function",
        "value": "escape(uint256[] bears)"
    },
    "0xb0297e68": {
        "type": "function",
        "value": "exit(uint256[] bears,uint256[] rewards,bytes signature)"
    },
    "0x081812fc": {
        "type": "function",
        "value": "getApproved(uint256 tokenId)"
    },
    "0xe985e9c5": {
        "type": "function",
        "value": "isApprovedForAll(address owner,address operator)"
    },
    "0xf9374284": {
        "type": "function",
        "value": "killaBearsContract()"
    },
    "0x7670f7dd": {
        "type": "function",
        "value": "killaBitsContract()"
    },
    "0x150b7a02": {
        "type": "function",
        "value": "onERC721Received(address ,address ,uint256 ,bytes )"
    },
    "0x6352211e": {
        "type": "function",
        "value": "ownerOf(uint256 tokenId)"
    },
    "0x220cce97": {
        "type": "function",
        "value": "rewardsContract()"
    },
    "0x42842e0e": {
        "type": "function",
        "value": "safeTransferFrom(address from,address to,uint256 tokenId)"
    },
    "0xb88d4fde": {
        "type": "function",
        "value": "safeTransferFrom(address from,address to,uint256 tokenId,bytes _data)"
    },
    "0xa22cb465": {
        "type": "function",
        "value": "setApprovalForAll(address operator,bool approved)"
    },
    "0x55f804b3": {
        "type": "function",
        "value": "setBaseURI(string baseURI_)"
    },
    "0x3a6462e4": {
        "type": "function",
        "value": "setRewarder(address addr)"
    },
    "0xb77a2c1c": {
        "type": "function",
        "value": "stakeTime()"
    },
    "0xd5a44f86": {
        "type": "function",
        "value": "stakes(uint256 )"
    },
    "0x1cfff51b": {
        "type": "function",
        "value": "stakingEnabled()"
    },
    "0x233a095d": {
        "type": "function",
        "value": "stakingEnabledFor(address )"
    },
    "0x01ffc9a7": {
        "type": "function",
        "value": "supportsInterface(bytes4 interfaceId)"
    },
    "0x69805981": {
        "type": "function",
        "value": "toggleStaking(bool enabled)"
    },
    "0x1a91ca5f": {
        "type": "function",
        "value": "toggleStakingFor(address who,bool enabled)"
    },
    "0xc87b56dd": {
        "type": "function",
        "value": "tokenURI(uint256 tokenId)"
    },
    "0x6b2ace87": {
        "type": "function",
        "value": "bentoBox()"
    },
    "0x2646478b": {
        "type": "function",
        "value": "processRoute(address tokenIn,uint256 amountIn,address tokenOut,uint256 amountOutMin,address to,bytes route)"
    },
    "0x93b3774c": {
        "type": "function",
        "value": "transferValueAndprocessRoute(address transferValueTo,uint256 amountValueTransfer,address tokenIn,uint256 amountIn,address tokenOut,uint256 amountOutMin,address to,bytes route)"
    },
    "0xe2a7b501": {
        "type": "function",
        "value": "tridentCLSwapCallback(int256 amount0Delta,int256 amount1Delta,bytes data)"
    },
    "0xfa461e33": {
        "type": "function",
        "value": "uniswapV3SwapCallback(int256 amount0Delta,int256 amount1Delta,bytes data)"
    },
    "0x819faf7b": {
        "type": "function",
        "value": "aave()"
    },
    "0x06a3fe59": {
        "type": "function",
        "value": "aaveToken()"
    },
    "0x99b71d5c": {
        "type": "function",
        "value": "approveToken()"
    },
    "0x57ded9c9": {
        "type": "function",
        "value": "apr()"
    },
    "0xb69ef8a8": {
        "type": "function",
        "value": "balance()"
    },
    "0xcf8ca426": {
        "type": "function",
        "value": "balanceAave()"
    },
    "0x61c1ec55": {
        "type": "function",
        "value": "balanceCompound()"
    },
    "0xa7287971": {
        "type": "function",
        "value": "balanceCompoundInToken()"
    },
    "0x39c0a7e1": {
        "type": "function",
        "value": "balanceDydx()"
    },
    "0x0eb2a267": {
        "type": "function",
        "value": "balanceFulcrum()"
    },
    "0xf5a41dea": {
        "type": "function",
        "value": "balanceFulcrumInToken()"
    },
    "0x7137ef99": {
        "type": "function",
        "value": "calcPoolValueInToken()"
    },
    "0xf69e2046": {
        "type": "function",
        "value": "compound()"
    },
    "0xd9d7858a": {
        "type": "function",
        "value": "dToken()"
    },
    "0xa457c2d7": {
        "type": "function",
        "value": "decreaseAllowance(address spender,uint256 subtractedValue)"
    },
    "0xb6b55f25": {
        "type": "function",
        "value": "deposit(uint256 _amount)"
    },
    "0x8e4ec6ef": {
        "type": "function",
        "value": "dydx()"
    },
    "0x58782c21": {
        "type": "function",
        "value": "fulcrum()"
    },
    "0xf7c1ec77": {
        "type": "function",
        "value": "getAave()"
    },
    "0xf82ce27d": {
        "type": "function",
        "value": "getAaveCore()"
    },
    "0x77c7b8fc": {
        "type": "function",
        "value": "getPricePerFullShare()"
    },
    "0x39509351": {
        "type": "function",
        "value": "increaseAllowance(address spender,uint256 addedValue)"
    },
    "0x8f32d59b": {
        "type": "function",
        "value": "isOwner()"
    },
    "0x16f0115b": {
        "type": "function",
        "value": "pool()"
    },
    "0x085d4883": {
        "type": "function",
        "value": "provider()"
    },
    "0x7d7c2a1c": {
        "type": "function",
        "value": "rebalance()"
    },
    "0xa160176d": {
        "type": "function",
        "value": "recommend()"
    },
    "0x46357473": {
        "type": "function",
        "value": "set_new_APR(address _new_APR)"
    },
    "0xf5ff1916": {
        "type": "function",
        "value": "set_new_COMPOUND(address _new_COMPOUND)"
    },
    "0x9ff011b9": {
        "type": "function",
        "value": "set_new_DTOKEN(uint256 _new_DTOKEN)"
    },
    "0x65aab749": {
        "type": "function",
        "value": "supplyAave(uint256 amount)"
    },
    "0xe849d659": {
        "type": "function",
        "value": "supplyCompound(uint256 amount)"
    },
    "0x06636c1c": {
        "type": "function",
        "value": "supplyDydx(uint256 amount)"
    },
    "0x8124955c": {
        "type": "function",
        "value": "supplyFulcrum(uint256 amount)"
    },
    "0xfc0c546a": {
        "type": "function",
        "value": "token()"
    },
    "0x2e1a7d4d": {
        "type": "function",
        "value": "withdraw(uint256 _shares)"
    },
    "0xf60a15ed": {
        "type": "function",
        "value": "inCaseETHGetsStuck()"
    },
    "0x2e8d6e18": {
        "type": "function",
        "value": "inCaseTokenGetsStuck(address _TokenAddress)"
    },
    "0x2afcf480": {
        "type": "function",
        "value": "invest(uint256 _amount)"
    },
    "0x3990ab4f": {
        "type": "function",
        "value": "investSelf()"
    },
    "0xdb006a75": {
        "type": "function",
        "value": "redeem(uint256 redeemTokens)"
    },
    "0x812adb06": {
        "type": "function",
        "value": "set_new_AAVE(address _new_AAVE)"
    },
    "0xa9de245b": {
        "type": "function",
        "value": "set_new_ATOKEN(address _new_ATOKEN)"
    },
    "0x2c7a5ae4": {
        "type": "function",
        "value": "set_new_DYDX(address _new_DYDX)"
    },
    "0xbbf31644": {
        "type": "function",
        "value": "set_new_FULCRUM(address _new_FULCRUM)"
    },
    "0x30adf81f": {
        "type": "function",
        "value": "PERMIT_TYPEHASH()"
    },
    "0x6c25b346": {
        "type": "function",
        "value": "dai(address _account)"
    },
    "0xc11645bc": {
        "type": "function",
        "value": "daiJoin()"
    },
    "0xbe22f546": {
        "type": "function",
        "value": "daiToken()"
    },
    "0x4a03707c": {
        "type": "function",
        "value": "draw(address src,uint256 wad)"
    },
    "0xef693bed": {
        "type": "function",
        "value": "exit(address src,uint256 wad)"
    },
    "0x3b4da69f": {
        "type": "function",
        "value": "join(address dst,uint256 wad)"
    },
    "0xbb35783b": {
        "type": "function",
        "value": "move(address src,address dst,uint256 wad)"
    },
    "0x7ecebe00": {
        "type": "function",
        "value": "nonces(address )"
    },
    "0x8fcbaf0c": {
        "type": "function",
        "value": "permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x4ba2363a": {
        "type": "function",
        "value": "pot()"
    },
    "0x36569e77": {
        "type": "function",
        "value": "vat()"
    },
    "0x54fd4d50": {
        "type": "function",
        "value": "version()"
    },
    "0x06394c9b": {
        "type": "function",
        "value": "changeOperator(address _newOperator)"
    },
    "0x17cc915c": {
        "type": "function",
        "value": "nullifierHashes(bytes32 )"
    },
    "0x21a0adb6": {
        "type": "function",
        "value": "withdraw(bytes _proof,bytes32 _root,bytes32 _nullifierHash,address _recipient,address _relayer,uint256 _fee,uint256 _refund)"
    },
    "0x2b7ac3f3": {
        "type": "function",
        "value": "verifier()"
    },
    "0x38bf282e": {
        "type": "function",
        "value": "hashLeftRight(bytes32 _left,bytes32 _right)"
    },
    "0x414a37ba": {
        "type": "function",
        "value": "FIELD_SIZE()"
    },
    "0x4ecf518b": {
        "type": "function",
        "value": "levels()"
    },
    "0x570ca735": {
        "type": "function",
        "value": "operator()"
    },
    "0x6d9833e3": {
        "type": "function",
        "value": "isKnownRoot(bytes32 _root)"
    },
    "0x839df945": {
        "type": "function",
        "value": "commitments(bytes32 )"
    },
    "0x8bca6d16": {
        "type": "function",
        "value": "denomination()"
    },
    "0x90eeb02b": {
        "type": "function",
        "value": "currentRootIndex()"
    },
    "0x97fc007c": {
        "type": "function",
        "value": "updateVerifier(address _newVerifier)"
    },
    "0x9fa12d0b": {
        "type": "function",
        "value": "isSpentArray(bytes32[] _nullifierHashes)"
    },
    "0xb214faa5": {
        "type": "function",
        "value": "deposit(bytes32 _commitment)"
    },
    "0xba70f757": {
        "type": "function",
        "value": "getLastRoot()"
    },
    "0xc2b40ae4": {
        "type": "function",
        "value": "roots(uint256 )"
    },
    "0xcd87a3b4": {
        "type": "function",
        "value": "ROOT_HISTORY_SIZE()"
    },
    "0xe5285dcc": {
        "type": "function",
        "value": "isSpent(bytes32 _nullifierHash)"
    },
    "0xe8295588": {
        "type": "function",
        "value": "zeros(uint256 )"
    },
    "0xec732959": {
        "type": "function",
        "value": "ZERO_VALUE()"
    },
    "0xf178e47c": {
        "type": "function",
        "value": "filledSubtrees(uint256 )"
    },
    "0xfc7e9c6f": {
        "type": "function",
        "value": "nextIndex()"
    },
    "0x0b82d33d": {
        "type": "function",
        "value": "withdrawBalanceDifference()"
    },
    "0x0e7c1cb5": {
        "type": "function",
        "value": "originalToken()"
    },
    "0x1d6f757d": {
        "type": "function",
        "value": "withdraw(uint256 _value,uint8 v,bytes32 r,bytes32 s,uint256 signatureValidUntilBlock)"
    },
    "0x45164b3e": {
        "type": "function",
        "value": "TRANSFER_PROXY_VEFX()"
    },
    "0x74f1d6ce": {
        "type": "function",
        "value": "keccak(address _sender,address _wrapper,uint256 _validTill)"
    },
    "0x7df73e27": {
        "type": "function",
        "value": "isSigner(address )"
    },
    "0x8b257d3d": {
        "type": "function",
        "value": "isValidSignature(bytes32 hash,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xad93640f": {
        "type": "function",
        "value": "TRANSFER_PROXY_V2()"
    },
    "0xcc891023": {
        "type": "function",
        "value": "depositLock(address )"
    },
    "0xdc42f2ed": {
        "type": "function",
        "value": "withdrawDifferentToken(address _differentToken)"
    },
    "0xe2bbb158": {
        "type": "function",
        "value": "deposit(uint256 _value,uint256 _forTime)"
    },
    "0xeb12d61e": {
        "type": "function",
        "value": "addSigner(address _newSigner)"
    },
    "0x0bdbb71b": {
        "type": "error",
        "value": "CanNoLongerEscape()"
    },
    "0x64da4178": {
        "type": "function",
        "value": "adminEscape(uint256[] bears)"
    },
    "0xb76aa710": {
        "type": "function",
        "value": "adminExit(address holder,uint256[] bears,uint256[] rewards)"
    },
    "0xc7e3677b": {
        "type": "function",
        "value": "escapeAndMarkAsClaimed(uint256[] bears)"
    },
    "0xd2f7265a": {
        "type": "function",
        "value": "exchange()"
    },
    "0x99f0d6c5": {
        "type": "function",
        "value": "transferNFT(address collection,uint256 tokenId,uint256 ,address from,address to)"
    },
    "0x118e31b7": {
        "type": "function",
        "value": "getBorrowBalance(address account,address asset)"
    },
    "0x24021127": {
        "type": "function",
        "value": "_setOriginationFee(uint256 originationFeeMantissa)"
    },
    "0x26617c28": {
        "type": "function",
        "value": "_setPaused(bool requestedState)"
    },
    "0x26782247": {
        "type": "function",
        "value": "pendingAdmin()"
    },
    "0x3be59443": {
        "type": "function",
        "value": "_setOracle(address newOracle)"
    },
    "0x4706c375": {
        "type": "function",
        "value": "_withdrawEquity(address asset,uint256 amount)"
    },
    "0x4b8a3529": {
        "type": "function",
        "value": "borrow(address asset,uint256 amount)"
    },
    "0x5c975abb": {
        "type": "function",
        "value": "paused()"
    },
    "0x5cf756d2": {
        "type": "function",
        "value": "_setMarketInterestRateModel(address asset,address interestRateModel)"
    },
    "0x5e9a523c": {
        "type": "function",
        "value": "assetPrices(address asset)"
    },
    "0x5ec88c79": {
        "type": "function",
        "value": "getAccountLiquidity(address account)"
    },
    "0x6e2ede03": {
        "type": "function",
        "value": "getCollateralMarketsLength()"
    },
    "0x7dc0d1d0": {
        "type": "function",
        "value": "oracle()"
    },
    "0x8053fcbe": {
        "type": "function",
        "value": "liquidationDiscount()"
    },
    "0x8e8f294b": {
        "type": "function",
        "value": "markets(address )"
    },
    "0x9f180cf1": {
        "type": "function",
        "value": "calculateAccountValues(address userAddress)"
    },
    "0xabdb5ea8": {
        "type": "function",
        "value": "repayBorrow(address asset,uint256 amount)"
    },
    "0xb4eae1cb": {
        "type": "function",
        "value": "collateralRatio()"
    },
    "0xb71d1a0c": {
        "type": "function",
        "value": "_setPendingAdmin(address newPendingAdmin)"
    },
    "0xb7adddac": {
        "type": "function",
        "value": "supplyBalances(address ,address )"
    },
    "0xb8bb5c42": {
        "type": "function",
        "value": "originationFee()"
    },
    "0xba377731": {
        "type": "function",
        "value": "getSupplyBalance(address account,address asset)"
    },
    "0xbeb54615": {
        "type": "function",
        "value": "collateralMarkets(uint256 )"
    },
    "0xc1abfaa3": {
        "type": "function",
        "value": "_supportMarket(address asset,address interestRateModel)"
    },
    "0xc365a646": {
        "type": "function",
        "value": "_setRiskParameters(uint256 collateralRatioMantissa,uint256 liquidationDiscountMantissa)"
    },
    "0xdbe2bc84": {
        "type": "function",
        "value": "_suspendMarket(address asset)"
    },
    "0xe61604cf": {
        "type": "function",
        "value": "liquidateBorrow(address targetAccount,address assetBorrow,address assetCollateral,uint256 requestedAmountClose)"
    },
    "0xe9c714f2": {
        "type": "function",
        "value": "_acceptAdmin()"
    },
    "0xf2b9fdb8": {
        "type": "function",
        "value": "supply(address asset,uint256 amount)"
    },
    "0xf3fef3a3": {
        "type": "function",
        "value": "withdraw(address token,uint256 amount)"
    },
    "0xfc7d42d7": {
        "type": "function",
        "value": "borrowBalances(address ,address )"
    },
    "0xd6d75f51": {
        "type": "function",
        "value": "moneyMarket()"
    },
    "0x01d22ccd": {
        "type": "function",
        "value": "rebalancer()"
    },
    "0x194a62a8": {
        "type": "function",
        "value": "redeemInterestBearingTokens(uint256 _amount)"
    },
    "0x1a5d6705": {
        "type": "function",
        "value": "getParamsForRedeemIdleToken(uint256 _amount,bool _skipRebalance)"
    },
    "0x1aaa4a18": {
        "type": "function",
        "value": "setMinRateDifference(uint256 _rate)"
    },
    "0x22c9f971": {
        "type": "function",
        "value": "minRateDifference()"
    },
    "0x36a00082": {
        "type": "function",
        "value": "allAvailableTokens(uint256 )"
    },
    "0x3b97e856": {
        "type": "function",
        "value": "tokenDecimals()"
    },
    "0x3cfcef64": {
        "type": "function",
        "value": "mintIdleToken(uint256 _amount,uint256[] _clientProtocolAmounts)"
    },
    "0x3f4ba83a": {
        "type": "function",
        "value": "unpause()"
    },
    "0x408cfe24": {
        "type": "function",
        "value": "iToken()"
    },
    "0x45c8026c": {
        "type": "function",
        "value": "protocolWrappers(address )"
    },
    "0x46fbf68e": {
        "type": "function",
        "value": "isPauser(address account)"
    },
    "0x47ce6522": {
        "type": "function",
        "value": "getParamsForMintIdleToken(uint256 _amount)"
    },
    "0x56a5178b": {
        "type": "function",
        "value": "claimITokens(uint256[] _clientProtocolAmounts)"
    },
    "0x6922d7b6": {
        "type": "function",
        "value": "setPriceCalculator(address _priceCalculator)"
    },
    "0x69ad6af2": {
        "type": "function",
        "value": "rebalance(uint256 _newAmount,uint256[] _clientProtocolAmounts)"
    },
    "0x6cfd1553": {
        "type": "function",
        "value": "setRebalancer(address _rebalancer)"
    },
    "0x6ef8d66d": {
        "type": "function",
        "value": "renouncePauser()"
    },
    "0x7e2a53af": {
        "type": "function",
        "value": "setIToken(address _iToken)"
    },
    "0x7ff9b596": {
        "type": "function",
        "value": "tokenPrice()"
    },
    "0x82ba653d": {
        "type": "function",
        "value": "setManualPlay(bool _manualPlay)"
    },
    "0x82dc1ec4": {
        "type": "function",
        "value": "addPauser(address account)"
    },
    "0x8456cb59": {
        "type": "function",
        "value": "pause()"
    },
    "0x8b95e335": {
        "type": "function",
        "value": "priceCalculator()"
    },
    "0x9fc7875b": {
        "type": "function",
        "value": "manualPlay()"
    },
    "0xb13bd491": {
        "type": "function",
        "value": "getAPRs()"
    },
    "0xbf959bb8": {
        "type": "function",
        "value": "currentTokensUsed(uint256 )"
    },
    "0xc4a664b8": {
        "type": "function",
        "value": "getParamsForRebalance(uint256 _newAmount)"
    },
    "0xc85c93aa": {
        "type": "function",
        "value": "redeemIdleToken(uint256 _amount,bool _skipRebalance,uint256[] _clientProtocolAmounts)"
    },
    "0xf2ce5806": {
        "type": "function",
        "value": "setProtocolWrapper(address _token,address _wrapper)"
    },
    "0xf2d50ba6": {
        "type": "function",
        "value": "lastITokenPrice()"
    },
    "0x83197ef0": {
        "type": "function",
        "value": "destroy()"
    },
    "0x913664b8": {
        "type": "function",
        "value": "discountedSwap(address caller,tuple desc,bytes data)"
    },
    "0x78e3214f": {
        "type": "function",
        "value": "rescueFunds(address token,uint256 amount)"
    },
    "0x6b1ef56f": {
        "type": "function",
        "value": "swap(address caller,tuple desc,bytes data)"
    },
    "0x2e95b6c8": {
        "type": "function",
        "value": "unoswap(address srcToken,uint256 amount,uint256 minReturn,bytes32[] pools)"
    },
    "0xa1251d75": {
        "type": "function",
        "value": "unoswapWithPermit(address srcToken,uint256 amount,uint256 minReturn,bytes32[] pools,bytes permit)"
    },
    "0x22102cdd": {
        "type": "function",
        "value": "discountedSwap(address caller,tuple desc,tuple[] calls)"
    },
    "0x32af3139": {
        "type": "function",
        "value": "swap(address caller,tuple desc,tuple[] calls)"
    },
    "0x4ca88867": {
        "type": "error",
        "value": "AccessDenied()"
    },
    "0xbd71636d": {
        "type": "error",
        "value": "AdvanceNonceFailed()"
    },
    "0x41a26a63": {
        "type": "error",
        "value": "AlreadyFilled()"
    },
    "0x1f1b8f61": {
        "type": "error",
        "value": "ArbitraryStaticCallFailed()"
    },
    "0xb2c02722": {
        "type": "error",
        "value": "BadPool()"
    },
    "0x5cd5d233": {
        "type": "error",
        "value": "BadSignature()"
    },
    "0xb12d13eb": {
        "type": "error",
        "value": "ETHTransferFailed()"
    },
    "0x67e7c0f6": {
        "type": "error",
        "value": "EmptyPools()"
    },
    "0x1b10b0f9": {
        "type": "error",
        "value": "EthDepositRejected()"
    },
    "0x110b8e73": {
        "type": "error",
        "value": "GetAmountCallFailed()"
    },
    "0xef356d7a": {
        "type": "error",
        "value": "IncorrectDataLength()"
    },
    "0xf4d678b8": {
        "type": "error",
        "value": "InsufficientBalance()"
    },
    "0x1841b4e1": {
        "type": "error",
        "value": "InvalidMsgValue()"
    },
    "0xf71fbda2": {
        "type": "error",
        "value": "InvalidatedOrder()"
    },
    "0xaa34b696": {
        "type": "error",
        "value": "MakingAmountExceeded()"
    },
    "0x481ea392": {
        "type": "error",
        "value": "MakingAmountTooLow()"
    },
    "0x00e2a522": {
        "type": "error",
        "value": "OnlyOneAmountShouldBeZero()"
    },
    "0xc56873ba": {
        "type": "error",
        "value": "OrderExpired()"
    },
    "0xd9e1c6dc": {
        "type": "error",
        "value": "PermitLengthTooLow()"
    },
    "0xb6629c02": {
        "type": "error",
        "value": "PredicateIsNotTrue()"
    },
    "0xd4dfdafe": {
        "type": "error",
        "value": "PrivateOrder()"
    },
    "0x17c2b1f1": {
        "type": "error",
        "value": "RFQBadSignature()"
    },
    "0xe8c66321": {
        "type": "error",
        "value": "RFQPrivateOrder()"
    },
    "0x07b6e79f": {
        "type": "error",
        "value": "RFQSwapWithZeroAmount()"
    },
    "0x692e45e0": {
        "type": "error",
        "value": "RFQZeroTargetIsForbidden()"
    },
    "0xc5f2be51": {
        "type": "error",
        "value": "ReentrancyDetected()"
    },
    "0xecef3664": {
        "type": "error",
        "value": "RemainingAmountIsZero()"
    },
    "0x85cd58dc": {
        "type": "error",
        "value": "ReservesCallFailed()"
    },
    "0xf32bec2f": {
        "type": "error",
        "value": "ReturnAmountIsNotEnough()"
    },
    "0x68275857": {
        "type": "error",
        "value": "SafePermitBadLength()"
    },
    "0xfb7f5079": {
        "type": "error",
        "value": "SafeTransferFailed()"
    },
    "0xf4059071": {
        "type": "error",
        "value": "SafeTransferFromFailed()"
    },
    "0x1934afc8": {
        "type": "error",
        "value": "SimulationResults(bool success,bytes res)"
    },
    "0xcf0b4d3a": {
        "type": "error",
        "value": "SwapAmountTooLarge()"
    },
    "0xfba5a276": {
        "type": "error",
        "value": "SwapWithZeroAmount()"
    },
    "0x7f902a93": {
        "type": "error",
        "value": "TakingAmountExceeded()"
    },
    "0x939c4204": {
        "type": "error",
        "value": "TakingAmountIncreased()"
    },
    "0xfb8ae129": {
        "type": "error",
        "value": "TakingAmountTooHigh()"
    },
    "0x70a03f48": {
        "type": "error",
        "value": "TransferFromMakerToTakerFailed()"
    },
    "0x478a5205": {
        "type": "error",
        "value": "TransferFromTakerToMakerFailed()"
    },
    "0xb838de96": {
        "type": "error",
        "value": "UnknownOrder()"
    },
    "0x49986e73": {
        "type": "error",
        "value": "WrongAmount()"
    },
    "0xbec74c85": {
        "type": "error",
        "value": "WrongGetter()"
    },
    "0xd92e233d": {
        "type": "error",
        "value": "ZeroAddress()"
    },
    "0x0262dde4": {
        "type": "error",
        "value": "ZeroMinReturn()"
    },
    "0x28ebf247": {
        "type": "error",
        "value": "ZeroReturnAmount()"
    },
    "0xb0c4d05f": {
        "type": "error",
        "value": "ZeroTargetIsForbidden()"
    },
    "0x72c244a8": {
        "type": "function",
        "value": "advanceNonce(uint8 amount)"
    },
    "0xbfa75143": {
        "type": "function",
        "value": "and(uint256 offsets,bytes data)"
    },
    "0xbf15fcd8": {
        "type": "function",
        "value": "arbitraryStaticCall(address target,bytes data)"
    },
    "0x3089c27d": {
        "type": "function",
        "value": "cancelOrder(tuple order)"
    },
    "0x825caba1": {
        "type": "function",
        "value": "cancelOrderRFQ(uint256 orderInfo)"
    },
    "0xbddccd35": {
        "type": "function",
        "value": "cancelOrderRFQ(uint256 orderInfo,uint256 additionalMask)"
    },
    "0x513000d6": {
        "type": "function",
        "value": "checkPredicate(tuple order)"
    },
    "0x84bd6d29": {
        "type": "function",
        "value": "clipperSwap(address clipperExchange,address srcToken,address dstToken,uint256 inputAmount,uint256 outputAmount,uint256 goodUntil,bytes32 r,bytes32 vs)"
    },
    "0x093d4fa5": {
        "type": "function",
        "value": "clipperSwapTo(address clipperExchange,address recipient,address srcToken,address dstToken,uint256 inputAmount,uint256 outputAmount,uint256 goodUntil,bytes32 r,bytes32 vs)"
    },
    "0xc805a666": {
        "type": "function",
        "value": "clipperSwapToWithPermit(address clipperExchange,address recipient,address srcToken,address dstToken,uint256 inputAmount,uint256 outputAmount,uint256 goodUntil,bytes32 r,bytes32 vs,bytes permit)"
    },
    "0x6fe7b0ba": {
        "type": "function",
        "value": "eq(uint256 value,bytes data)"
    },
    "0xa06869de": {
        "type": "function",
        "value": "fillOrder(tuple order,bytes signature,bytes interaction,uint256 makingAmount,uint256 takingAmount,uint256 skipPermitAndThresholdAmount)"
    },
    "0xfa1914c1": {
        "type": "function",
        "value": "fillOrderRFQ(tuple order,bytes signature,uint256 flagsAndAmount)"
    },
    "0xcaa35c67": {
        "type": "function",
        "value": "fillOrderRFQCompact(tuple order,bytes32 r,bytes32 vs,uint256 flagsAndAmount)"
    },
    "0xf275460b": {
        "type": "function",
        "value": "fillOrderRFQTo(tuple order,bytes signature,uint256 flagsAndAmount,address target)"
    },
    "0x9266ba5f": {
        "type": "function",
        "value": "fillOrderRFQToWithPermit(tuple order,bytes signature,uint256 flagsAndAmount,address target,bytes permit)"
    },
    "0x825a2581": {
        "type": "function",
        "value": "fillOrderTo(tuple order_,bytes signature,bytes interaction,uint256 makingAmount,uint256 takingAmount,uint256 skipPermitAndThresholdAmount,address target)"
    },
    "0xee184ad7": {
        "type": "function",
        "value": "fillOrderToWithPermit(tuple order,bytes signature,bytes interaction,uint256 makingAmount,uint256 takingAmount,uint256 skipPermitAndThresholdAmount,address target,bytes permit)"
    },
    "0x4f38e2b8": {
        "type": "function",
        "value": "gt(uint256 value,bytes data)"
    },
    "0xabace27a": {
        "type": "function",
        "value": "hashOrder(tuple order)"
    },
    "0xc53a0292": {
        "type": "function",
        "value": "increaseNonce()"
    },
    "0x56f16124": {
        "type": "function",
        "value": "invalidatorForOrderRFQ(address maker,uint256 slot)"
    },
    "0xca4ece22": {
        "type": "function",
        "value": "lt(uint256 value,bytes data)"
    },
    "0x70ae92d2": {
        "type": "function",
        "value": "nonce(address )"
    },
    "0xcf6fc6e3": {
        "type": "function",
        "value": "nonceEquals(address makerAddress,uint256 makerNonce)"
    },
    "0x74261145": {
        "type": "function",
        "value": "or(uint256 offsets,bytes data)"
    },
    "0xbc1ed74c": {
        "type": "function",
        "value": "remaining(bytes32 orderHash)"
    },
    "0x7e54f092": {
        "type": "function",
        "value": "remainingRaw(bytes32 orderHash)"
    },
    "0x942461bb": {
        "type": "function",
        "value": "remainingsRaw(bytes32[] orderHashes)"
    },
    "0xbd61951d": {
        "type": "function",
        "value": "simulate(address target,bytes data)"
    },
    "0xf770ee89": {
        "type": "function",
        "value": "swap(address executor,tuple desc,bytes permit,bytes data)"
    },
    "0x63592c2b": {
        "type": "function",
        "value": "timestampBelow(uint256 time)"
    },
    "0x2cc2878d": {
        "type": "function",
        "value": "timestampBelowAndNonceEquals(uint256 timeNonceAccount)"
    },
    "0xe449022e": {
        "type": "function",
        "value": "uniswapV3Swap(uint256 amount,uint256 minReturn,uint256[] pools)"
    },
    "0xbc80f1a8": {
        "type": "function",
        "value": "uniswapV3SwapTo(address recipient,uint256 amount,uint256 minReturn,uint256[] pools)"
    },
    "0x2521b930": {
        "type": "function",
        "value": "uniswapV3SwapToWithPermit(address recipient,address srcToken,uint256 amount,uint256 minReturn,uint256[] pools,bytes permit)"
    },
    "0x0502b1c5": {
        "type": "function",
        "value": "unoswap(address srcToken,uint256 amount,uint256 minReturn,uint256[] pools)"
    },
    "0xf78dc253": {
        "type": "function",
        "value": "unoswapTo(address recipient,address srcToken,uint256 amount,uint256 minReturn,uint256[] pools)"
    },
    "0x3c15fd91": {
        "type": "function",
        "value": "unoswapToWithPermit(address recipient,address srcToken,uint256 amount,uint256 minReturn,uint256[] pools,bytes permit)"
    },
    "0x06bf53d0": {
        "type": "function",
        "value": "LIMIT_ORDER_RFQ_TYPEHASH()"
    },
    "0xb0431182": {
        "type": "function",
        "value": "clipperSwap(address srcToken,address dstToken,uint256 amount,uint256 minReturn)"
    },
    "0x9994dd15": {
        "type": "function",
        "value": "clipperSwapTo(address recipient,address srcToken,address dstToken,uint256 amount,uint256 minReturn)"
    },
    "0xd6a92a5d": {
        "type": "function",
        "value": "clipperSwapToWithPermit(address recipient,address srcToken,address dstToken,uint256 amount,uint256 minReturn,bytes permit)"
    },
    "0x567fd222": {
        "type": "function",
        "value": "fillOrderRFQ(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount)"
    },
    "0xd5fa1f14": {
        "type": "function",
        "value": "fillOrderRFQTo(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount,address target)"
    },
    "0x36e3aaaf": {
        "type": "function",
        "value": "fillOrderRFQToWithPermit(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount,address target,bytes permit)"
    },
    "0x8059bc34": {
        "type": "function",
        "value": "getOrdersInfoRespectingBalancesAndAllowances(address token,address zrx,address zrxTokenProxy,tuple[] orders)"
    },
    "0xc91ad835": {
        "type": "function",
        "value": "marketSellOrdersProportion(address tokenSell,address tokenBuy,address zrxExchange,address zrxTokenProxy,tuple[] orders,bytes[] signatures,uint256 mul,uint256 div)"
    },
    "0xae4dd0fc": {
        "type": "function",
        "value": "withdrawAllToken(address token)"
    },
    "0xbf86d690": {
        "type": "function",
        "value": "isShutdown()"
    },
    "0xc9b27359": {
        "type": "function",
        "value": "infiniteApproveIfNeeded(address token,address to)"
    },
    "0xe8edc816": {
        "type": "function",
        "value": "spender()"
    },
    "0xf88309d7": {
        "type": "function",
        "value": "swap(address fromToken,address toToken,uint256 fromTokenAmount,uint256 minReturnAmount,uint256 guaranteedAmount,address referrer,address[] callAddresses,bytes callDataConcat,uint256[] starts,uint256[] gasLimitsAndValues)"
    },
    "0xfc0e74d1": {
        "type": "function",
        "value": "shutdown()"
    },
    "0xdb9ee7fa": {
        "type": "function",
        "value": "marketSellOrders(address makerAsset,address zrxExchange,address zrxTokenProxy,uint256 takerAssetFillAmount,tuple[] orders,bytes[] signatures)"
    },
    "0x54dd5f74": {
        "type": "function",
        "value": "LIMIT_ORDER_TYPEHASH()"
    },
    "0x961d5b1e": {
        "type": "function",
        "value": "and(address[] targets,bytes[] data)"
    },
    "0x36006bf3": {
        "type": "function",
        "value": "doublePrice(address oracle1,address oracle2,uint256 spread,uint256 amount)"
    },
    "0x32565d61": {
        "type": "function",
        "value": "eq(uint256 value,address target,bytes data)"
    },
    "0x6d95ebef": {
        "type": "function",
        "value": "fillOrder(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount,uint256 thresholdAmount)"
    },
    "0x66fb0e92": {
        "type": "function",
        "value": "fillOrderTo(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount,uint256 thresholdAmount,address target)"
    },
    "0x57505636": {
        "type": "function",
        "value": "fillOrderToWithPermit(tuple order,bytes signature,uint256 makingAmount,uint256 takingAmount,uint256 thresholdAmount,address target,bytes permit)"
    },
    "0xf4a215c3": {
        "type": "function",
        "value": "getMakerAmount(uint256 orderMakerAmount,uint256 orderTakerAmount,uint256 swapTakerAmount)"
    },
    "0x296637bf": {
        "type": "function",
        "value": "getTakerAmount(uint256 orderMakerAmount,uint256 orderTakerAmount,uint256 swapMakerAmount)"
    },
    "0x057702e9": {
        "type": "function",
        "value": "gt(uint256 value,address target,bytes data)"
    },
    "0x871919d5": {
        "type": "function",
        "value": "lt(uint256 value,address target,bytes data)"
    },
    "0xe6133301": {
        "type": "function",
        "value": "or(address[] targets,bytes[] data)"
    },
    "0x7f29a59d": {
        "type": "function",
        "value": "simulateCalls(address[] targets,bytes[] data)"
    },
    "0xc05435f1": {
        "type": "function",
        "value": "singlePrice(address oracle,uint256 inverseAndSpread,uint256 amount)"
    },
    "0x42200566": {
        "type": "error",
        "value": "CalldataEmptyButInitNotZero()"
    },
    "0x79c9df22": {
        "type": "error",
        "value": "FacetAddressIsNotZero()"
    },
    "0xc68ec83a": {
        "type": "error",
        "value": "FacetAddressIsZero()"
    },
    "0xe3500600": {
        "type": "error",
        "value": "FacetContainsNoCode()"
    },
    "0xa023275d": {
        "type": "error",
        "value": "FunctionAlreadyExists()"
    },
    "0xa9ad62f8": {
        "type": "error",
        "value": "FunctionDoesNotExist()"
    },
    "0xc3c5ec37": {
        "type": "error",
        "value": "FunctionIsImmutable()"
    },
    "0xe548e6b5": {
        "type": "error",
        "value": "IncorrectFacetCutAction()"
    },
    "0xc53ebed5": {
        "type": "error",
        "value": "InitReverted()"
    },
    "0x98116860": {
        "type": "error",
        "value": "InitZeroButCalldataNotEmpty()"
    },
    "0x7bc55950": {
        "type": "error",
        "value": "NoSelectorsInFace()"
    },
    "0x6ba355aa": {
        "type": "function",
        "value": "initializeTreeForMigration(bytes32[] _filledSubtrees,bytes32 _root)"
    },
    "0x88d761f2": {
        "type": "function",
        "value": "finishMigration()"
    },
    "0x916710aa": {
        "type": "function",
        "value": "migrateState(bytes32[] _commitments,bytes32[] _nullifierHashes)"
    },
    "0xb06faf62": {
        "type": "function",
        "value": "isMigrated()"
    },
    "0x0e752702": {
        "type": "function",
        "value": "repayBorrow(uint256 repayAmount)"
    },
    "0x173b9904": {
        "type": "function",
        "value": "reserveFactorMantissa()"
    },
    "0x17bfdfbc": {
        "type": "function",
        "value": "borrowBalanceCurrent(address account)"
    },
    "0x182df0f5": {
        "type": "function",
        "value": "exchangeRateStored()"
    },
    "0x2608f818": {
        "type": "function",
        "value": "repayBorrowBehalf(address borrower,uint256 repayAmount)"
    },
    "0x3af9e669": {
        "type": "function",
        "value": "balanceOfUnderlying(address owner)"
    },
    "0x3b1d21a2": {
        "type": "function",
        "value": "getCash()"
    },
    "0x4576b5db": {
        "type": "function",
        "value": "_setComptroller(address newComptroller)"
    },
    "0x47bd3718": {
        "type": "function",
        "value": "totalBorrows()"
    },
    "0x5fe3b567": {
        "type": "function",
        "value": "comptroller()"
    },
    "0x601a0bf1": {
        "type": "function",
        "value": "_reduceReserves(uint256 reduceAmount)"
    },
    "0x675d972c": {
        "type": "function",
        "value": "initialExchangeRateMantissa()"
    },
    "0x6c540baf": {
        "type": "function",
        "value": "accrualBlockNumber()"
    },
    "0x6f307dc3": {
        "type": "function",
        "value": "underlying()"
    },
    "0x73acee98": {
        "type": "function",
        "value": "totalBorrowsCurrent()"
    },
    "0x852a12e3": {
        "type": "function",
        "value": "redeemUnderlying(uint256 redeemAmount)"
    },
    "0x8f840ddd": {
        "type": "function",
        "value": "totalReserves()"
    },
    "0x95dd9193": {
        "type": "function",
        "value": "borrowBalanceStored(address account)"
    },
    "0xa6afed95": {
        "type": "function",
        "value": "accrueInterest()"
    },
    "0xaa5af0fd": {
        "type": "function",
        "value": "borrowIndex()"
    },
    "0xae9d70b0": {
        "type": "function",
        "value": "supplyRatePerBlock()"
    },
    "0xb2a02ff1": {
        "type": "function",
        "value": "seize(address liquidator,address borrower,uint256 seizeTokens)"
    },
    "0xbd6d894d": {
        "type": "function",
        "value": "exchangeRateCurrent()"
    },
    "0xc37f68e2": {
        "type": "function",
        "value": "getAccountSnapshot(address account)"
    },
    "0xc5ebeaec": {
        "type": "function",
        "value": "borrow(uint256 borrowAmount)"
    },
    "0xf2b3abbd": {
        "type": "function",
        "value": "_setInterestRateModel(address newInterestRateModel)"
    },
    "0xf3fdb15a": {
        "type": "function",
        "value": "interestRateModel()"
    },
    "0xf5e3c462": {
        "type": "function",
        "value": "liquidateBorrow(address borrower,uint256 repayAmount,address cTokenCollateral)"
    },
    "0xf8f9da28": {
        "type": "function",
        "value": "borrowRatePerBlock()"
    },
    "0xfca7820b": {
        "type": "function",
        "value": "_setReserveFactor(uint256 newReserveFactorMantissa)"
    },
    "0xfe9c44ae": {
        "type": "function",
        "value": "isCToken()"
    },
    "0x1413dc7d": {
        "type": "function",
        "value": "CUBE_COUNTER_KEY()"
    },
    "0x0f532d18": {
        "type": "function",
        "value": "MSG_SENDER_KEY()"
    },
    "0x87c13943": {
        "type": "function",
        "value": "PERCENTAGE_BASE()"
    },
    "0xfa2901a5": {
        "type": "function",
        "value": "POSTPROCESS_SIG()"
    },
    "0x38c5c08e": {
        "type": "function",
        "value": "batchExec(address[] tos,bytes32[] configs,bytes[] datas)"
    },
    "0x99eb59b9": {
        "type": "function",
        "value": "cache(bytes32 )"
    },
    "0x71938509": {
        "type": "function",
        "value": "execs(address[] tos,bytes32[] configs,bytes[] datas)"
    },
    "0xdc9031c4": {
        "type": "function",
        "value": "stack(uint256 )"
    },
    "0x7388614b": {
        "type": "function",
        "value": "buyCover(address coveredContractAddress,bytes4 coverCurrency,uint256[] coverDetails,uint16 coverPeriod,uint8 _v,bytes32 _r,bytes32 _s)"
    },
    "0x445def2e": {
        "type": "function",
        "value": "distributorFeePercentage()"
    },
    "0xdc4645c3": {
        "type": "function",
        "value": "getCoverStatus(uint256 tokenId)"
    },
    "0x4e170591": {
        "type": "function",
        "value": "getMemberRoles()"
    },
    "0xb4634a5e": {
        "type": "function",
        "value": "nxMaster()"
    },
    "0x91be3713": {
        "type": "function",
        "value": "nxmTokenApprove(address _spender,uint256 _value)"
    },
    "0x3500e4a9": {
        "type": "function",
        "value": "redeemClaim(uint256 tokenId)"
    },
    "0x74bd0ace": {
        "type": "function",
        "value": "sellNXMTokens(uint256 amount)"
    },
    "0x6aa14a96": {
        "type": "function",
        "value": "submitClaim(uint256 tokenId)"
    },
    "0x4ed75d47": {
        "type": "function",
        "value": "switchMembership(address _newMembership)"
    },
    "0x4f6ccce7": {
        "type": "function",
        "value": "tokenByIndex(uint256 index)"
    },
    "0x2f745c59": {
        "type": "function",
        "value": "tokenOfOwnerByIndex(address owner,uint256 index)"
    },
    "0x4f64b2be": {
        "type": "function",
        "value": "tokens(uint256 i)"
    },
    "0x522f6815": {
        "type": "function",
        "value": "withdrawEther(address recipient,uint256 amount)"
    },
    "0x165ffdcc": {
        "type": "function",
        "value": "withdrawTokens(address _recipient,uint256 _amount,bytes4 _currency)"
    },
    "0xe9744712": {
        "type": "function",
        "value": "withdrawableTokens(bytes4 )"
    },
    "0xe320176b": {
        "type": "error",
        "value": "NonZeroValue()"
    },
    "0x3d2f7ef6": {
        "type": "error",
        "value": "TokenNonExistent(uint256 tokenId)"
    },
    "0xbb690064": {
        "type": "error",
        "value": "TokenNonOwner(uint256 tokenId)"
    },
    "0x595162dd": {
        "type": "error",
        "value": "Unapprovable()"
    },
    "0x072b78c7": {
        "type": "error",
        "value": "Untransferable()"
    },
    "0xbb4b5734": {
        "type": "function",
        "value": "EXPIRATION()"
    },
    "0x1852e8d9": {
        "type": "function",
        "value": "calculateReward(address account,uint256 tokenId)"
    },
    "0x068c526f": {
        "type": "function",
        "value": "calculateRewards(address account,uint256[] tokenIds)"
    },
    "0x5eac6239": {
        "type": "function",
        "value": "claimRewards(uint256[] tokenIds)"
    },
    "0x598b8e71": {
        "type": "function",
        "value": "deposit(uint256[] tokenIds)"
    },
    "0xe3a9db1a": {
        "type": "function",
        "value": "depositsOf(address account)"
    },
    "0x276184ae": {
        "type": "function",
        "value": "erc20Address()"
    },
    "0x2352a864": {
        "type": "function",
        "value": "erc721Address()"
    },
    "0x940414ce": {
        "type": "function",
        "value": "findRate(uint256 tokenId)"
    },
    "0x5773d778": {
        "type": "function",
        "value": "pauseTokenEmissions()"
    },
    "0x3320d501": {
        "type": "function",
        "value": "pausedDepositBlocks()"
    },
    "0xcea01962": {
        "type": "function",
        "value": "rewardRate(uint256 )"
    },
    "0x9a03d9a3": {
        "type": "function",
        "value": "setERC721Address(address _newErc721Address)"
    },
    "0x4a39fa80": {
        "type": "function",
        "value": "setErc20Address(address _newErc20Address)"
    },
    "0xdb3b947f": {
        "type": "function",
        "value": "setStakedSealsAddress(address _stakingContractV1Address)"
    },
    "0x7c79d73b": {
        "type": "function",
        "value": "stakeSealsV1()"
    },
    "0x5e1bef32": {
        "type": "function",
        "value": "staked(uint256 )"
    },
    "0x335e15a2": {
        "type": "function",
        "value": "stakedInfoOf(uint256[] tokenIds)"
    },
    "0x19a249a8": {
        "type": "function",
        "value": "toggleEmissions()"
    },
    "0xc620994b": {
        "type": "function",
        "value": "togglePauseDepositBlocks()"
    },
    "0xb32534cf": {
        "type": "function",
        "value": "updateRewardRate(uint256 index,uint256 rate)"
    },
    "0x983d95ce": {
        "type": "function",
        "value": "withdraw(uint256[] tokenIds)"
    },
    "0x315a095d": {
        "type": "function",
        "value": "withdrawTokens(uint256 amount)"
    },
    "0x98891923": {
        "type": "error",
        "value": "BadReturnValueFromERC20OnTransfer(address token,address from,address to,uint256 amount)"
    },
    "0x93daadf2": {
        "type": "error",
        "value": "ChannelClosed(address channel)"
    },
    "0x924e341e": {
        "type": "error",
        "value": "ChannelStatusAlreadySet(address channel,bool isOpen)"
    },
    "0xafc445e2": {
        "type": "error",
        "value": "ERC1155BatchTransferGenericFailure(address token,address from,address to,uint256[] identifiers,uint256[] amounts)"
    },
    "0xeba2084c": {
        "type": "error",
        "value": "Invalid1155BatchTransferEncoding()"
    },
    "0x6d5769be": {
        "type": "error",
        "value": "InvalidController()"
    },
    "0xefcc00b1": {
        "type": "error",
        "value": "InvalidERC721TransferAmount()"
    },
    "0x7932f1fc": {
        "type": "error",
        "value": "InvalidItemType()"
    },
    "0x91b3e514": {
        "type": "error",
        "value": "MissingItemAmount()"
    },
    "0x5f15d672": {
        "type": "error",
        "value": "NoContract(address account)"
    },
    "0xf486bc87": {
        "type": "error",
        "value": "TokenTransferGenericFailure(address token,address from,address to,uint256 identifier,uint256 amount)"
    },
    "0x6ab37ce7": {
        "type": "error",
        "value": "UnusedItemParameters()"
    },
    "0xfab5b395": {
        "type": "function",
        "value": "execute(tuple[] transfers)"
    },
    "0x9b3532bc": {
        "type": "function",
        "value": "executeBatch1155(tuple[] batchTransfers)"
    },
    "0x6cc92b6e": {
        "type": "function",
        "value": "executeWithBatch1155(tuple[] standardTransfers,tuple[] batchTransfers)"
    },
    "0xc4e8fcb5": {
        "type": "function",
        "value": "updateChannel(address channel,bool isOpen)"
    },
    "0x81766d95": {
        "type": "function",
        "value": "ownerSetSpreadPremium(uint256 marketId,tuple spreadPremium)"
    },
    "0x052f72d7": {
        "type": "function",
        "value": "getIsGlobalOperator(address operator)"
    },
    "0x062bd3e9": {
        "type": "function",
        "value": "getMarketTokenAddress(uint256 marketId)"
    },
    "0x121fb72f": {
        "type": "function",
        "value": "ownerSetInterestSetter(uint256 marketId,address interestSetter)"
    },
    "0x540e6f18": {
        "type": "function",
        "value": "getAccountValues(tuple account)"
    },
    "0x13368364": {
        "type": "function",
        "value": "getMarketPriceOracle(uint256 marketId)"
    },
    "0x197f0f05": {
        "type": "function",
        "value": "getMarketInterestSetter(uint256 marketId)"
    },
    "0x1a7777bb": {
        "type": "function",
        "value": "getMarketSpreadPremium(uint256 marketId)"
    },
    "0x295c39a5": {
        "type": "function",
        "value": "getNumMarkets()"
    },
    "0x2a560845": {
        "type": "function",
        "value": "ownerWithdrawUnsupportedTokens(address token,address recipient)"
    },
    "0x40d0b979": {
        "type": "function",
        "value": "ownerSetMinBorrowedValue(tuple minBorrowedValue)"
    },
    "0x08aadfe5": {
        "type": "function",
        "value": "ownerSetLiquidationSpread(tuple spread)"
    },
    "0xc44f3c13": {
        "type": "function",
        "value": "ownerSetEarningsRate(tuple earningsRate)"
    },
    "0x3a031bf0": {
        "type": "function",
        "value": "getIsLocalOperator(address owner,address operator)"
    },
    "0xd8830f97": {
        "type": "function",
        "value": "getAccountPar(tuple account,uint256 marketId)"
    },
    "0xea179858": {
        "type": "function",
        "value": "ownerSetMarginPremium(uint256 marketId,tuple marginPremium)"
    },
    "0x4f3c1542": {
        "type": "function",
        "value": "getMarginRatio()"
    },
    "0x56ea84b2": {
        "type": "function",
        "value": "getMarketCurrentIndex(uint256 marketId)"
    },
    "0x5ac7d17c": {
        "type": "function",
        "value": "getMarketIsClosing(uint256 marketId)"
    },
    "0x69794795": {
        "type": "function",
        "value": "getRiskParams()"
    },
    "0x717f6629": {
        "type": "function",
        "value": "getAccountBalances(tuple account)"
    },
    "0x7e9eaf41": {
        "type": "function",
        "value": "getMinBorrowedValue()"
    },
    "0x2e869633": {
        "type": "function",
        "value": "setOperators(tuple[] args)"
    },
    "0x8928378e": {
        "type": "function",
        "value": "getMarketPrice(uint256 marketId)"
    },
    "0x8f6bc659": {
        "type": "function",
        "value": "ownerWithdrawExcessTokens(uint256 marketId,address recipient)"
    },
    "0x6d3d5117": {
        "type": "function",
        "value": "ownerAddMarket(address token,address priceOracle,address interestSetter,tuple marginPremium,tuple spreadPremium)"
    },
    "0xfabba65e": {
        "type": "function",
        "value": "operate(tuple[] accounts,tuple[] actions)"
    },
    "0xb548b892": {
        "type": "function",
        "value": "getMarketWithInfo(uint256 marketId)"
    },
    "0x23d4ecf9": {
        "type": "function",
        "value": "ownerSetMarginRatio(tuple ratio)"
    },
    "0xc1460942": {
        "type": "function",
        "value": "getLiquidationSpread()"
    },
    "0x163fa34c": {
        "type": "function",
        "value": "getAccountWei(tuple account,uint256 marketId)"
    },
    "0xcb04a34c": {
        "type": "function",
        "value": "getMarketTotalPar(uint256 marketId)"
    },
    "0xd24c48bc": {
        "type": "function",
        "value": "getLiquidationSpreadForPair(uint256 heldMarketId,uint256 owedMarketId)"
    },
    "0xd5ecf7c5": {
        "type": "function",
        "value": "getNumExcessTokens(uint256 marketId)"
    },
    "0xdeec053d": {
        "type": "function",
        "value": "getMarketCachedIndex(uint256 marketId)"
    },
    "0xcc789c6a": {
        "type": "function",
        "value": "getAccountStatus(tuple account)"
    },
    "0xe5520228": {
        "type": "function",
        "value": "getEarningsRate()"
    },
    "0xe8e72f75": {
        "type": "function",
        "value": "ownerSetPriceOracle(uint256 marketId,address priceOracle)"
    },
    "0xeb1c6e6b": {
        "type": "function",
        "value": "getRiskLimits()"
    },
    "0xeb44fdd3": {
        "type": "function",
        "value": "getMarket(uint256 marketId)"
    },
    "0xef6957d0": {
        "type": "function",
        "value": "ownerSetIsClosing(uint256 marketId,bool isClosing)"
    },
    "0xf2901ae2": {
        "type": "function",
        "value": "ownerSetGlobalOperator(address operator,bool approved)"
    },
    "0x19d42a84": {
        "type": "function",
        "value": "getAdjustedAccountValues(tuple account)"
    },
    "0xfd04b606": {
        "type": "function",
        "value": "getMarketMarginPremium(uint256 marketId)"
    },
    "0xfd47eda6": {
        "type": "function",
        "value": "getMarketInterestRate(uint256 marketId)"
    },
    "0x9de66604": {
        "type": "function",
        "value": "erc20old()"
    },
    "0xd9ee369a": {
        "type": "function",
        "value": "withdrawDifferentToken(address _differentToken,bool _erc20old)"
    },
    "0x972fdd26": {
        "type": "function",
        "value": "getFunctionImplementation(bytes4 selector)"
    },
    "0x15dacbea": {
        "type": "function",
        "value": "transferFrom(address token,address from,address to,uint256 amount)"
    },
    "0x06df453e": {
        "type": "function",
        "value": "approveDelegate(address delegate)"
    },
    "0x0c511d11": {
        "type": "function",
        "value": "isOrderCancelled(bytes32 orderHash)"
    },
    "0x0f8eeeb0": {
        "type": "function",
        "value": "isAccountLiquidatable(address user,uint16 marketID)"
    },
    "0x101424d9": {
        "type": "function",
        "value": "getPoolCashableAmount(address asset)"
    },
    "0x13a30013": {
        "type": "function",
        "value": "getMarket(uint16 marketID)"
    },
    "0x168ba56c": {
        "type": "function",
        "value": "liquidateAccount(address user,uint16 marketID)"
    },
    "0x1a8cd123": {
        "type": "function",
        "value": "getMarketTransferableAmount(uint16 marketID,address asset,address user)"
    },
    "0x21028767": {
        "type": "function",
        "value": "updateMarket(uint16 marketID,uint256 newAuctionRatioStart,uint256 newAuctionRatioPerBlock,uint256 newLiquidateRate,uint256 newWithdrawRate)"
    },
    "0x2a2b1240": {
        "type": "function",
        "value": "fillAuctionWithAmount(uint32 auctionID,uint256 amount)"
    },
    "0x2d6a6025": {
        "type": "function",
        "value": "getAuctionDetails(uint32 auctionID)"
    },
    "0x30b8b2c6": {
        "type": "function",
        "value": "getAsset(address assetAddress)"
    },
    "0x316e5b1e": {
        "type": "function",
        "value": "getAmountSupplied(address asset,address user)"
    },
    "0x325b7b03": {
        "type": "function",
        "value": "getHydroTokenAddress()"
    },
    "0x3560c5cd": {
        "type": "function",
        "value": "exitIncentiveSystem()"
    },
    "0x3b481b0a": {
        "type": "function",
        "value": "createAsset(address asset,address oracleAddress,address interestModelAddress,string poolTokenName,string poolTokenSymbol,uint8 poolTokenDecimals)"
    },
    "0x3e5893be": {
        "type": "function",
        "value": "canMatchOrdersFrom(address relayer)"
    },
    "0x43239e9b": {
        "type": "function",
        "value": "getInterestRates(address asset,uint256 extraBorrowAmount)"
    },
    "0x4376abf1": {
        "type": "function",
        "value": "getDiscountedRate(address user)"
    },
    "0x53bab42e": {
        "type": "function",
        "value": "getAccountDetails(address user,uint16 marketID)"
    },
    "0x55559a86": {
        "type": "function",
        "value": "getOrderFilledAmount(bytes32 orderHash)"
    },
    "0x5be53e74": {
        "type": "function",
        "value": "getCurrentAuctions()"
    },
    "0x5dae042d": {
        "type": "function",
        "value": "getAssetOraclePrice(address assetAddress)"
    },
    "0x637b93ed": {
        "type": "function",
        "value": "getInsuranceBalance(address asset)"
    },
    "0x68da10ae": {
        "type": "function",
        "value": "getTotalSupply(address asset)"
    },
    "0x762a4862": {
        "type": "function",
        "value": "updateAsset(address asset,address oracleAddress,address interestModelAddress)"
    },
    "0xa732b320": {
        "type": "function",
        "value": "isValidSignature(bytes32 hash,address signerAddress,tuple signature)"
    },
    "0xc76d7b94": {
        "type": "function",
        "value": "batch(tuple[] actions)"
    },
    "0x8538d14e": {
        "type": "function",
        "value": "getTotalBorrow(address asset)"
    },
    "0x7495d9fa": {
        "type": "function",
        "value": "createMarket(tuple market)"
    },
    "0x8ea17c7b": {
        "type": "function",
        "value": "getAmountBorrowed(address asset,address user,uint16 marketID)"
    },
    "0x929066f5": {
        "type": "function",
        "value": "isParticipant(address relayer)"
    },
    "0x9c61a3dd": {
        "type": "function",
        "value": "getAllMarketsCount()"
    },
    "0x91522a9a": {
        "type": "function",
        "value": "matchOrders(tuple params)"
    },
    "0xa6fc9191": {
        "type": "function",
        "value": "updateAuctionInitiatorRewardRatio(uint256 newInitiatorRewardRatio)"
    },
    "0xb31610db": {
        "type": "function",
        "value": "getIndex(address asset)"
    },
    "0xb875bdf1": {
        "type": "function",
        "value": "joinIncentiveSystem()"
    },
    "0xbb6d5838": {
        "type": "function",
        "value": "updateInsuranceRatio(uint256 newInsuranceRatio)"
    },
    "0xc747fcc0": {
        "type": "function",
        "value": "updateDiscountConfig(bytes32 newConfig)"
    },
    "0xddf1f0f4": {
        "type": "function",
        "value": "setMarketBorrowUsability(uint16 marketID,bool usability)"
    },
    "0xe45c1879": {
        "type": "function",
        "value": "getAuctionsCount()"
    },
    "0xee684955": {
        "type": "function",
        "value": "marketBalanceOf(uint16 marketID,address asset,address user)"
    },
    "0xf7888aec": {
        "type": "function",
        "value": "balanceOf(address token,address user)"
    },
    "0xfa352c00": {
        "type": "function",
        "value": "revokeDelegate(address delegate)"
    },
    "0xa9d97a93": {
        "type": "function",
        "value": "provideDelegateOrder(tuple order,address delegate)"
    },
    "0x93eca257": {
        "type": "function",
        "value": "swap(tuple order)"
    },
    "0x8ea83031": {
        "type": "function",
        "value": "swapContract()"
    },
    "0x4780eac1": {
        "type": "function",
        "value": "wethContract()"
    },
    "0x0f15f4c0": {
        "type": "function",
        "value": "activate()"
    },
    "0xb040785a": {
        "type": "function",
        "value": "availableToBorrowETH()"
    },
    "0x929c8849": {
        "type": "function",
        "value": "availableToBorrowReserve()"
    },
    "0xa75ac608": {
        "type": "function",
        "value": "claimInsurance()"
    },
    "0xf77c4791": {
        "type": "function",
        "value": "controller()"
    },
    "0xa06d083c": {
        "type": "function",
        "value": "credit()"
    },
    "0x0dca59c1": {
        "type": "function",
        "value": "debt()"
    },
    "0x2851e2e0": {
        "type": "function",
        "value": "debtShare(address _lp)"
    },
    "0xde5f6268": {
        "type": "function",
        "value": "depositAll()"
    },
    "0xd389800f": {
        "type": "function",
        "value": "earn()"
    },
    "0x9f287e16": {
        "type": "function",
        "value": "getAaveOracle()"
    },
    "0xf0722322": {
        "type": "function",
        "value": "getReservePrice()"
    },
    "0x11dddca4": {
        "type": "function",
        "value": "getReservePriceETH(address reserve)"
    },
    "0x468f02d2": {
        "type": "function",
        "value": "getUnderlyingPrice()"
    },
    "0xdd90a791": {
        "type": "function",
        "value": "getUnderlyingPriceETH(uint256 _amount)"
    },
    "0x5aa6e675": {
        "type": "function",
        "value": "governance()"
    },
    "0x018ee9b7": {
        "type": "function",
        "value": "harvest(address reserve,uint256 amount)"
    },
    "0x22841f01": {
        "type": "function",
        "value": "healthFactor()"
    },
    "0x89cf3204": {
        "type": "function",
        "value": "insurance()"
    },
    "0xcf309012": {
        "type": "function",
        "value": "locked()"
    },
    "0x6fb49d73": {
        "type": "function",
        "value": "ltv()"
    },
    "0x6ac5db19": {
        "type": "function",
        "value": "max()"
    },
    "0x62f5548d": {
        "type": "function",
        "value": "maxSafeETH()"
    },
    "0x27afd028": {
        "type": "function",
        "value": "maxWithdrawal(address account)"
    },
    "0x6ad4e251": {
        "type": "function",
        "value": "over(uint256 _amount)"
    },
    "0x7eaef50c": {
        "type": "function",
        "value": "over()"
    },
    "0x22867d78": {
        "type": "function",
        "value": "repay(address reserve,uint256 amount)"
    },
    "0xfa3ae6dc": {
        "type": "function",
        "value": "repayAll()"
    },
    "0xcd3293de": {
        "type": "function",
        "value": "reserve()"
    },
    "0x7fd42617": {
        "type": "function",
        "value": "safeWithdraw()"
    },
    "0x92eefe9b": {
        "type": "function",
        "value": "setController(address _controller)"
    },
    "0x31111708": {
        "type": "function",
        "value": "setHealthFactor(uint256 _hf)"
    },
    "0x1b93e5b0": {
        "type": "function",
        "value": "shouldBorrow()"
    },
    "0xae2c1d5f": {
        "type": "function",
        "value": "shouldRebalance()"
    },
    "0x853828b6": {
        "type": "function",
        "value": "withdrawAll()"
    },
    "0x010f3237": {
        "type": "function",
        "value": "exitExcessPie()"
    },
    "0x207e6467": {
        "type": "function",
        "value": "pieBalances(address )"
    },
    "0x20eb1342": {
        "type": "function",
        "value": "withdrawVatBalance(uint256 _rad)"
    },
    "0x29731b0e": {
        "type": "function",
        "value": "totalPie()"
    },
    "0x4c255c97": {
        "type": "function",
        "value": "MAX_PERCENTAGE()"
    },
    "0x5b56d6f5": {
        "type": "function",
        "value": "setInterestFee(uint256 _interestFee)"
    },
    "0xa75df498": {
        "type": "function",
        "value": "interestFee()"
    },
    "0xcb13cddb": {
        "type": "function",
        "value": "deposited(address )"
    },
    "0x0674763c": {
        "type": "function",
        "value": "assert(bool assertion)"
    },
    "0x13af4035": {
        "type": "function",
        "value": "setOwner(address owner_)"
    },
    "0x2295115b": {
        "type": "function",
        "value": "adminWithdraw(address token,uint256 amount,address user,uint256 nonce,uint8 v,bytes32 r,bytes32 s,uint256 feeWithdrawal)"
    },
    "0x254dcfe2": {
        "type": "function",
        "value": "lastActiveTransaction(address )"
    },
    "0x3823d66c": {
        "type": "function",
        "value": "withdrawn(bytes32 )"
    },
    "0x429b62e5": {
        "type": "function",
        "value": "admins(address )"
    },
    "0x4b0bddd2": {
        "type": "function",
        "value": "setAdmin(address admin,bool isAdmin)"
    },
    "0x508493bc": {
        "type": "function",
        "value": "tokens(address ,address )"
    },
    "0x65e17c9d": {
        "type": "function",
        "value": "feeAccount()"
    },
    "0x83dbb27b": {
        "type": "function",
        "value": "invalidOrder(address )"
    },
    "0x893d20e8": {
        "type": "function",
        "value": "getOwner()"
    },
    "0xa293d1e8": {
        "type": "function",
        "value": "safeSub(uint256 a,uint256 b)"
    },
    "0xb12de559": {
        "type": "function",
        "value": "invalidateOrdersBefore(address user,uint256 nonce)"
    },
    "0xd05c78da": {
        "type": "function",
        "value": "safeMul(uint256 a,uint256 b)"
    },
    "0xd0e30db0": {
        "type": "function",
        "value": "deposit()"
    },
    "0xd5813323": {
        "type": "function",
        "value": "traded(bytes32 )"
    },
    "0xdd93c74a": {
        "type": "function",
        "value": "setInactivityReleasePeriod(uint256 expiry)"
    },
    "0xe6cb9013": {
        "type": "function",
        "value": "safeAdd(uint256 a,uint256 b)"
    },
    "0xef343588": {
        "type": "function",
        "value": "trade(uint256[8] tradeValues,address[4] tradeAddresses,uint8[2] v,bytes32[4] rs)"
    },
    "0xf31174ee": {
        "type": "function",
        "value": "inactivityReleasePeriod()"
    },
    "0xf7213db6": {
        "type": "function",
        "value": "orderFills(bytes32 )"
    },
    "0xbb7b8b80": {
        "type": "function",
        "value": "get_virtual_price()"
    },
    "0x0b4c7e4d": {
        "type": "function",
        "value": "add_liquidity(uint256[2] amounts,uint256 min_mint_amount)"
    },
    "0x5e0d443f": {
        "type": "function",
        "value": "get_dy(int128 i,int128 j,uint256 dx)"
    },
    "0x07211ef7": {
        "type": "function",
        "value": "get_dy_underlying(int128 i,int128 j,uint256 dx)"
    },
    "0x17f1bdf0": {
        "type": "function",
        "value": "exchange(int128 i,int128 j,uint256 dx,uint256 min_dy,uint256 deadline)"
    },
    "0x882ff7fc": {
        "type": "function",
        "value": "exchange_underlying(int128 i,int128 j,uint256 dx,uint256 min_dy,uint256 deadline)"
    },
    "0x59639fa9": {
        "type": "function",
        "value": "remove_liquidity(uint256 _amount,uint256 deadline,uint256[2] min_amounts)"
    },
    "0xe3103273": {
        "type": "function",
        "value": "remove_liquidity_imbalance(uint256[2] _amounts,uint256 _max_burn_amount)"
    },
    "0xe1ceefda": {
        "type": "function",
        "value": "commit_new_parameters(int128 amplification,int128 new_fee,int128 new_admin_fee)"
    },
    "0x2a7dd7cd": {
        "type": "function",
        "value": "apply_new_parameters()"
    },
    "0x226840fb": {
        "type": "function",
        "value": "revert_new_parameters()"
    },
    "0x6b441a40": {
        "type": "function",
        "value": "commit_transfer_ownership(address _owner)"
    },
    "0x6a1c05ae": {
        "type": "function",
        "value": "apply_transfer_ownership()"
    },
    "0x86fbf193": {
        "type": "function",
        "value": "revert_transfer_ownership()"
    },
    "0x30c54085": {
        "type": "function",
        "value": "withdraw_admin_fees()"
    },
    "0xe3698853": {
        "type": "function",
        "value": "kill_me()"
    },
    "0x3046f972": {
        "type": "function",
        "value": "unkill_me()"
    },
    "0x23746eb8": {
        "type": "function",
        "value": "coins(int128 arg0)"
    },
    "0xb739953e": {
        "type": "function",
        "value": "underlying_coins(int128 arg0)"
    },
    "0x065a80d8": {
        "type": "function",
        "value": "balances(int128 arg0)"
    },
    "0xf446c1d0": {
        "type": "function",
        "value": "A()"
    },
    "0xddca3f43": {
        "type": "function",
        "value": "fee()"
    },
    "0xfee3f7f9": {
        "type": "function",
        "value": "admin_fee()"
    },
    "0x405e28f8": {
        "type": "function",
        "value": "admin_actions_deadline()"
    },
    "0xe0a0b586": {
        "type": "function",
        "value": "transfer_ownership_deadline()"
    },
    "0xb4b577ad": {
        "type": "function",
        "value": "future_A()"
    },
    "0x58680d0b": {
        "type": "function",
        "value": "future_fee()"
    },
    "0xe3824462": {
        "type": "function",
        "value": "future_admin_fee()"
    },
    "0x1ec0cdc1": {
        "type": "function",
        "value": "future_owner()"
    },
    "0xcf7a1d77": {
        "type": "function",
        "value": "initialize(address _logic,address _admin,bytes _data)"
    },
    "0xd1f57894": {
        "type": "function",
        "value": "initialize(address _logic,bytes _data)"
    },
    "0x48a0d754": {
        "type": "function",
        "value": "available()"
    },
    "0xf8897945": {
        "type": "function",
        "value": "min()"
    },
    "0xab033ea9": {
        "type": "function",
        "value": "setGovernance(address _governance)"
    },
    "0x45dc3dd8": {
        "type": "function",
        "value": "setMin(uint256 _min)"
    },
    "0x024c7ec7": {
        "type": "function",
        "value": "restrictRegistryUpdate(bool _adminOnly)"
    },
    "0x02ef521e": {
        "type": "function",
        "value": "registerEtherToken(address _token,bool _register)"
    },
    "0x046dc166": {
        "type": "function",
        "value": "setSignerAddress(address _signerAddress)"
    },
    "0x0c8496cc": {
        "type": "function",
        "value": "getReturnByPath(address[] _path,uint256 _amount)"
    },
    "0x1134269a": {
        "type": "function",
        "value": "convertForPrioritized(address[] _path,uint256 _amount,uint256 _minReturn,address _for,uint256 _block,uint256 _nonce,uint8 _v,bytes32 _r,bytes32 _s)"
    },
    "0x2978c10e": {
        "type": "function",
        "value": "claimAndConvertFor2(address[] _path,uint256 _amount,uint256 _minReturn,address _for,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0x49d10b64": {
        "type": "function",
        "value": "updateRegistry()"
    },
    "0x4de006cb": {
        "type": "function",
        "value": "convertForPrioritized4(address[] _path,uint256 _amount,uint256 _minReturn,address _for,uint256[] _signature,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0x569706eb": {
        "type": "function",
        "value": "convert2(address[] _path,uint256 _amount,uint256 _minReturn,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0x5b7633d0": {
        "type": "function",
        "value": "signerAddress()"
    },
    "0x5d732ff2": {
        "type": "function",
        "value": "maxAffiliateFee()"
    },
    "0x5e35359e": {
        "type": "function",
        "value": "withdrawTokens(address _token,address _to,uint256 _amount)"
    },
    "0x61cd756e": {
        "type": "function",
        "value": "prevRegistry()"
    },
    "0x6896b999": {
        "type": "function",
        "value": "xConvertPrioritized(address[] _path,uint256 _amount,uint256 _minReturn,bytes32 _toBlockchain,bytes32 _to,uint256 _conversionId,uint256 _block,uint8 _v,bytes32 _r,bytes32 _s)"
    },
    "0x6b08f2ef": {
        "type": "function",
        "value": "convertForPrioritized2(address[] _path,uint256 _amount,uint256 _minReturn,address _for,uint256 _block,uint8 _v,bytes32 _r,bytes32 _s)"
    },
    "0x79ba5097": {
        "type": "function",
        "value": "acceptOwnership()"
    },
    "0x7b103999": {
        "type": "function",
        "value": "registry()"
    },
    "0x8077ccf7": {
        "type": "function",
        "value": "etherTokens(address )"
    },
    "0x89e63a60": {
        "type": "function",
        "value": "conversionHashes(bytes32 )"
    },
    "0x8dc56657": {
        "type": "function",
        "value": "xConvertPrioritized3(address[] _path,uint256 _amount,uint256 _minReturn,bytes32 _toBlockchain,bytes32 _to,uint256 _conversionId,uint256[] _signature,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0x92d1abb7": {
        "type": "function",
        "value": "CONVERTER_CONVERSION_WHITELIST()"
    },
    "0xab6214ce": {
        "type": "function",
        "value": "convertFor2(address[] _path,uint256 _amount,uint256 _minReturn,address _for,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0xb1e9932b": {
        "type": "function",
        "value": "claimAndConvertFor(address[] _path,uint256 _amount,uint256 _minReturn,address _for)"
    },
    "0xb406d386": {
        "type": "function",
        "value": "convertForPrioritized3(address[] _path,uint256 _amount,uint256 _minReturn,address _for,uint256 _customVal,uint256 _block,uint8 _v,bytes32 _r,bytes32 _s)"
    },
    "0xb4a176d3": {
        "type": "function",
        "value": "restoreRegistry()"
    },
    "0xc52173de": {
        "type": "function",
        "value": "xConvert(address[] _path,uint256 _amount,uint256 _minReturn,bytes32 _toBlockchain,bytes32 _to,uint256 _conversionId)"
    },
    "0xc7ba24bc": {
        "type": "function",
        "value": "claimAndConvert(address[] _path,uint256 _amount,uint256 _minReturn)"
    },
    "0xc976a359": {
        "type": "function",
        "value": "adminOnly()"
    },
    "0xc98fefed": {
        "type": "function",
        "value": "convertFor(address[] _path,uint256 _amount,uint256 _minReturn,address _for)"
    },
    "0xcb32564e": {
        "type": "function",
        "value": "xConvert2(address[] _path,uint256 _amount,uint256 _minReturn,bytes32 _toBlockchain,bytes32 _to,uint256 _conversionId,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0xce200963": {
        "type": "function",
        "value": "xConvertPrioritized2(address[] _path,uint256 _amount,uint256 _minReturn,bytes32 _toBlockchain,bytes32 _to,uint256 _conversionId,uint256[] _signature)"
    },
    "0xd4ee1d90": {
        "type": "function",
        "value": "newOwner()"
    },
    "0xe57738e5": {
        "type": "function",
        "value": "claimAndConvert2(address[] _path,uint256 _amount,uint256 _minReturn,address _affiliateAccount,uint256 _affiliateFee)"
    },
    "0xf3898a97": {
        "type": "function",
        "value": "convert(address[] _path,uint256 _amount,uint256 _minReturn)"
    },
    "0xf3bc7d2a": {
        "type": "function",
        "value": "setMaxAffiliateFee(uint256 _maxAffiliateFee)"
    },
    "0x986d44d8": {
        "type": "function",
        "value": "batchSwapExactIn(tuple[] swaps,address tokenIn,address tokenOut,uint256 totalAmountIn,uint256 minTotalAmountOut)"
    },
    "0x09abfb9d": {
        "type": "function",
        "value": "batchSwapExactOut(tuple[] swaps,address tokenIn,address tokenOut,uint256 maxTotalAmountIn)"
    },
    "0x434840f1": {
        "type": "function",
        "value": "multihopBatchSwapExactIn(tuple[][] swapSequences,address tokenIn,address tokenOut,uint256 totalAmountIn,uint256 minTotalAmountOut)"
    },
    "0xf12b469c": {
        "type": "function",
        "value": "multihopBatchSwapExactOut(tuple[][] swapSequences,address tokenIn,address tokenOut,uint256 maxTotalAmountIn)"
    },
    "0xa91ee0dc": {
        "type": "function",
        "value": "setRegistry(address _registry)"
    },
    "0x21b0eb85": {
        "type": "function",
        "value": "smartSwapExactIn(address tokenIn,address tokenOut,uint256 totalAmountIn,uint256 minTotalAmountOut,uint256 nPools)"
    },
    "0xb40f39ee": {
        "type": "function",
        "value": "smartSwapExactOut(address tokenIn,address tokenOut,uint256 totalAmountOut,uint256 maxTotalAmountIn,uint256 nPools)"
    },
    "0x4b0f93fb": {
        "type": "function",
        "value": "viewSplitExactIn(address tokenIn,address tokenOut,uint256 swapAmount,uint256 nPools)"
    },
    "0x368bb1fc": {
        "type": "function",
        "value": "viewSplitExactOut(address tokenIn,address tokenOut,uint256 swapAmount,uint256 nPools)"
    },
    "0x98c4f76d": {
        "type": "function",
        "value": "CHALLENGE_AMOUNT_DIVISOR()"
    },
    "0x4de8c6e6": {
        "type": "function",
        "value": "TIME_SLOT_SIZE()"
    },
    "0x5325937f": {
        "type": "function",
        "value": "addBonder(address bonder)"
    },
    "0x8d8798bf": {
        "type": "function",
        "value": "bondTransferRoot(bytes32 rootHash,uint256 destinationChainId,uint256 totalAmount)"
    },
    "0x23c452cd": {
        "type": "function",
        "value": "bondWithdrawal(address recipient,uint256 amount,bytes32 transferNonce,uint256 bonderFee)"
    },
    "0xfc110b67": {
        "type": "function",
        "value": "chainBalance(uint256 )"
    },
    "0xf3f480d9": {
        "type": "function",
        "value": "challengePeriod()"
    },
    "0x767631d5": {
        "type": "function",
        "value": "challengeResolutionPeriod()"
    },
    "0x1bbe15ea": {
        "type": "function",
        "value": "challengeTransferBond(bytes32 rootHash,uint256 originalAmount,uint256 destinationChainId)"
    },
    "0xef6ebe5e": {
        "type": "function",
        "value": "confirmTransferRoot(uint256 originChainId,bytes32 rootHash,uint256 destinationChainId,uint256 totalAmount,uint256 rootCommittedAt)"
    },
    "0xa35962f3": {
        "type": "function",
        "value": "crossDomainMessengerWrappers(uint256 )"
    },
    "0xe19be150": {
        "type": "function",
        "value": "getBondForTransferAmount(uint256 amount)"
    },
    "0x302830ab": {
        "type": "function",
        "value": "getBondedWithdrawalAmount(address bonder,bytes32 transferId)"
    },
    "0x3408e470": {
        "type": "function",
        "value": "getChainId()"
    },
    "0xa239f5ee": {
        "type": "function",
        "value": "getChallengeAmountForTransferAmount(uint256 amount)"
    },
    "0x57344e6f": {
        "type": "function",
        "value": "getCredit(address bonder)"
    },
    "0xffa9286c": {
        "type": "function",
        "value": "getDebitAndAdditionalDebit(address bonder)"
    },
    "0xd5ef7551": {
        "type": "function",
        "value": "getIsBonder(address maybeBonder)"
    },
    "0x13948c76": {
        "type": "function",
        "value": "getRawDebit(address bonder)"
    },
    "0x2b85dcc9": {
        "type": "function",
        "value": "getTimeSlot(uint256 time)"
    },
    "0xaf215f94": {
        "type": "function",
        "value": "getTransferId(uint256 chainId,address recipient,uint256 amount,bytes32 transferNonce,uint256 bonderFee,uint256 amountOutMin,uint256 deadline)"
    },
    "0xce803b4f": {
        "type": "function",
        "value": "getTransferRoot(bytes32 rootHash,uint256 totalAmount)"
    },
    "0x960a7afa": {
        "type": "function",
        "value": "getTransferRootId(bytes32 rootHash,uint256 totalAmount)"
    },
    "0xfa2a69a3": {
        "type": "function",
        "value": "isChainIdPaused(uint256 )"
    },
    "0x3a7af631": {
        "type": "function",
        "value": "isTransferIdSpent(bytes32 transferId)"
    },
    "0xb7a0bda6": {
        "type": "function",
        "value": "l1CanonicalToken()"
    },
    "0x6cff06a7": {
        "type": "function",
        "value": "minTransferRootBondDelay()"
    },
    "0x04e6c2c0": {
        "type": "function",
        "value": "removeBonder(address bonder)"
    },
    "0xcbd1642e": {
        "type": "function",
        "value": "rescueTransferRoot(bytes32 rootHash,uint256 originalAmount,address recipient)"
    },
    "0x81707b80": {
        "type": "function",
        "value": "resolveChallenge(bytes32 rootHash,uint256 originalAmount,uint256 destinationChainId)"
    },
    "0xdeace8f5": {
        "type": "function",
        "value": "sendToL2(uint256 chainId,address recipient,uint256 amount,uint256 amountOutMin,uint256 deadline,address relayer,uint256 relayerFee)"
    },
    "0x14942024": {
        "type": "function",
        "value": "setChainIdDepositsPaused(uint256 chainId,bool isPaused)"
    },
    "0x5d475fdd": {
        "type": "function",
        "value": "setChallengePeriod(uint256 _challengePeriod)"
    },
    "0xeecd57e6": {
        "type": "function",
        "value": "setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)"
    },
    "0xd4448163": {
        "type": "function",
        "value": "setCrossDomainMessengerWrapper(uint256 chainId,address _crossDomainMessengerWrapper)"
    },
    "0x39ada669": {
        "type": "function",
        "value": "setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)"
    },
    "0xc7525dd3": {
        "type": "function",
        "value": "settleBondedWithdrawal(address bonder,bytes32 transferId,bytes32 rootHash,uint256 transferRootTotalAmount,uint256 transferIdTreeIndex,bytes32[] siblings,uint256 totalLeaves)"
    },
    "0xb162717e": {
        "type": "function",
        "value": "settleBondedWithdrawals(address bonder,bytes32[] transferIds,uint256 totalAmount)"
    },
    "0xadc9772e": {
        "type": "function",
        "value": "stake(address bonder,uint256 amount)"
    },
    "0x7398d282": {
        "type": "function",
        "value": "timeSlotToAmountBonded(uint256 ,address )"
    },
    "0x5a7e1083": {
        "type": "function",
        "value": "transferBonds(bytes32 )"
    },
    "0x3b8fea28": {
        "type": "function",
        "value": "transferRootCommittedAt(uint256 ,bytes32 )"
    },
    "0x2e17de78": {
        "type": "function",
        "value": "unstake(uint256 amount)"
    },
    "0x0f7aadb7": {
        "type": "function",
        "value": "withdraw(address recipient,uint256 amount,bytes32 transferNonce,uint256 bonderFee,uint256 amountOutMin,uint256 deadline,bytes32 rootHash,uint256 transferRootTotalAmount,uint256 transferIdTreeIndex,bytes32[] siblings,uint256 totalLeaves)"
    },
    "0x025b22bc": {
        "type": "function",
        "value": "updateImplementation(address _newProxyTo)"
    },
    "0x42fc47fb": {
        "type": "function",
        "value": "childChain()"
    },
    "0x4555d5c9": {
        "type": "function",
        "value": "proxyType()"
    },
    "0x987ab9db": {
        "type": "function",
        "value": "rootChain()"
    },
    "0xa69df4b5": {
        "type": "function",
        "value": "unlock()"
    },
    "0xb02c43d0": {
        "type": "function",
        "value": "deposits(uint256 )"
    },
    "0xcb10f94c": {
        "type": "function",
        "value": "stateSender()"
    },
    "0xe7af7ba1": {
        "type": "function",
        "value": "maxErc20Deposit()"
    },
    "0xf83d08ba": {
        "type": "function",
        "value": "lock()"
    },
    "0x025313a2": {
        "type": "function",
        "value": "proxyOwner()"
    },
    "0xf1739cae": {
        "type": "function",
        "value": "transferProxyOwnership(address newOwner)"
    },
    "0xd88ca2c8": {
        "type": "function",
        "value": "updateAndCall(address _newProxyTo,bytes data)"
    },
    "0x53755b8f": {
        "type": "function",
        "value": "authorizeSender(address authorizedSender)"
    },
    "0xbfe51c10": {
        "type": "function",
        "value": "authorizeSigner(address authorizedSigner)"
    },
    "0x2e340823": {
        "type": "function",
        "value": "cancel(uint256[] nonces)"
    },
    "0x3c641910": {
        "type": "function",
        "value": "cancelUpTo(uint256 minimumNonce)"
    },
    "0xab204282": {
        "type": "function",
        "value": "revokeSender(address authorizedSender)"
    },
    "0xc34b44a0": {
        "type": "function",
        "value": "revokeSigner(address authorizedSigner)"
    },
    "0x4f94c536": {
        "type": "function",
        "value": "senderAuthorizations(address ,address )"
    },
    "0x41ac49a3": {
        "type": "function",
        "value": "signerAuthorizations(address ,address )"
    },
    "0x5e68e11f": {
        "type": "function",
        "value": "signerMinimumNonce(address )"
    },
    "0xbfb96279": {
        "type": "function",
        "value": "signerNonceStatus(address ,uint256 )"
    },
    "0xcf701ff7": {
        "type": "function",
        "value": "calc_token_amount(uint256[4] amounts,bool deposit)"
    },
    "0x029b2f34": {
        "type": "function",
        "value": "add_liquidity(uint256[4] amounts,uint256 min_mint_amount)"
    },
    "0x67df02ca": {
        "type": "function",
        "value": "get_dx(int128 i,int128 j,uint256 dy)"
    },
    "0x0e71d1b9": {
        "type": "function",
        "value": "get_dx_underlying(int128 i,int128 j,uint256 dy)"
    },
    "0x3df02124": {
        "type": "function",
        "value": "exchange(int128 i,int128 j,uint256 _dx,uint256 _min_dy)"
    },
    "0xa6417ed6": {
        "type": "function",
        "value": "exchange_underlying(int128 i,int128 j,uint256 dx,uint256 min_dy)"
    },
    "0x7d49d875": {
        "type": "function",
        "value": "remove_liquidity(uint256 _amount,uint256[4] min_amounts)"
    },
    "0x18a7bd76": {
        "type": "function",
        "value": "remove_liquidity_imbalance(uint256[4] amounts,uint256 max_burn_amount)"
    },
    "0xee11f5b6": {
        "type": "function",
        "value": "commit_new_parameters(uint256 amplification,uint256 new_fee,uint256 new_admin_fee)"
    },
    "0x9a8a0592": {
        "type": "function",
        "value": "chainId()"
    },
    "0x5285e058": {
        "type": "function",
        "value": "crossDomainAdmin()"
    },
    "0x49228978": {
        "type": "function",
        "value": "deposit(address recipient,address originToken,uint256 amount,uint256 destinationChainId,uint64 relayerFeePct,uint32 quoteTimestamp)"
    },
    "0x57f6dcb8": {
        "type": "function",
        "value": "depositQuoteTimeBuffer()"
    },
    "0x8a7860ce": {
        "type": "function",
        "value": "emergencyDeleteRootBundle(uint256 rootBundleId)"
    },
    "0x5249fef1": {
        "type": "function",
        "value": "enabledDepositRoutes(address ,uint256 )"
    },
    "0xe2ea41aa": {
        "type": "function",
        "value": "executeRelayerRefundLeaf(uint32 rootBundleId,tuple relayerRefundLeaf,bytes32[] proof)"
    },
    "0xbe3576ee": {
        "type": "function",
        "value": "executeSlowRelayLeaf(address depositor,address recipient,address destinationToken,uint256 amount,uint256 originChainId,uint64 realizedLpFeePct,uint64 relayerFeePct,uint32 depositId,uint32 rootBundleId,bytes32[] proof)"
    },
    "0x89a153cc": {
        "type": "function",
        "value": "fillRelay(address depositor,address recipient,address destinationToken,uint256 amount,uint256 maxTokensToSend,uint256 repaymentChainId,uint256 originChainId,uint64 realizedLpFeePct,uint64 relayerFeePct,uint32 depositId)"
    },
    "0xffc351a3": {
        "type": "function",
        "value": "fillRelayWithUpdatedFee(address depositor,address recipient,address destinationToken,uint256 amount,uint256 maxTokensToSend,uint256 repaymentChainId,uint256 originChainId,uint64 realizedLpFeePct,uint64 relayerFeePct,uint64 newRelayerFeePct,uint32 depositId,bytes depositorSignature)"
    },
    "0x29cb924d": {
        "type": "function",
        "value": "getCurrentTime()"
    },
    "0xe1904402": {
        "type": "function",
        "value": "hubPool()"
    },
    "0xac9650d8": {
        "type": "function",
        "value": "multicall(bytes[] data)"
    },
    "0xa1244c67": {
        "type": "function",
        "value": "numberOfDeposits()"
    },
    "0xf06850f6": {
        "type": "function",
        "value": "relayFills(bytes32 )"
    },
    "0x493a4f84": {
        "type": "function",
        "value": "relayRootBundle(bytes32 relayerRefundRoot,bytes32 slowRelayRoot)"
    },
    "0xee2a53f8": {
        "type": "function",
        "value": "rootBundles(uint256 )"
    },
    "0xde7eba78": {
        "type": "function",
        "value": "setCrossDomainAdmin(address newCrossDomainAdmin)"
    },
    "0x22f8e566": {
        "type": "function",
        "value": "setCurrentTime(uint256 time)"
    },
    "0x2752042e": {
        "type": "function",
        "value": "setDepositQuoteTimeBuffer(uint32 newDepositQuoteTimeBuffer)"
    },
    "0x272751c7": {
        "type": "function",
        "value": "setEnableRoute(address originToken,uint256 destinationChainId,bool enabled)"
    },
    "0x1dfb2d02": {
        "type": "function",
        "value": "setHubPool(address newHubPool)"
    },
    "0xe282d5b9": {
        "type": "function",
        "value": "speedUpDeposit(address depositor,uint64 newRelayerFeePct,uint32 depositId,bytes depositorSignature)"
    },
    "0x1c39c38d": {
        "type": "function",
        "value": "timerAddress()"
    },
    "0x17fcb39b": {
        "type": "function",
        "value": "wrappedNativeToken()"
    },
    "0x1249c58b": {
        "type": "function",
        "value": "mint()"
    },
    "0x4e4d9fea": {
        "type": "function",
        "value": "repayBorrow()"
    },
    "0xaae40a2a": {
        "type": "function",
        "value": "liquidateBorrow(address borrower,address cTokenCollateral)"
    },
    "0xe5974619": {
        "type": "function",
        "value": "repayBorrowBehalf(address borrower)"
    },
    "0x3ad06d16": {
        "type": "function",
        "value": "upgradeTo(uint256 version,address implementation)"
    },
    "0x6fde8202": {
        "type": "function",
        "value": "upgradeabilityOwner()"
    },
    "0xa9c45fcb": {
        "type": "function",
        "value": "upgradeToAndCall(uint256 version,address implementation,bytes data)"
    },
    "0x9870d7fe": {
        "type": "function",
        "value": "addOperator(address newOperator)"
    },
    "0x9c1c2ee9": {
        "type": "function",
        "value": "erc1155safeTransferFrom(address token,address from,address to,uint256 id,uint256 value,bytes data)"
    },
    "0xf709b906": {
        "type": "function",
        "value": "erc721safeTransferFrom(address token,address from,address to,uint256 tokenId)"
    },
    "0x6d70f7ae": {
        "type": "function",
        "value": "isOperator(address account)"
    },
    "0xac8a584a": {
        "type": "function",
        "value": "removeOperator(address operator)"
    },
    "0x3883e119": {
        "type": "function",
        "value": "calc_token_amount(uint256[3] amounts,bool deposit)"
    },
    "0x4515cef3": {
        "type": "function",
        "value": "add_liquidity(uint256[3] amounts,uint256 min_mint_amount)"
    },
    "0xecb586a5": {
        "type": "function",
        "value": "remove_liquidity(uint256 _amount,uint256[3] min_amounts)"
    },
    "0x9fdaea0c": {
        "type": "function",
        "value": "remove_liquidity_imbalance(uint256[3] amounts,uint256 max_burn_amount)"
    },
    "0xad5c4648": {
        "type": "function",
        "value": "WETH()"
    },
    "0x7fc82484": {
        "type": "function",
        "value": "buyAndRedeem(uint256 vaultId,uint256 amount,uint256[] specificIds,address[] path,address to)"
    },
    "0x4447d888": {
        "type": "function",
        "value": "buyAndRedeemWETH(uint256 vaultId,uint256 amount,uint256[] specificIds,uint256 maxWethIn,address[] path,address to)"
    },
    "0x57e836dc": {
        "type": "function",
        "value": "buyAndSwap1155(uint256 vaultId,uint256[] idsIn,uint256[] amounts,uint256[] specificIds,address[] path,address to)"
    },
    "0x42c4ccaa": {
        "type": "function",
        "value": "buyAndSwap1155WETH(uint256 vaultId,uint256[] idsIn,uint256[] amounts,uint256[] specificIds,uint256 maxWethIn,address[] path,address to)"
    },
    "0x58fbdd0a": {
        "type": "function",
        "value": "buyAndSwap721(uint256 vaultId,uint256[] idsIn,uint256[] specificIds,address[] path,address to)"
    },
    "0x5d8117a6": {
        "type": "function",
        "value": "buyAndSwap721WETH(uint256 vaultId,uint256[] idsIn,uint256[] specificIds,uint256 maxWethIn,address[] path,address to)"
    },
    "0x9bf1401c": {
        "type": "function",
        "value": "lpStaking()"
    },
    "0xab3a4121": {
        "type": "function",
        "value": "mintAndSell1155(uint256 vaultId,uint256[] ids,uint256[] amounts,uint256 minWethOut,address[] path,address to)"
    },
    "0xa0271617": {
        "type": "function",
        "value": "mintAndSell1155WETH(uint256 vaultId,uint256[] ids,uint256[] amounts,uint256 minWethOut,address[] path,address to)"
    },
    "0x0956642b": {
        "type": "function",
        "value": "mintAndSell721(uint256 vaultId,uint256[] ids,uint256 minWethOut,address[] path,address to)"
    },
    "0x929bf3d3": {
        "type": "function",
        "value": "mintAndSell721WETH(uint256 vaultId,uint256[] ids,uint256 minWethOut,address[] path,address to)"
    },
    "0x5ee50f88": {
        "type": "function",
        "value": "nftxFactory()"
    },
    "0xbc197c81": {
        "type": "function",
        "value": "onERC1155BatchReceived(address ,address ,uint256[] ,uint256[] ,bytes )"
    },
    "0xf23a6e61": {
        "type": "function",
        "value": "onERC1155Received(address ,address ,uint256 ,uint256 ,bytes )"
    },
    "0x6d13582c": {
        "type": "function",
        "value": "sushiRouter()"
    },
    "0x74a28f79": {
        "type": "function",
        "value": "batchExec(address[] tos,bytes[] datas)"
    },
    "0x94da7864": {
        "type": "function",
        "value": "execs(address[] tos,bytes[] datas)"
    },
    "0xba52c1b5": {
        "type": "error",
        "value": "BAKCAlreadyPaired()"
    },
    "0xde72b61e": {
        "type": "error",
        "value": "BAKCNotOwnedOrPaired()"
    },
    "0x5cd83192": {
        "type": "error",
        "value": "CallerNotOwner()"
    },
    "0x50e75a80": {
        "type": "error",
        "value": "DepositMoreThanOneAPE()"
    },
    "0x8b853e25": {
        "type": "error",
        "value": "EndNotWholeHour()"
    },
    "0xf03ac374": {
        "type": "error",
        "value": "ExceededCapAmount()"
    },
    "0x9acaefc7": {
        "type": "error",
        "value": "ExceededStakedAmount()"
    },
    "0x0afa7ee8": {
        "type": "error",
        "value": "InvalidPoolId()"
    },
    "0xa3fdbb52": {
        "type": "error",
        "value": "MainTokenNotOwnedOrPaired()"
    },
    "0x4a2f3865": {
        "type": "error",
        "value": "NeitherTokenInPairOwnedByCaller()"
    },
    "0x2c8348bb": {
        "type": "error",
        "value": "NotOwnerOfBAKC()"
    },
    "0x2b19ae75": {
        "type": "error",
        "value": "NotOwnerOfMain()"
    },
    "0xccc819da": {
        "type": "error",
        "value": "ProvidedTokensNotPaired()"
    },
    "0xe373a085": {
        "type": "error",
        "value": "SplitPairCantPartiallyWithdraw()"
    },
    "0xd67e3109": {
        "type": "error",
        "value": "StartMustBeGreaterThanEnd()"
    },
    "0x9424dcd9": {
        "type": "error",
        "value": "StartMustEqualLastEnd()"
    },
    "0xf7985df1": {
        "type": "error",
        "value": "StartNotWholeHour()"
    },
    "0x4614cb02": {
        "type": "error",
        "value": "UncommitWrongParameters()"
    },
    "0xbb628f20": {
        "type": "function",
        "value": "addTimeRange(uint256 _poolId,uint256 _amount,uint256 _startTimestamp,uint256 _endTimeStamp,uint256 _capPerPosition)"
    },
    "0x05ece226": {
        "type": "function",
        "value": "addressPosition(address )"
    },
    "0xac7ad9ba": {
        "type": "function",
        "value": "apeCoin()"
    },
    "0xb4f95752": {
        "type": "function",
        "value": "bakcToMain(uint256 ,uint256 )"
    },
    "0x2ee2de66": {
        "type": "function",
        "value": "claimApeCoin(address _recipient)"
    },
    "0xaa392907": {
        "type": "function",
        "value": "claimBAKC(tuple[] _baycPairs,tuple[] _maycPairs,address _recipient)"
    },
    "0xb682e859": {
        "type": "function",
        "value": "claimBAYC(uint256[] _nfts,address _recipient)"
    },
    "0x57a26300": {
        "type": "function",
        "value": "claimMAYC(uint256[] _nfts,address _recipient)"
    },
    "0x8279e760": {
        "type": "function",
        "value": "claimSelfApeCoin()"
    },
    "0x7764656f": {
        "type": "function",
        "value": "claimSelfBAKC(tuple[] _baycPairs,tuple[] _maycPairs)"
    },
    "0x20a325d0": {
        "type": "function",
        "value": "claimSelfBAYC(uint256[] _nfts)"
    },
    "0x381b4682": {
        "type": "function",
        "value": "claimSelfMAYC(uint256[] _nfts)"
    },
    "0xbd5023a9": {
        "type": "function",
        "value": "depositApeCoin(uint256 _amount,address _recipient)"
    },
    "0x21f066af": {
        "type": "function",
        "value": "depositBAKC(tuple[] _baycPairs,tuple[] _maycPairs)"
    },
    "0x728d6f45": {
        "type": "function",
        "value": "depositBAYC(tuple[] _nfts)"
    },
    "0x2eb298c0": {
        "type": "function",
        "value": "depositMAYC(tuple[] _nfts)"
    },
    "0x9dcaafb4": {
        "type": "function",
        "value": "depositSelfApeCoin(uint256 _amount)"
    },
    "0x04238994": {
        "type": "function",
        "value": "getAllStakes(address _address)"
    },
    "0xd9f11fb2": {
        "type": "function",
        "value": "getApeCoinStake(address _address)"
    },
    "0x00191b44": {
        "type": "function",
        "value": "getBakcStakes(address _address)"
    },
    "0x9860037e": {
        "type": "function",
        "value": "getBaycStakes(address _address)"
    },
    "0xf4c6f602": {
        "type": "function",
        "value": "getMaycStakes(address _address)"
    },
    "0x770dade5": {
        "type": "function",
        "value": "getPoolsUI()"
    },
    "0x0ed368f1": {
        "type": "function",
        "value": "getSplitStakes(address _address)"
    },
    "0x09e833c6": {
        "type": "function",
        "value": "getTimeRangeBy(uint256 _poolId,uint256 _index)"
    },
    "0x304f88c0": {
        "type": "function",
        "value": "mainToBakc(uint256 ,uint256 )"
    },
    "0x0bb4d82a": {
        "type": "function",
        "value": "nftContracts(uint256 )"
    },
    "0x98ada4a2": {
        "type": "function",
        "value": "nftPosition(uint256 ,uint256 )"
    },
    "0x2c018f91": {
        "type": "function",
        "value": "pendingRewards(uint256 _poolId,address _address,uint256 _tokenId)"
    },
    "0xac4afa38": {
        "type": "function",
        "value": "pools(uint256 )"
    },
    "0xd363dc17": {
        "type": "function",
        "value": "removeLastTimeRange(uint256 _poolId)"
    },
    "0xd7464ee9": {
        "type": "function",
        "value": "rewardsBy(uint256 _poolId,uint256 _from,uint256 _to)"
    },
    "0xf5679189": {
        "type": "function",
        "value": "stakedTotal(address _address)"
    },
    "0x51eb05a6": {
        "type": "function",
        "value": "updatePool(uint256 _poolId)"
    },
    "0xe4e81847": {
        "type": "function",
        "value": "withdrawApeCoin(uint256 _amount,address _recipient)"
    },
    "0xe3d38ca4": {
        "type": "function",
        "value": "withdrawBAKC(tuple[] _baycPairs,tuple[] _maycPairs)"
    },
    "0x53ed0433": {
        "type": "function",
        "value": "withdrawBAYC(tuple[] _nfts,address _recipient)"
    },
    "0x2f63d59d": {
        "type": "function",
        "value": "withdrawMAYC(tuple[] _nfts,address _recipient)"
    },
    "0x7f60d338": {
        "type": "function",
        "value": "withdrawSelfApeCoin(uint256 _amount)"
    },
    "0x99922ef5": {
        "type": "function",
        "value": "withdrawSelfBAYC(tuple[] _nfts)"
    },
    "0x2240531d": {
        "type": "function",
        "value": "withdrawSelfMAYC(tuple[] _nfts)"
    },
    "0xcbd2ec65": {
        "type": "function",
        "value": "cancelAllOrdersForSender(uint256 minNonce)"
    },
    "0x9e53a69a": {
        "type": "function",
        "value": "cancelMultipleMakerOrders(uint256[] orderNonces)"
    },
    "0x0f747d74": {
        "type": "function",
        "value": "currencyManager()"
    },
    "0x483abb9f": {
        "type": "function",
        "value": "executionManager()"
    },
    "0x31e27e27": {
        "type": "function",
        "value": "isUserOrderNonceExecutedOrCancelled(address user,uint256 orderNonce)"
    },
    "0xd92f92d0": {
        "type": "function",
        "value": "matchAskWithTakerBid(tuple takerBid,tuple makerAsk)"
    },
    "0x927b0b2a": {
        "type": "function",
        "value": "matchAskWithTakerBidUsingETHAndWETH(tuple takerBid,tuple makerAsk)"
    },
    "0xe67c88d4": {
        "type": "function",
        "value": "matchBidWithTakerAsk(tuple takerAsk,tuple makerBid)"
    },
    "0x64df049e": {
        "type": "function",
        "value": "protocolFeeRecipient()"
    },
    "0x87e4401f": {
        "type": "function",
        "value": "royaltyFeeManager()"
    },
    "0x5e14f68e": {
        "type": "function",
        "value": "transferSelectorNFT()"
    },
    "0x5ce052d7": {
        "type": "function",
        "value": "updateCurrencyManager(address _currencyManager)"
    },
    "0xd4ff41dc": {
        "type": "function",
        "value": "updateExecutionManager(address _executionManager)"
    },
    "0x1df47f80": {
        "type": "function",
        "value": "updateProtocolFeeRecipient(address _protocolFeeRecipient)"
    },
    "0xc5498769": {
        "type": "function",
        "value": "updateRoyaltyFeeManager(address _royaltyFeeManager)"
    },
    "0xf75ff53f": {
        "type": "function",
        "value": "updateTransferSelectorNFT(address _transferSelectorNFT)"
    },
    "0x4266581e": {
        "type": "function",
        "value": "userMinOrderNonce(address )"
    },
    "0x9ca37a0b": {
        "type": "function",
        "value": "ZapIn(address _FromTokenContractAddress,address _pairAddress,uint256 _amount,uint256 _minPoolTokens,address _swapTarget,bytes swapData,address affiliate,bool transferResidual,bool shouldSellEntireBalance)"
    },
    "0x1781261f": {
        "type": "function",
        "value": "affiliateBalance(address ,address )"
    },
    "0x4f51e294": {
        "type": "function",
        "value": "affiliates(address )"
    },
    "0x0dc9de85": {
        "type": "function",
        "value": "affilliateWithdraw(address[] tokens)"
    },
    "0x9779d1a6": {
        "type": "function",
        "value": "approvedTargets(address )"
    },
    "0xd408f657": {
        "type": "function",
        "value": "feeWhitelist(address )"
    },
    "0x5de0398e": {
        "type": "function",
        "value": "goodwill()"
    },
    "0x9735a634": {
        "type": "function",
        "value": "setApprovedTargets(address[] targets,bool[] isApproved)"
    },
    "0x3ff428c7": {
        "type": "function",
        "value": "set_affiliate(address _affiliate,bool _status)"
    },
    "0xfbec27bf": {
        "type": "function",
        "value": "set_feeWhitelist(address zapAddress,bool status)"
    },
    "0x01e980d4": {
        "type": "function",
        "value": "set_new_affiliateSplit(uint256 _new_affiliateSplit)"
    },
    "0x550bfa56": {
        "type": "function",
        "value": "set_new_goodwill(uint256 _new_goodwill)"
    },
    "0x75f12b21": {
        "type": "function",
        "value": "stopped()"
    },
    "0x1385d24c": {
        "type": "function",
        "value": "toggleContractActive()"
    },
    "0x18b135e3": {
        "type": "function",
        "value": "totalAffiliateBalance(address )"
    },
    "0x5ecb16cd": {
        "type": "function",
        "value": "withdrawTokens(address[] tokens)"
    },
    "0x56f36dbf": {
        "type": "function",
        "value": "PROXY_GOVERNANCE_TAG()"
    },
    "0xf7b456d0": {
        "type": "function",
        "value": "UPGRADE_ACTIVATION_DELAY()"
    },
    "0x5e3a97e7": {
        "type": "function",
        "value": "addImplementation(address newImplementation,bytes data,bool finalize)"
    },
    "0x439fab91": {
        "type": "function",
        "value": "initialize(bytes )"
    },
    "0xe907fa3c": {
        "type": "function",
        "value": "isNotFinalized()"
    },
    "0x6684b1d6": {
        "type": "function",
        "value": "proxyAcceptGovernance()"
    },
    "0xf9bcdde4": {
        "type": "function",
        "value": "proxyCancelNomination()"
    },
    "0xb449ea5d": {
        "type": "function",
        "value": "proxyIsGovernor(address testGovernor)"
    },
    "0x8757653f": {
        "type": "function",
        "value": "proxyNominateNewGovernor(address newGovernor)"
    },
    "0x12f16e6d": {
        "type": "function",
        "value": "proxyRemoveGovernor(address governorForRemoval)"
    },
    "0x22175a32": {
        "type": "function",
        "value": "removeImplementation(address newImplementation)"
    },
    "0x7147855d": {
        "type": "function",
        "value": "upgradeTo(address newImplementation,bytes data,bool finalize)"
    },
    "0x3e941010": {
        "type": "function",
        "value": "_addReserves(uint256 addAmount)"
    },
    "0x555bcc40": {
        "type": "function",
        "value": "_setImplementation(address implementation_,bool allowResign,bytes becomeImplementationData)"
    },
    "0x0933c1ed": {
        "type": "function",
        "value": "delegateToImplementation(bytes data)"
    },
    "0x4487152f": {
        "type": "function",
        "value": "delegateToViewImplementation(bytes data)"
    },
    "0x4aa4a4fc": {
        "type": "function",
        "value": "WETH9()"
    },
    "0x571ac8b0": {
        "type": "function",
        "value": "approveMax(address token)"
    },
    "0xcab372ce": {
        "type": "function",
        "value": "approveMaxMinusOne(address token)"
    },
    "0x639d71a9": {
        "type": "function",
        "value": "approveZeroThenMax(address token)"
    },
    "0xab3fdd50": {
        "type": "function",
        "value": "approveZeroThenMaxMinusOne(address token)"
    },
    "0xb3a2af13": {
        "type": "function",
        "value": "callPositionManager(bytes data)"
    },
    "0xefdeed8e": {
        "type": "function",
        "value": "checkOracleSlippage(bytes[] paths,uint128[] amounts,uint24 maximumTickDivergence,uint32 secondsAgo)"
    },
    "0xf25801a7": {
        "type": "function",
        "value": "checkOracleSlippage(bytes path,uint24 maximumTickDivergence,uint32 secondsAgo)"
    },
    "0x80fb3ad6": {
        "type": "function",
        "value": "exactInput(tuple params)"
    },
    "0x5d76b977": {
        "type": "function",
        "value": "exactInputSingle(tuple params)"
    },
    "0xd42bbb58": {
        "type": "function",
        "value": "exactOutput(tuple params)"
    },
    "0x5bd7800f": {
        "type": "function",
        "value": "exactOutputSingle(tuple params)"
    },
    "0xc45a0155": {
        "type": "function",
        "value": "factory()"
    },
    "0x68e0d4e1": {
        "type": "function",
        "value": "factoryV2()"
    },
    "0xdee00f35": {
        "type": "function",
        "value": "getApprovalType(address token,uint256 amount)"
    },
    "0xf13884c1": {
        "type": "function",
        "value": "increaseLiquidity(tuple params)"
    },
    "0x4405fca9": {
        "type": "function",
        "value": "mint(tuple params)"
    },
    "0x1f0464d1": {
        "type": "function",
        "value": "multicall(bytes32 previousBlockhash,bytes[] data)"
    },
    "0x5ae401dc": {
        "type": "function",
        "value": "multicall(uint256 deadline,bytes[] data)"
    },
    "0x791b98bc": {
        "type": "function",
        "value": "positionManager()"
    },
    "0xf2d5d56b": {
        "type": "function",
        "value": "pull(address token,uint256 value)"
    },
    "0x12210e8a": {
        "type": "function",
        "value": "refundETH()"
    },
    "0xf3995c67": {
        "type": "function",
        "value": "selfPermit(address token,uint256 value,uint256 deadline,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x4659a494": {
        "type": "function",
        "value": "selfPermitAllowed(address token,uint256 nonce,uint256 expiry,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xa4a78f0c": {
        "type": "function",
        "value": "selfPermitAllowedIfNecessary(address token,uint256 nonce,uint256 expiry,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xc2e3140a": {
        "type": "function",
        "value": "selfPermitIfNecessary(address token,uint256 value,uint256 deadline,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x472b43f3": {
        "type": "function",
        "value": "swapExactTokensForTokens(uint256 amountIn,uint256 amountOutMin,address[] path,address to)"
    },
    "0x42712a67": {
        "type": "function",
        "value": "swapTokensForExactTokens(uint256 amountOut,uint256 amountInMax,address[] path,address to)"
    },
    "0xdf2ab5bb": {
        "type": "function",
        "value": "sweepToken(address token,uint256 amountMinimum,address recipient)"
    },
    "0xe90a182f": {
        "type": "function",
        "value": "sweepToken(address token,uint256 amountMinimum)"
    },
    "0x3068c554": {
        "type": "function",
        "value": "sweepTokenWithFee(address token,uint256 amountMinimum,uint256 feeBips,address feeRecipient)"
    },
    "0xe0e189a0": {
        "type": "function",
        "value": "sweepTokenWithFee(address token,uint256 amountMinimum,address recipient,uint256 feeBips,address feeRecipient)"
    },
    "0x49404b7c": {
        "type": "function",
        "value": "unwrapWETH9(uint256 amountMinimum,address recipient)"
    },
    "0x49616997": {
        "type": "function",
        "value": "unwrapWETH9(uint256 amountMinimum)"
    },
    "0x9b2c0a37": {
        "type": "function",
        "value": "unwrapWETH9WithFee(uint256 amountMinimum,address recipient,uint256 feeBips,address feeRecipient)"
    },
    "0xd4ef38de": {
        "type": "function",
        "value": "unwrapWETH9WithFee(uint256 amountMinimum,uint256 feeBips,address feeRecipient)"
    },
    "0x1c58db4f": {
        "type": "function",
        "value": "wrapETH(uint256 value)"
    },
    "0x451ee4a1": {
        "type": "function",
        "value": "adjustment()"
    },
    "0xcd1234b3": {
        "type": "function",
        "value": "bondInfo(address )"
    },
    "0xd7ccfb0b": {
        "type": "function",
        "value": "bondPrice()"
    },
    "0x3f0fb92f": {
        "type": "function",
        "value": "changeOlympusTreasury(address _olympusTreasury)"
    },
    "0x759076e5": {
        "type": "function",
        "value": "currentDebt()"
    },
    "0x4799afda": {
        "type": "function",
        "value": "currentOlympusFee()"
    },
    "0xe392a262": {
        "type": "function",
        "value": "debtDecay()"
    },
    "0xcea55f57": {
        "type": "function",
        "value": "debtRatio()"
    },
    "0x8dbdbe6d": {
        "type": "function",
        "value": "deposit(uint256 _amount,uint256 _maxPrice,address _depositor)"
    },
    "0xa50603b2": {
        "type": "function",
        "value": "initializeBond(uint256 _controlVariable,uint256 _vestingTerm,uint256 _minimumPrice,uint256 _maxPayout,uint256 _maxDebt,uint256 _initialDebt)"
    },
    "0xf5c2ab5b": {
        "type": "function",
        "value": "lastDecay()"
    },
    "0xe0176de8": {
        "type": "function",
        "value": "maxPayout()"
    },
    "0xa9bc6b71": {
        "type": "function",
        "value": "paySubsidy()"
    },
    "0x7927ebf8": {
        "type": "function",
        "value": "payoutFor(uint256 _value)"
    },
    "0x01b88ee8": {
        "type": "function",
        "value": "pendingPayoutFor(address _depositor)"
    },
    "0x507930ec": {
        "type": "function",
        "value": "percentVestedFor(address _depositor)"
    },
    "0x0505c8c9": {
        "type": "function",
        "value": "policy()"
    },
    "0x95a2251f": {
        "type": "function",
        "value": "redeem(address _depositor)"
    },
    "0x1a3d0068": {
        "type": "function",
        "value": "setAdjustment(bool _addition,uint256 _increment,uint256 _target,uint256 _buffer)"
    },
    "0x1e321a0f": {
        "type": "function",
        "value": "setBondTerms(uint8 _parameter,uint256 _input)"
    },
    "0xd5025625": {
        "type": "function",
        "value": "terms()"
    },
    "0xfc7b9c18": {
        "type": "function",
        "value": "totalDebt()"
    },
    "0x2bab6bde": {
        "type": "function",
        "value": "totalPayoutGiven()"
    },
    "0x7cbe044c": {
        "type": "function",
        "value": "totalPrincipalBonded()"
    },
    "0x3bfdd7de": {
        "type": "function",
        "value": "transferManagment(address _newOwner)"
    },
    "0x0a748489": {
        "type": "function",
        "value": "trueBondPrice()"
    },
    "0x02e371de": {
        "type": "function",
        "value": "COMPONENT_1()"
    },
    "0xb7dec1b7": {
        "type": "function",
        "value": "GENESIS()"
    },
    "0x51464e29": {
        "type": "function",
        "value": "PSILOCYBIN()"
    },
    "0x7b4382cd": {
        "type": "function",
        "value": "TOKEN_CONTRACTS(uint256 )"
    },
    "0xbed08e0b": {
        "type": "function",
        "value": "batchStake(uint256[] _ids,uint8 _tokenType)"
    },
    "0x6fd6da6f": {
        "type": "function",
        "value": "batchTimeSinceStaked(uint8 _tokenType,uint256[] _ids)"
    },
    "0x1b38e212": {
        "type": "function",
        "value": "batchUnstake(uint256[] _ids,uint8 _tokenType)"
    },
    "0x4432c4e4": {
        "type": "function",
        "value": "delegatedBatchUnstake(uint256[] _ids,uint8 _tokenType)"
    },
    "0xef216af3": {
        "type": "function",
        "value": "delegatedUnstake(uint256 _id,uint8 _tokenType)"
    },
    "0xa7433cf5": {
        "type": "function",
        "value": "getStakedTokens(address _owner,uint8 _tokenType)"
    },
    "0x3e28391d": {
        "type": "function",
        "value": "isDelegated(address _a)"
    },
    "0x86fbad9c": {
        "type": "function",
        "value": "isStaked(address _owner,uint8 _tokenType,uint256 _id)"
    },
    "0x4cb2c889": {
        "type": "function",
        "value": "setDelegated(address _a,bool _bool)"
    },
    "0x77d03e74": {
        "type": "function",
        "value": "stakedBalance(address _owner,uint8 _tokenType)"
    },
    "0x92f69aee": {
        "type": "function",
        "value": "timeSinceStaked(uint8 _tokenType,uint256 _id)"
    },
    "0xf376d0de": {
        "type": "function",
        "value": "tokenInfo(uint8 ,uint256 )"
    },
    "0xbc9699f1": {
        "type": "function",
        "value": "unstake(uint256 _id,uint8 _tokenType)"
    },
    "0x42f1181e": {
        "type": "function",
        "value": "addAuthorizedAddress(address target)"
    },
    "0x494503d4": {
        "type": "function",
        "value": "authorities(uint256 )"
    },
    "0x70712939": {
        "type": "function",
        "value": "removeAuthorizedAddress(address target)"
    },
    "0xb9181611": {
        "type": "function",
        "value": "authorized(address )"
    },
    "0xd39de6e9": {
        "type": "function",
        "value": "getAuthorizedAddresses()"
    },
    "0x74c1d7d3": {
        "type": "function",
        "value": "_best(address ,address )"
    },
    "0x91be90c8": {
        "type": "function",
        "value": "_dust(address )"
    },
    "0xa78d4316": {
        "type": "function",
        "value": "_near(uint256 )"
    },
    "0xc2d526aa": {
        "type": "function",
        "value": "_rank(uint256 )"
    },
    "0x677170e1": {
        "type": "function",
        "value": "_span(address ,address )"
    },
    "0xbf7e214f": {
        "type": "function",
        "value": "authority()"
    },
    "0x779997c3": {
        "type": "function",
        "value": "bump(bytes32 id_)"
    },
    "0xd6febde8": {
        "type": "function",
        "value": "buy(uint256 id,uint256 amount)"
    },
    "0x8185402b": {
        "type": "function",
        "value": "buyAllAmount(address buy_gem,uint256 buy_amt,address pay_gem,uint256 max_fill_amount)"
    },
    "0xf582d293": {
        "type": "function",
        "value": "buyEnabled()"
    },
    "0x40e58ee5": {
        "type": "function",
        "value": "cancel(uint256 id)"
    },
    "0x6377ebca": {
        "type": "function",
        "value": "close_time()"
    },
    "0x467f0b7b": {
        "type": "function",
        "value": "del_rank(uint256 id)"
    },
    "0x56ad8764": {
        "type": "function",
        "value": "dustId()"
    },
    "0x0374fc6f": {
        "type": "function",
        "value": "getBestOffer(address sell_gem,address buy_gem)"
    },
    "0x911550f4": {
        "type": "function",
        "value": "getBetterOffer(uint256 id)"
    },
    "0x144a2752": {
        "type": "function",
        "value": "getBuyAmount(address buy_gem,address pay_gem,uint256 pay_amt)"
    },
    "0x8af82a2e": {
        "type": "function",
        "value": "getFirstUnsortedOffer()"
    },
    "0x511fa487": {
        "type": "function",
        "value": "getMinSell(address pay_gem)"
    },
    "0x61f54a79": {
        "type": "function",
        "value": "getNextUnsortedOffer(uint256 id)"
    },
    "0x4579268a": {
        "type": "function",
        "value": "getOffer(uint256 id)"
    },
    "0x7ca9429a": {
        "type": "function",
        "value": "getOfferCount(address sell_gem,address buy_gem)"
    },
    "0xc41a360a": {
        "type": "function",
        "value": "getOwner(uint256 id)"
    },
    "0xff1fd974": {
        "type": "function",
        "value": "getPayAmount(address pay_gem,address buy_gem,uint256 buy_amt)"
    },
    "0x557ed1ba": {
        "type": "function",
        "value": "getTime()"
    },
    "0x943911bc": {
        "type": "function",
        "value": "getWorseOffer(uint256 id)"
    },
    "0x1d834a1b": {
        "type": "function",
        "value": "insert(uint256 id,uint256 pos)"
    },
    "0x82afd23b": {
        "type": "function",
        "value": "isActive(uint256 id)"
    },
    "0xc2b6b58c": {
        "type": "function",
        "value": "isClosed()"
    },
    "0xd2b420ce": {
        "type": "function",
        "value": "isOfferSorted(uint256 id)"
    },
    "0xb4f9b6c8": {
        "type": "function",
        "value": "kill(bytes32 id)"
    },
    "0x232cae0b": {
        "type": "function",
        "value": "last_offer_id()"
    },
    "0x093f5198": {
        "type": "function",
        "value": "make(address pay_gem,address buy_gem,uint128 pay_amt,uint128 buy_amt)"
    },
    "0x01492a0b": {
        "type": "function",
        "value": "matchingEnabled()"
    },
    "0x1b33d412": {
        "type": "function",
        "value": "offer(uint256 pay_amt,address pay_gem,uint256 buy_amt,address buy_gem,uint256 pos)"
    },
    "0xe1a6f014": {
        "type": "function",
        "value": "offer(uint256 pay_amt,address pay_gem,uint256 buy_amt,address buy_gem,uint256 pos,bool rounding)"
    },
    "0xf09ea2a6": {
        "type": "function",
        "value": "offer(uint256 pay_amt,address pay_gem,uint256 buy_amt,address buy_gem)"
    },
    "0x8a72ea6a": {
        "type": "function",
        "value": "offers(uint256 )"
    },
    "0x0621b4f6": {
        "type": "function",
        "value": "sellAllAmount(address pay_gem,uint256 pay_amt,address buy_gem,uint256 min_fill_amount)"
    },
    "0x7a9e5e4b": {
        "type": "function",
        "value": "setAuthority(address authority_)"
    },
    "0xd6f15469": {
        "type": "function",
        "value": "setBuyEnabled(bool buyEnabled_)"
    },
    "0x2aed1905": {
        "type": "function",
        "value": "setMatchingEnabled(bool matchingEnabled_)"
    },
    "0xbf7c734e": {
        "type": "function",
        "value": "setMinSell(address pay_gem,uint256 dust)"
    },
    "0x07da68f5": {
        "type": "function",
        "value": "stop()"
    },
    "0x49606455": {
        "type": "function",
        "value": "take(bytes32 id,uint128 maxTakeAmount)"
    },
    "0xe8e33700": {
        "type": "function",
        "value": "addLiquidity(address tokenA,address tokenB,uint256 amountADesired,uint256 amountBDesired,uint256 amountAMin,uint256 amountBMin,address to,uint256 deadline)"
    },
    "0xf305d719": {
        "type": "function",
        "value": "addLiquidityETH(address token,uint256 amountTokenDesired,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline)"
    },
    "0x85f8c259": {
        "type": "function",
        "value": "getAmountIn(uint256 amountOut,uint256 reserveIn,uint256 reserveOut)"
    },
    "0x054d50d4": {
        "type": "function",
        "value": "getAmountOut(uint256 amountIn,uint256 reserveIn,uint256 reserveOut)"
    },
    "0x1f00ca74": {
        "type": "function",
        "value": "getAmountsIn(uint256 amountOut,address[] path)"
    },
    "0xd06ca61f": {
        "type": "function",
        "value": "getAmountsOut(uint256 amountIn,address[] path)"
    },
    "0xad615dec": {
        "type": "function",
        "value": "quote(uint256 amountA,uint256 reserveA,uint256 reserveB)"
    },
    "0xbaa2abde": {
        "type": "function",
        "value": "removeLiquidity(address tokenA,address tokenB,uint256 liquidity,uint256 amountAMin,uint256 amountBMin,address to,uint256 deadline)"
    },
    "0x02751cec": {
        "type": "function",
        "value": "removeLiquidityETH(address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline)"
    },
    "0xaf2979eb": {
        "type": "function",
        "value": "removeLiquidityETHSupportingFeeOnTransferTokens(address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline)"
    },
    "0xded9382a": {
        "type": "function",
        "value": "removeLiquidityETHWithPermit(address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x5b0d5984": {
        "type": "function",
        "value": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x2195995c": {
        "type": "function",
        "value": "removeLiquidityWithPermit(address tokenA,address tokenB,uint256 liquidity,uint256 amountAMin,uint256 amountBMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s)"
    },
    "0xfb3bdb41": {
        "type": "function",
        "value": "swapETHForExactTokens(uint256 amountOut,address[] path,address to,uint256 deadline)"
    },
    "0x7ff36ab5": {
        "type": "function",
        "value": "swapExactETHForTokens(uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0xb6f9de95": {
        "type": "function",
        "value": "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0x18cbafe5": {
        "type": "function",
        "value": "swapExactTokensForETH(uint256 amountIn,uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0x791ac947": {
        "type": "function",
        "value": "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn,uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0x38ed1739": {
        "type": "function",
        "value": "swapExactTokensForTokens(uint256 amountIn,uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0x5c11d795": {
        "type": "function",
        "value": "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn,uint256 amountOutMin,address[] path,address to,uint256 deadline)"
    },
    "0x4a25d94a": {
        "type": "function",
        "value": "swapTokensForExactETH(uint256 amountOut,uint256 amountInMax,address[] path,address to,uint256 deadline)"
    },
    "0x8803dbee": {
        "type": "function",
        "value": "swapTokensForExactTokens(uint256 amountOut,uint256 amountInMax,address[] path,address to,uint256 deadline)"
    },
    "0x7234d8f2": {
        "type": "function",
        "value": "KIND_AUCTION()"
    },
    "0xe1784a02": {
        "type": "function",
        "value": "KIND_BUY()"
    },
    "0x25593ac2": {
        "type": "function",
        "value": "KIND_SELL()"
    },
    "0x7ae1ace0": {
        "type": "function",
        "value": "OP_ACCEPT_AUCTION()"
    },
    "0x11f0794c": {
        "type": "function",
        "value": "OP_ACCEPT_BUY()"
    },
    "0x81787a85": {
        "type": "function",
        "value": "OP_BID()"
    },
    "0xeb374261": {
        "type": "function",
        "value": "OP_BUY()"
    },
    "0x9e57feb5": {
        "type": "function",
        "value": "OP_CANCEL_BUY()"
    },
    "0x6acc65db": {
        "type": "function",
        "value": "OP_COMPLETE_AUCTION()"
    },
    "0xb50a2a55": {
        "type": "function",
        "value": "OP_COMPLETE_BUY()"
    },
    "0x8f18439e": {
        "type": "function",
        "value": "OP_COMPLETE_SELL()"
    },
    "0xf0954160": {
        "type": "function",
        "value": "OP_MAX()"
    },
    "0x90c2b10e": {
        "type": "function",
        "value": "OP_MIN()"
    },
    "0x1bb03ca9": {
        "type": "function",
        "value": "OP_REJECT_BUY()"
    },
    "0x0873c6ec": {
        "type": "function",
        "value": "RATE_BASE()"
    },
    "0x5a4e5a15": {
        "type": "function",
        "value": "STATUS_CANCELLED()"
    },
    "0x740db280": {
        "type": "function",
        "value": "STATUS_DONE()"
    },
    "0x24f8515b": {
        "type": "function",
        "value": "STATUS_OPEN()"
    },
    "0xf0d250ba": {
        "type": "function",
        "value": "TOKEN_1155()"
    },
    "0xc477be20": {
        "type": "function",
        "value": "TOKEN_721()"
    },
    "0x853ca41a": {
        "type": "function",
        "value": "TOKEN_MINT()"
    },
    "0xc1c30e80": {
        "type": "function",
        "value": "cancelBuys(uint256[] ids)"
    },
    "0x3ed9ffb7": {
        "type": "function",
        "value": "couponSpent(uint256 )"
    },
    "0xe7d4a999": {
        "type": "function",
        "value": "emergencyCancelAuction(uint256 id,bool noBundle)"
    },
    "0xf5116bc9": {
        "type": "function",
        "value": "hasInv(uint256 id)"
    },
    "0xac5e2cb1": {
        "type": "function",
        "value": "hasSignedIntention(uint8 op)"
    },
    "0x80bc688f": {
        "type": "function",
        "value": "inCaseMoneyGetsStuck(address to,address currency,uint256 amount)"
    },
    "0xcd78ba01": {
        "type": "function",
        "value": "inventories(uint256 )"
    },
    "0x5fd34298": {
        "type": "function",
        "value": "inventoryTokenCounts(uint256 )"
    },
    "0xb4533aad": {
        "type": "function",
        "value": "inventoryTokens(uint256 ,uint256 )"
    },
    "0x8704f2a3": {
        "type": "function",
        "value": "isAuction(uint256 id)"
    },
    "0x0ad48628": {
        "type": "function",
        "value": "isAuctionOpen(uint256 id)"
    },
    "0xf4a33e0d": {
        "type": "function",
        "value": "isBundleApproved(uint256 invId,address owner)"
    },
    "0xa80d33fb": {
        "type": "function",
        "value": "isBuy(uint256 id)"
    },
    "0xbdf52b45": {
        "type": "function",
        "value": "isBuyOpen(uint256 id)"
    },
    "0xd9548e53": {
        "type": "function",
        "value": "isExpired(uint256 id)"
    },
    "0x1b01e72c": {
        "type": "function",
        "value": "isSell(uint256 id)"
    },
    "0x781dc70a": {
        "type": "function",
        "value": "isSignatureValid(bytes signature,bytes32 hash,address signer)"
    },
    "0xee98ce91": {
        "type": "function",
        "value": "isStatusOpen(uint256 id)"
    },
    "0x2bcd27df": {
        "type": "function",
        "value": "marketSigners(address )"
    },
    "0x54134876": {
        "type": "function",
        "value": "minAuctionDuration()"
    },
    "0x708d4d35": {
        "type": "function",
        "value": "minAuctionIncrement()"
    },
    "0x5fbf56f6": {
        "type": "function",
        "value": "run(tuple intent,tuple detail,bytes sigIntent,bytes sigDetail)"
    },
    "0xb52b8f35": {
        "type": "function",
        "value": "send(address to,tuple[] tokens)"
    },
    "0xd52126e2": {
        "type": "function",
        "value": "swap(tuple req,bytes signature)"
    },
    "0x015af8ee": {
        "type": "function",
        "value": "updateSettings(uint256 minAuctionIncrement_,uint256 minAuctionDuration_)"
    },
    "0xf460590b": {
        "type": "function",
        "value": "updateSigner(address addr,bool remove)"
    },
    "0x3fc8cef3": {
        "type": "function",
        "value": "weth()"
    },
    "0x7c401f28": {
        "type": "function",
        "value": "donate(tuple[] _donations)"
    },
    "0xaf933b57": {
        "type": "function",
        "value": "withdrawEther(address _dest)"
    },
    "0x3aeac4e1": {
        "type": "function",
        "value": "withdrawToken(address _tokenAddress,address _dest)"
    },
    "0x1d572320": {
        "type": "function",
        "value": "ZapIn(address _toWhomToIssue,address _FromTokenContractAddress,address _ToUnipoolToken0,address _ToUnipoolToken1,uint256 _amount,uint256 _minPoolTokens)"
    },
    "0xb2bdfa7b": {
        "type": "function",
        "value": "_owner()"
    },
    "0x8d7e41a8": {
        "type": "function",
        "value": "calculateSwapInAmount(uint256 reserveIn,uint256 userIn)"
    },
    "0x3f975d5f": {
        "type": "function",
        "value": "canSwapFromV1(address _fromToken,address _toToken,uint256 fromAmount,uint256 toAmount)"
    },
    "0xf27cf320": {
        "type": "function",
        "value": "canSwapFromV2(address _fromToken,address _toToken)"
    },
    "0x551196d5": {
        "type": "function",
        "value": "inCaseTokengetsStuck(address _TokenAddress)"
    },
    "0xb10e1dbc": {
        "type": "function",
        "value": "set_new_goodwill(uint16 _new_goodwill)"
    },
    "0x3ccfd60b": {
        "type": "function",
        "value": "withdraw()"
    },
    "0x01a12fd3": {
        "type": "function",
        "value": "removeAlerter(address alerter)"
    },
    "0x238dafe0": {
        "type": "function",
        "value": "enabled()"
    },
    "0x27a099d8": {
        "type": "function",
        "value": "getOperators()"
    },
    "0x29589f61": {
        "type": "function",
        "value": "tradeWithHint(address src,uint256 srcAmount,address dest,address destAddress,uint256 maxDestAmount,uint256 minConversionRate,address walletId,bytes hint)"
    },
    "0x3bba21dc": {
        "type": "function",
        "value": "swapTokenToEther(address token,uint256 srcAmount,uint256 minConversionRate)"
    },
    "0x3ccdbb28": {
        "type": "function",
        "value": "withdrawToken(address token,uint256 amount,address sendTo)"
    },
    "0x3de39c11": {
        "type": "function",
        "value": "maxGasPrice()"
    },
    "0x408ee7fe": {
        "type": "function",
        "value": "addAlerter(address newAlerter)"
    },
    "0x4f61ff8b": {
        "type": "function",
        "value": "kyberNetworkContract()"
    },
    "0x6432679f": {
        "type": "function",
        "value": "getUserCapInWei(address user)"
    },
    "0x7409e2eb": {
        "type": "function",
        "value": "swapTokenToToken(address src,uint256 srcAmount,address dest,uint256 minConversionRate)"
    },
    "0x75829def": {
        "type": "function",
        "value": "transferAdmin(address newAdmin)"
    },
    "0x77f50f97": {
        "type": "function",
        "value": "claimAdmin()"
    },
    "0x7a2a0456": {
        "type": "function",
        "value": "swapEtherToToken(address token,uint256 minConversionRate)"
    },
    "0x7acc8678": {
        "type": "function",
        "value": "transferAdminQuickly(address newAdmin)"
    },
    "0x7c423f54": {
        "type": "function",
        "value": "getAlerters()"
    },
    "0x809a9e55": {
        "type": "function",
        "value": "getExpectedRate(address src,address dest,uint256 srcQty)"
    },
    "0x8eaaeecf": {
        "type": "function",
        "value": "getUserCapInTokenWei(address user,address token)"
    },
    "0xabd188a8": {
        "type": "function",
        "value": "setKyberNetworkContract(address _kyberNetworkContract)"
    },
    "0xb64a097e": {
        "type": "function",
        "value": "info(bytes32 field)"
    },
    "0xcb3c28c7": {
        "type": "function",
        "value": "trade(address src,uint256 srcAmount,address dest,address destAddress,uint256 maxDestAmount,uint256 minConversionRate,address walletId)"
    },
    "0xce56c454": {
        "type": "function",
        "value": "withdrawEther(uint256 amount,address sendTo)"
    },
    "0xa461b3c8": {
        "type": "function",
        "value": "initialize(string _name,string _symbol,address[4] _coins,uint256[4] _rate_multipliers,uint256 _A,uint256 _fee)"
    },
    "0x4903b0d1": {
        "type": "function",
        "value": "balances(uint256 arg0)"
    },
    "0x14f05979": {
        "type": "function",
        "value": "get_balances()"
    },
    "0x76a2f0f0": {
        "type": "function",
        "value": "A_precise()"
    },
    "0xed8e84f3": {
        "type": "function",
        "value": "calc_token_amount(uint256[2] _amounts,bool _is_deposit)"
    },
    "0x0c3e4b54": {
        "type": "function",
        "value": "add_liquidity(uint256[2] _amounts,uint256 _min_mint_amount,address _receiver)"
    },
    "0xddc1f59d": {
        "type": "function",
        "value": "exchange(int128 i,int128 j,uint256 _dx,uint256 _min_dy,address _receiver)"
    },
    "0x5b36389c": {
        "type": "function",
        "value": "remove_liquidity(uint256 _amount,uint256[2] min_amounts)"
    },
    "0x3eb1719f": {
        "type": "function",
        "value": "remove_liquidity(uint256 _burn_amount,uint256[2] _min_amounts,address _receiver)"
    },
    "0x52d2cfdd": {
        "type": "function",
        "value": "remove_liquidity_imbalance(uint256[2] _amounts,uint256 _max_burn_amount,address _receiver)"
    },
    "0xcc2b27d7": {
        "type": "function",
        "value": "calc_withdraw_one_coin(uint256 _burn_amount,int128 i)"
    },
    "0x1a4d01d2": {
        "type": "function",
        "value": "remove_liquidity_one_coin(uint256 _burn_amount,int128 i,uint256 _min_received)"
    },
    "0x081579a5": {
        "type": "function",
        "value": "remove_liquidity_one_coin(uint256 _burn_amount,int128 i,uint256 _min_received,address _receiver)"
    },
    "0x3c157e64": {
        "type": "function",
        "value": "ramp_A(uint256 _future_A,uint256 _future_time)"
    },
    "0x551a6588": {
        "type": "function",
        "value": "stop_ramp_A()"
    },
    "0xc6610657": {
        "type": "function",
        "value": "coins(uint256 i)"
    },
    "0xe2e7d264": {
        "type": "function",
        "value": "admin_balances(uint256 i)"
    },
    "0x5409491a": {
        "type": "function",
        "value": "initial_A()"
    },
    "0x2081066c": {
        "type": "function",
        "value": "initial_A_time()"
    },
    "0x14052288": {
        "type": "function",
        "value": "future_A_time()"
    },
    "0xb1373929": {
        "type": "function",
        "value": "gamma()"
    },
    "0x5b41b908": {
        "type": "function",
        "value": "exchange(uint256 i,uint256 j,uint256 dx,uint256 min_dy)"
    },
    "0x394747c5": {
        "type": "function",
        "value": "exchange(uint256 i,uint256 j,uint256 dx,uint256 min_dy,bool use_eth)"
    },
    "0x65b2489b": {
        "type": "function",
        "value": "exchange_underlying(uint256 i,uint256 j,uint256 dx,uint256 min_dy)"
    },
    "0x556d6e9f": {
        "type": "function",
        "value": "get_dy(uint256 i,uint256 j,uint256 dx)"
    },
    "0xee22be23": {
        "type": "function",
        "value": "add_liquidity(uint256[2] amounts,uint256 min_mint_amount,bool use_eth)"
    },
    "0x269b5581": {
        "type": "function",
        "value": "remove_liquidity(uint256 _amount,uint256[2] min_amounts,bool use_eth)"
    },
    "0x8d8ea727": {
        "type": "function",
        "value": "calc_token_amount(uint256[2] amounts)"
    },
    "0x4fb08c5e": {
        "type": "function",
        "value": "calc_withdraw_one_coin(uint256 token_amount,uint256 i)"
    },
    "0xf1dc3cc9": {
        "type": "function",
        "value": "remove_liquidity_one_coin(uint256 token_amount,uint256 i,uint256 min_amount)"
    },
    "0x8f15b6b5": {
        "type": "function",
        "value": "remove_liquidity_one_coin(uint256 token_amount,uint256 i,uint256 min_amount,bool use_eth)"
    },
    "0xc93f49e8": {
        "type": "function",
        "value": "claim_admin_fees()"
    },
    "0x5e248072": {
        "type": "function",
        "value": "ramp_A_gamma(uint256 future_A,uint256 future_gamma,uint256 future_time)"
    },
    "0x244c7c2e": {
        "type": "function",
        "value": "stop_ramp_A_gamma()"
    },
    "0xa43c3351": {
        "type": "function",
        "value": "commit_new_parameters(uint256 _new_mid_fee,uint256 _new_out_fee,uint256 _new_admin_fee,uint256 _new_fee_gamma,uint256 _new_allowed_extra_profit,uint256 _new_adjustment_step,uint256 _new_ma_half_time)"
    },
    "0x7242e524": {
        "type": "function",
        "value": "set_admin_fee_receiver(address _admin_fee_receiver)"
    },
    "0x54f0f7d5": {
        "type": "function",
        "value": "lp_price()"
    },
    "0xb9e8c9fd": {
        "type": "function",
        "value": "price_scale()"
    },
    "0x86fc88d3": {
        "type": "function",
        "value": "price_oracle()"
    },
    "0xc146bf94": {
        "type": "function",
        "value": "last_prices()"
    },
    "0x6112c747": {
        "type": "function",
        "value": "last_prices_timestamp()"
    },
    "0x204fe3d5": {
        "type": "function",
        "value": "initial_A_gamma()"
    },
    "0xf30cfad5": {
        "type": "function",
        "value": "future_A_gamma()"
    },
    "0xe89876ff": {
        "type": "function",
        "value": "initial_A_gamma_time()"
    },
    "0xf9ed9597": {
        "type": "function",
        "value": "future_A_gamma_time()"
    },
    "0x49fe9e77": {
        "type": "function",
        "value": "allowed_extra_profit()"
    },
    "0x727ced57": {
        "type": "function",
        "value": "future_allowed_extra_profit()"
    },
    "0x72d4f0e2": {
        "type": "function",
        "value": "fee_gamma()"
    },
    "0xd7c3dcbe": {
        "type": "function",
        "value": "future_fee_gamma()"
    },
    "0x083812e5": {
        "type": "function",
        "value": "adjustment_step()"
    },
    "0x4ea12c7d": {
        "type": "function",
        "value": "future_adjustment_step()"
    },
    "0x662b6274": {
        "type": "function",
        "value": "ma_half_time()"
    },
    "0x0c5e23d4": {
        "type": "function",
        "value": "future_ma_half_time()"
    },
    "0x92526c0c": {
        "type": "function",
        "value": "mid_fee()"
    },
    "0xee8de675": {
        "type": "function",
        "value": "out_fee()"
    },
    "0x7cf9aedc": {
        "type": "function",
        "value": "future_mid_fee()"
    },
    "0x7d1b060c": {
        "type": "function",
        "value": "future_out_fee()"
    },
    "0x0f529ba2": {
        "type": "function",
        "value": "D()"
    },
    "0x7ba1a74d": {
        "type": "function",
        "value": "xcp_profit()"
    },
    "0x0b7b594b": {
        "type": "function",
        "value": "xcp_profit_a()"
    },
    "0x0c46b72a": {
        "type": "function",
        "value": "virtual_price()"
    },
    "0x9c868ac0": {
        "type": "function",
        "value": "is_killed()"
    },
    "0x2a426896": {
        "type": "function",
        "value": "kill_deadline()"
    },
    "0x6e42e4d2": {
        "type": "function",
        "value": "admin_fee_receiver()"
    },
    "0xb5268389": {
        "type": "function",
        "value": "adapterRemoved(string )"
    },
    "0xb84f5d1e": {
        "type": "function",
        "value": "adapters(string )"
    },
    "0xc92aecc4": {
        "type": "function",
        "value": "chi()"
    },
    "0x558b7dd1": {
        "type": "function",
        "value": "pauseSwaps()"
    },
    "0x3ef11fd7": {
        "type": "function",
        "value": "removeAdapter(string aggregatorId)"
    },
    "0x459a39fb": {
        "type": "function",
        "value": "setAdapter(string aggregatorId,address addr,bytes4 selector,bytes data)"
    },
    "0x5f575529": {
        "type": "function",
        "value": "swap(string aggregatorId,address tokenFrom,uint256 amount,bytes data)"
    },
    "0x6b68764c": {
        "type": "function",
        "value": "swapUsingGasToken(string aggregatorId,address tokenFrom,uint256 amount,bytes data)"
    },
    "0x9804a380": {
        "type": "function",
        "value": "unpauseSwaps()"
    },
    "0x1766486d": {
        "type": "function",
        "value": "timeLockedUpgrades(bytes32 )"
    },
    "0x709a385e": {
        "type": "function",
        "value": "batchTransfer(address[] _tokens,uint256[] _quantities,address _from,address _to)"
    },
    "0x78446bc1": {
        "type": "function",
        "value": "timeLockPeriod()"
    },
    "0x9303b16f": {
        "type": "function",
        "value": "setTimeLockPeriod(uint256 _timeLockPeriod)"
    },
    "0xa6c4e467": {
        "type": "function",
        "value": "transfer(address _token,uint256 _quantity,address _from,address _to)"
    },
    "0x01e33667": {
        "type": "function",
        "value": "withdrawToken(address token,address to,uint256 tokenAmount)"
    },
    "0x72e98a79": {
        "type": "function",
        "value": "transferBZxOwnership(address newBZxContractAddress)"
    },
    "0xe4a72b13": {
        "type": "function",
        "value": "bZxContractAddress()"
    },
    "0xe5994905": {
        "type": "function",
        "value": "transferTokenFrom(address token,address from,address to,uint256 tokenAmount)"
    },
    "0xfb0f97a8": {
        "type": "function",
        "value": "depositToken(address token,address from,uint256 tokenAmount)"
    },
    "0x0a19b14a": {
        "type": "function",
        "value": "trade(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce,address user,uint8 v,bytes32 r,bytes32 s,uint256 amount)"
    },
    "0x0b927666": {
        "type": "function",
        "value": "order(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce)"
    },
    "0x19774d43": {
        "type": "function",
        "value": "orderFills(address ,bytes32 )"
    },
    "0x278b8c0e": {
        "type": "function",
        "value": "cancelOrder(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x46be96c3": {
        "type": "function",
        "value": "amountFilled(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce,address user,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x54d03b5c": {
        "type": "function",
        "value": "changeFeeMake(uint256 feeMake_)"
    },
    "0x57786394": {
        "type": "function",
        "value": "feeMake()"
    },
    "0x5e1d7ae4": {
        "type": "function",
        "value": "changeFeeRebate(uint256 feeRebate_)"
    },
    "0x6c86888b": {
        "type": "function",
        "value": "testTrade(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce,address user,uint8 v,bytes32 r,bytes32 s,uint256 amount,address sender)"
    },
    "0x71ffcb16": {
        "type": "function",
        "value": "changeFeeAccount(address feeAccount_)"
    },
    "0x731c2f81": {
        "type": "function",
        "value": "feeRebate()"
    },
    "0x8823a9c0": {
        "type": "function",
        "value": "changeFeeTake(uint256 feeTake_)"
    },
    "0x9e281a98": {
        "type": "function",
        "value": "withdrawToken(address token,uint256 amount)"
    },
    "0xbb5f4629": {
        "type": "function",
        "value": "orders(address ,bytes32 )"
    },
    "0xc281309e": {
        "type": "function",
        "value": "feeTake()"
    },
    "0xe8f6bc2e": {
        "type": "function",
        "value": "changeAccountLevelsAddr(address accountLevelsAddr_)"
    },
    "0xf3412942": {
        "type": "function",
        "value": "accountLevelsAddr()"
    },
    "0xfb6e155f": {
        "type": "function",
        "value": "availableVolume(address tokenGet,uint256 amountGet,address tokenGive,uint256 amountGive,uint256 expires,uint256 nonce,address user,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x6d98ebe3": {
        "type": "function",
        "value": "STARKWARE_CONTRACT()"
    },
    "0x27cc37b0": {
        "type": "function",
        "value": "deposit(uint256 depositAmount,uint256 starkKey,uint256 positionId,bytes signature)"
    },
    "0x9f2c365a": {
        "type": "function",
        "value": "depositERC20(address tokenFrom,uint256 tokenFromAmount,uint256 starkKey,uint256 positionId,address exchangeProxy,bytes exchangeProxyData,bytes signature)"
    },
    "0xe1e1a91a": {
        "type": "function",
        "value": "depositEth(uint256 starkKey,uint256 positionId,address exchangeProxy,bytes exchangeProxyData,bytes signature)"
    },
    "0x572b6c05": {
        "type": "function",
        "value": "isTrustedForwarder(address forwarder)"
    },
    "0x1bf33004": {
        "type": "function",
        "value": "acceptSwap(uint256 swapId)"
    },
    "0x54d6a2b7": {
        "type": "function",
        "value": "cancelSwap(uint256 swapId)"
    },
    "0xdbd6dd5f": {
        "type": "function",
        "value": "initiateSwap(uint256 swapId,address[] nftAddresses,uint256[] nftIds)"
    },
    "0x55a36d56": {
        "type": "function",
        "value": "proposeSwap(address secondUser,address[] nftAddresses,uint256[] nftIds)"
    },
    "0x7ea5482a": {
        "type": "function",
        "value": "setAppFee(uint256 newFee)"
    },
    "0x1247ae58": {
        "type": "function",
        "value": "filled_subtrees()"
    },
    "0x1f79a1e9": {
        "type": "function",
        "value": "nullifierHashes(uint256 )"
    },
    "0x2d9ed8d5": {
        "type": "function",
        "value": "transferValue()"
    },
    "0x393fe1cd": {
        "type": "function",
        "value": "roots()"
    },
    "0x49ce8997": {
        "type": "function",
        "value": "commitments(uint256 )"
    },
    "0x4cd212eb": {
        "type": "function",
        "value": "zeros()"
    },
    "0x551c4fd2": {
        "type": "function",
        "value": "withdraw(uint256[2] a,uint256[2][2] b,uint256[2] c,uint256[4] input)"
    },
    "0x5777bf50": {
        "type": "function",
        "value": "isDepositsEnabled()"
    },
    "0x5a129efe": {
        "type": "function",
        "value": "isSpent(uint256 nullifier)"
    },
    "0x5bb93995": {
        "type": "function",
        "value": "hashLeftRight(uint256 left,uint256 right)"
    },
    "0x65576fab": {
        "type": "function",
        "value": "next_index()"
    },
    "0x8b145d6d": {
        "type": "function",
        "value": "current_root()"
    },
    "0xa6232a93": {
        "type": "function",
        "value": "isKnownRoot(uint256 root)"
    },
    "0xd907813c": {
        "type": "function",
        "value": "toggleDeposits()"
    },
    "0x9ad26744": {
        "type": "function",
        "value": "removeAuthorizedAddressAtIndex(address target,uint256 index)"
    },
    "0xae25532e": {
        "type": "function",
        "value": "getProxyId()"
    },
    "0x6f6941b9": {
        "type": "function",
        "value": "cDAI()"
    },
    "0x10d95969": {
        "type": "function",
        "value": "crvapr()"
    },
    "0x7165485d": {
        "type": "function",
        "value": "curve()"
    },
    "0x4f39059c": {
        "type": "function",
        "value": "curveToken()"
    },
    "0x458e3234": {
        "type": "function",
        "value": "set_new_TOKEN(address _new_TOKEN)"
    },
    "0x855fed81": {
        "type": "function",
        "value": "set_new_cDAI(address _new_cDAI)"
    },
    "0x89a642a9": {
        "type": "function",
        "value": "set_new_curveToken(address _new_set_new_curveToken)"
    },
    "0xc532a774": {
        "type": "function",
        "value": "calc_withdraw_one_coin(uint256 _burn_amount,int128 i,bool _previous)"
    },
    "0x1ed86f19": {
        "type": "function",
        "value": "addModule(address module)"
    },
    "0x5cf1cd2b": {
        "type": "function",
        "value": "batchNotifyFor(address[] accounts)"
    },
    "0xec954594": {
        "type": "function",
        "value": "inchToken()"
    },
    "0x899f5898": {
        "type": "function",
        "value": "notify()"
    },
    "0x132b4fc8": {
        "type": "function",
        "value": "notifyFor(address account)"
    },
    "0xa0632461": {
        "type": "function",
        "value": "removeModule(address module)"
    },
    "0xa694fc3a": {
        "type": "function",
        "value": "stake(uint256 amount)"
    },
    "0x131b9c04": {
        "type": "function",
        "value": "getEarnings(address tokenAddress)"
    },
    "0x1e99d569": {
        "type": "function",
        "value": "nextStreamId()"
    },
    "0x2b8a119d": {
        "type": "function",
        "value": "getCompoundingStream(uint256 streamId)"
    },
    "0x3656eec2": {
        "type": "function",
        "value": "balanceOf(uint256 streamId,address who)"
    },
    "0x6db9241b": {
        "type": "function",
        "value": "cancelStream(uint256 streamId)"
    },
    "0x7a9b2c6c": {
        "type": "function",
        "value": "withdrawFromStream(uint256 streamId,uint256 amount)"
    },
    "0x8129fc1c": {
        "type": "function",
        "value": "initialize()"
    },
    "0x8195aeaa": {
        "type": "function",
        "value": "createCompoundingStream(address recipient,uint256 deposit,address tokenAddress,uint256 startTime,uint256 stopTime,uint256 senderSharePercentage,uint256 recipientSharePercentage)"
    },
    "0x894e9a0d": {
        "type": "function",
        "value": "getStream(uint256 streamId)"
    },
    "0x8c9a3252": {
        "type": "function",
        "value": "interestOf(uint256 streamId,uint256 amount)"
    },
    "0x9012c4a8": {
        "type": "function",
        "value": "updateFee(uint256 feePercentage)"
    },
    "0xa734d51b": {
        "type": "function",
        "value": "isCompoundingStream(uint256 streamId)"
    },
    "0xa82ccd4d": {
        "type": "function",
        "value": "deltaOf(uint256 streamId)"
    },
    "0xc1eb9ee0": {
        "type": "function",
        "value": "takeEarnings(address tokenAddress,uint256 amount)"
    },
    "0xc4d66de8": {
        "type": "function",
        "value": "initialize(address _adapter)"
    },
    "0xcc1b4bf6": {
        "type": "function",
        "value": "createStream(address recipient,uint256 deposit,address tokenAddress,uint256 startTime,uint256 stopTime)"
    },
    "0xd2cba55c": {
        "type": "function",
        "value": "cTokenManager()"
    },
    "0x21b051fe": {
        "type": "function",
        "value": "batchSwap(uint8 kind,tuple[] swaps,address[] assets,tuple funds,int256[] limits,uint256 deadline)"
    },
    "0x7d3aeb96": {
        "type": "function",
        "value": "deregisterTokens(bytes32 poolId,address[] tokens)"
    },
    "0xd4ecadaa": {
        "type": "function",
        "value": "exitPool(bytes32 poolId,address sender,address recipient,tuple request)"
    },
    "0x5c38449e": {
        "type": "function",
        "value": "flashLoan(address recipient,address[] tokens,uint256[] amounts,bytes userData)"
    },
    "0x851c1bb3": {
        "type": "function",
        "value": "getActionId(bytes4 selector)"
    },
    "0xaaabadc5": {
        "type": "function",
        "value": "getAuthorizer()"
    },
    "0xed24911d": {
        "type": "function",
        "value": "getDomainSeparator()"
    },
    "0x0f5a6efa": {
        "type": "function",
        "value": "getInternalBalance(address user,address[] tokens)"
    },
    "0x90193b7c": {
        "type": "function",
        "value": "getNextNonce(address user)"
    },
    "0x1c0de051": {
        "type": "function",
        "value": "getPausedState()"
    },
    "0xf6c00927": {
        "type": "function",
        "value": "getPool(bytes32 poolId)"
    },
    "0xb05f8e48": {
        "type": "function",
        "value": "getPoolTokenInfo(bytes32 poolId,address token)"
    },
    "0xf94d4668": {
        "type": "function",
        "value": "getPoolTokens(bytes32 poolId)"
    },
    "0xd2946c2b": {
        "type": "function",
        "value": "getProtocolFeesCollector()"
    },
    "0xfec90d72": {
        "type": "function",
        "value": "hasApprovedRelayer(address user,address relayer)"
    },
    "0x854efd9b": {
        "type": "function",
        "value": "joinPool(bytes32 poolId,address sender,address recipient,tuple request)"
    },
    "0x03f4a834": {
        "type": "function",
        "value": "managePoolBalance(tuple[] ops)"
    },
    "0x1ec24dd9": {
        "type": "function",
        "value": "manageUserBalance(tuple[] ops)"
    },
    "0x60b8cb04": {
        "type": "function",
        "value": "queryBatchSwap(uint8 kind,tuple[] swaps,address[] assets,tuple funds)"
    },
    "0x09b2760f": {
        "type": "function",
        "value": "registerPool(uint8 specialization)"
    },
    "0x66a9c7d2": {
        "type": "function",
        "value": "registerTokens(bytes32 poolId,address[] tokens,address[] assetManagers)"
    },
    "0x058a628f": {
        "type": "function",
        "value": "setAuthorizer(address newAuthorizer)"
    },
    "0x16c38b3c": {
        "type": "function",
        "value": "setPaused(bool paused)"
    },
    "0xfa6e671d": {
        "type": "function",
        "value": "setRelayerApproval(address sender,address relayer,bool approved)"
    },
    "0xc8fd2b5b": {
        "type": "function",
        "value": "swap(tuple singleSwap,tuple funds,uint256 limit,uint256 deadline)"
    },
    "0xccd34cd5": {
        "type": "function",
        "value": "PRECISION_FACTOR()"
    },
    "0x097aad10": {
        "type": "function",
        "value": "calculatePendingRewards(address user)"
    },
    "0x6de26e38": {
        "type": "function",
        "value": "calculateSharePriceInLOOKS()"
    },
    "0xab5e32af": {
        "type": "function",
        "value": "calculateSharesValueInLOOKS(address user)"
    },
    "0xcb4aec61": {
        "type": "function",
        "value": "currentRewardPerBlock()"
    },
    "0x9a408321": {
        "type": "function",
        "value": "deposit(uint256 amount,bool claimRewardToken)"
    },
    "0x4641257d": {
        "type": "function",
        "value": "harvest()"
    },
    "0x40d2abae": {
        "type": "function",
        "value": "lastRewardAdjustment()"
    },
    "0xa9f8d181": {
        "type": "function",
        "value": "lastRewardBlock()"
    },
    "0xa218141b": {
        "type": "function",
        "value": "lastUpdateBlock()"
    },
    "0x36db9fb2": {
        "type": "function",
        "value": "looksRareToken()"
    },
    "0x442da82f": {
        "type": "function",
        "value": "periodEndBlock()"
    },
    "0xdf136d65": {
        "type": "function",
        "value": "rewardPerTokenStored()"
    },
    "0xf7c618c1": {
        "type": "function",
        "value": "rewardToken()"
    },
    "0x18a6bc32": {
        "type": "function",
        "value": "tokenDistributor()"
    },
    "0x3a98ef39": {
        "type": "function",
        "value": "totalShares()"
    },
    "0x97e50818": {
        "type": "function",
        "value": "updateRewards(uint256 reward,uint256 rewardDurationInBlocks)"
    },
    "0x1959a002": {
        "type": "function",
        "value": "userInfo(address )"
    },
    "0x38d07436": {
        "type": "function",
        "value": "withdraw(uint256 shares,bool claimRewardToken)"
    },
    "0x1c1c6fe5": {
        "type": "function",
        "value": "withdrawAll(bool claimRewardToken)"
    },
    "0xc7977be7": {
        "type": "function",
        "value": "EIP712_DOMAIN_TYPEHASH()"
    },
    "0x17fafcd7": {
        "type": "function",
        "value": "SettleAggregateOrder(tuple order,bytes takerSig,tuple[] makerSigs)"
    },
    "0x3001e0c2": {
        "type": "function",
        "value": "hashAggregateOrder(tuple order)"
    },
    "0x94e8b38d": {
        "type": "function",
        "value": "hashPartialOrder(tuple order)"
    },
    "0xea7faa61": {
        "type": "function",
        "value": "registerAllowedOrderSigner(address signer,bool allowed)"
    },
    "0x1bfdba1e": {
        "type": "function",
        "value": "validateMakerSignature(address maker_address,bytes32 hash,tuple signature)"
    },
    "0x42966c68": {
        "type": "function",
        "value": "burn(uint256 _value)"
    },
    "0x302e5bb1": {
        "type": "function",
        "value": "collect(tuple params)"
    },
    "0x13ead562": {
        "type": "function",
        "value": "createAndInitializePoolIfNecessary(address token0,address token1,uint24 fee,uint160 sqrtPriceX96)"
    },
    "0xc6887a9d": {
        "type": "function",
        "value": "decreaseLiquidity(tuple params)"
    },
    "0x7ac2ff7b": {
        "type": "function",
        "value": "permit(address spender,uint256 tokenId,uint256 deadline,uint8 v,bytes32 r,bytes32 s)"
    },
    "0x99fbab88": {
        "type": "function",
        "value": "positions(uint256 tokenId)"
    },
    "0xd3487997": {
        "type": "function",
        "value": "uniswapV3MintCallback(uint256 amount0Owed,uint256 amount1Owed,bytes data)"
    },
    "0x454db034": {
        "type": "function",
        "value": "batchSwapWithFee(uint8 kind,tuple[] swaps,address[] tokens,tuple funds,int256[] limits,uint256 deadline,tuple feeTransfer)"
    },
    "0x5c6ae164": {
        "type": "function",
        "value": "transferFromAccounts(tuple[] transfers)"
    },
    "0x93e4eaa9": {
        "type": "function",
        "value": "RUNE()"
    },
    "0x1fece7b4": {
        "type": "function",
        "value": "deposit(address vault,address asset,uint256 amount,string memo)"
    },
    "0x44bc937b": {
        "type": "function",
        "value": "depositWithExpiry(address vault,address asset,uint256 amount,string memo,uint256 expiration)"
    },
    "0xb98b995f": {
        "type": "function",
        "value": "returnVaultAssets(address router,address asgard,tuple[] coins,string memo)"
    },
    "0x1b738b32": {
        "type": "function",
        "value": "transferAllowance(address router,address newVault,address asset,uint256 amount,string memo)"
    },
    "0x574da717": {
        "type": "function",
        "value": "transferOut(address to,address asset,uint256 amount,string memo)"
    },
    "0x4039fd4b": {
        "type": "function",
        "value": "transferOutAndCall(address aggregator,address finalToken,address to,uint256 amountOutMin,string memo)"
    },
    "0x03b6a673": {
        "type": "function",
        "value": "vaultAllowance(address vault,address token)"
    },
    "0x0a5ea466": {
        "type": "function",
        "value": "claimTokens(address token,address who,address dest,uint256 amount)"
    },
    "0xb1746b86": {
        "type": "function",
        "value": "burnGasToken(uint256 gasSpent)"
    },
    "0xc91d59fe": {
        "type": "function",
        "value": "gasToken()"
    },
    "0xccf1af31": {
        "type": "function",
        "value": "gasTokenOwner()"
    },
    "0x6f5ffb7e": {
        "type": "error",
        "value": "ContractLocked()"
    },
    "0x1231ae40": {
        "type": "error",
        "value": "ETHNotAccepted()"
    },
    "0x2c4029e9": {
        "type": "error",
        "value": "ExecutionFailed(uint256 commandIndex,bytes message)"
    },
    "0xe7002877": {
        "type": "error",
        "value": "FromAddressIsNotOwner()"
    },
    "0x6a12f104": {
        "type": "error",
        "value": "InsufficientETH()"
    },
    "0x675cae38": {
        "type": "error",
        "value": "InsufficientToken()"
    },
    "0xdeaa01e6": {
        "type": "error",
        "value": "InvalidBips()"
    },
    "0xd76a1e9e": {
        "type": "error",
        "value": "InvalidCommandType(uint256 commandType)"
    },
    "0x483a6929": {
        "type": "error",
        "value": "InvalidOwnerERC1155()"
    },
    "0x7dbe7e89": {
        "type": "error",
        "value": "InvalidOwnerERC721()"
    },
    "0x20db8267": {
        "type": "error",
        "value": "InvalidPath()"
    },
    "0x7b9c8916": {
        "type": "error",
        "value": "InvalidReserves()"
    },
    "0xcc94a63a": {
        "type": "error",
        "value": "NoSlice()"
    },
    "0x3b99b53d": {
        "type": "error",
        "value": "SliceOutOfBounds()"
    },
    "0x47aaf07a": {
        "type": "error",
        "value": "SliceOverflow()"
    },
    "0xa78aa27f": {
        "type": "error",
        "value": "ToAddressOutOfBounds()"
    },
    "0x77146e62": {
        "type": "error",
        "value": "ToAddressOverflow()"
    },
    "0xd9096a3e": {
        "type": "error",
        "value": "ToUint24OutOfBounds()"
    },
    "0x855859b4": {
        "type": "error",
        "value": "ToUint24Overflow()"
    },
    "0x5bf6f916": {
        "type": "error",
        "value": "TransactionDeadlinePassed()"
    },
    "0x7d529919": {
        "type": "error",
        "value": "UnableToClaim()"
    },
    "0xc4bd89a9": {
        "type": "error",
        "value": "UnsafeCast()"
    },
    "0xae52ad0c": {
        "type": "error",
        "value": "V2InvalidPath()"
    },
    "0x849eaf98": {
        "type": "error",
        "value": "V2TooLittleReceived()"
    },
    "0x8ab0bc16": {
        "type": "error",
        "value": "V2TooMuchRequested()"
    },
    "0xd4e0248e": {
        "type": "error",
        "value": "V3InvalidAmountOut()"
    },
    "0x32b13d91": {
        "type": "error",
        "value": "V3InvalidCaller()"
    },
    "0x316cf0eb": {
        "type": "error",
        "value": "V3InvalidSwap()"
    },
    "0x39d35496": {
        "type": "error",
        "value": "V3TooLittleReceived()"
    },
    "0x739dbe52": {
        "type": "error",
        "value": "V3TooMuchRequested()"
    },
    "0x709a1cc2": {
        "type": "function",
        "value": "collectRewards(bytes looksRareClaim)"
    },
    "0x24856bc3": {
        "type": "function",
        "value": "execute(bytes commands,bytes[] inputs)"
    },
    "0x3593564c": {
        "type": "function",
        "value": "execute(bytes commands,bytes[] inputs,uint256 deadline)"
    },
    "0xbca8c7b5": {
        "type": "function",
        "value": "executeCall(address target,bytes callData)"
    },
    "0xa217fddf": {
        "type": "function",
        "value": "DEFAULT_ADMIN_ROLE()"
    },
    "0x8e325979": {
        "type": "function",
        "value": "DELEGATION_CALLER()"
    },
    "0x2c436e5b": {
        "type": "function",
        "value": "delegateType()"
    },
    "0x3672c911": {
        "type": "function",
        "value": "executeAuctionComplete(address ,address buyer,bytes data)"
    },
    "0xf477e4fd": {
        "type": "function",
        "value": "executeAuctionRefund(address seller,address ,bytes data)"
    },
    "0xc23725f9": {
        "type": "function",
        "value": "executeBid(address seller,address previousBidder,address ,bytes data)"
    },
    "0x16721626": {
        "type": "function",
        "value": "executeBuy(address seller,address buyer,bytes data)"
    },
    "0xbc553f0f": {
        "type": "function",
        "value": "executeSell(address seller,address buyer,bytes data)"
    },
    "0x248a9ca3": {
        "type": "function",
        "value": "getRoleAdmin(bytes32 role)"
    },
    "0x2f2ff15d": {
        "type": "function",
        "value": "grantRole(bytes32 role,address account)"
    },
    "0x91d14854": {
        "type": "function",
        "value": "hasRole(bytes32 role,address account)"
    },
    "0x36568abe": {
        "type": "function",
        "value": "renounceRole(bytes32 role,address account)"
    },
    "0xd547741f": {
        "type": "function",
        "value": "revokeRole(bytes32 role,address account)"
    },
    "0x7ac0c894": {
        "type": "function",
        "value": "transferBatch(tuple[] pairs,address to)"
    },
    "0xb238b533": {
        "type": "function",
        "value": "addNativeLiquidity()"
    },
    "0xedd9587b": {
        "type": "function",
        "value": "addSupportedToken(address tokenAddress,uint256 minCapLimit,uint256 maxCapLimit)"
    },
    "0x14fe72aa": {
        "type": "function",
        "value": "addTokenLiquidity(address tokenAddress,uint256 amount)"
    },
    "0xa0be06f9": {
        "type": "function",
        "value": "adminFee()"
    },
    "0xfcc4d59a": {
        "type": "function",
        "value": "adminFeeAccumulatedByToken(address )"
    },
    "0x583bbc40": {
        "type": "function",
        "value": "baseGas()"
    },
    "0xb6632cb3": {
        "type": "function",
        "value": "changeAdminFee(uint256 newAdminFee)"
    },
    "0x2cd271e7": {
        "type": "function",
        "value": "changePauser(address newPauser)"
    },
    "0x85a25597": {
        "type": "function",
        "value": "checkHashStatus(address tokenAddress,uint256 amount,address receiver,bytes depositHash)"
    },
    "0x13fe24e1": {
        "type": "function",
        "value": "depositErc20(address tokenAddress,address receiver,uint256 amount,uint256 toChainId)"
    },
    "0x02279b4a": {
        "type": "function",
        "value": "depositNative(address receiver,uint256 toChainId)"
    },
    "0xe06179fe": {
        "type": "function",
        "value": "gasFeeAccumulatedByToken(address )"
    },
    "0x2a905ccc": {
        "type": "function",
        "value": "getAdminFee()"
    },
    "0xab1635b7": {
        "type": "function",
        "value": "getExecutorManager()"
    },
    "0xea526de7": {
        "type": "function",
        "value": "getLiquidity(address liquidityProviderAddress,address tokenAddress)"
    },
    "0x7008b548": {
        "type": "function",
        "value": "getPauser()"
    },
    "0xb187bd26": {
        "type": "function",
        "value": "isPaused()"
    },
    "0x6a8a3b96": {
        "type": "function",
        "value": "isPauser()"
    },
    "0x1f9bf5f5": {
        "type": "function",
        "value": "permitAndDepositErc20(address tokenAddress,address receiver,uint256 amount,uint256 toChainId,tuple permitOptions)"
    },
    "0xbf797e2a": {
        "type": "function",
        "value": "permitEIP2612AndDepositErc20(address tokenAddress,address receiver,uint256 amount,uint256 toChainId,tuple permitOptions)"
    },
    "0x760d098a": {
        "type": "function",
        "value": "processedHash(bytes32 )"
    },
    "0xf72780ef": {
        "type": "function",
        "value": "removeNativeLiquidity(uint256 amount)"
    },
    "0x76319190": {
        "type": "function",
        "value": "removeSupportedToken(address tokenAddress)"
    },
    "0x84d93612": {
        "type": "function",
        "value": "removeTokenLiquidity(address tokenAddress,uint256 amount)"
    },
    "0x8909bb83": {
        "type": "function",
        "value": "sendFundsToUser(address tokenAddress,uint256 amount,address receiver,bytes depositHash,uint256 tokenGasPrice)"
    },
    "0xccb844e1": {
        "type": "function",
        "value": "setBaseGas(uint128 gas)"
    },
    "0xef0d4572": {
        "type": "function",
        "value": "setExecutorManager(address _executorManagerAddress)"
    },
    "0x8b56d0b7": {
        "type": "function",
        "value": "setTokenTransferOverhead(address tokenAddress,uint256 gasOverhead)"
    },
    "0xda742228": {
        "type": "function",
        "value": "setTrustedForwarder(address forwarderAddress)"
    },
    "0xba8dbea2": {
        "type": "function",
        "value": "tokensInfo(address )"
    },
    "0x7da0a877": {
        "type": "function",
        "value": "trustedForwarder()"
    },
    "0x56e3866d": {
        "type": "function",
        "value": "updateTokenCap(address tokenAddress,uint256 minCapLimit,uint256 maxCapLimit)"
    },
    "0x486ff0cd": {
        "type": "function",
        "value": "versionRecipient()"
    },
    "0xc7e42b1b": {
        "type": "function",
        "value": "withdrawErc20(address tokenAddress)"
    },
    "0x1ff14860": {
        "type": "function",
        "value": "withdrawErc20AdminFee(address tokenAddress,address receiver)"
    },
    "0x1a2b4381": {
        "type": "function",
        "value": "withdrawErc20GasFee(address tokenAddress,address receiver)"
    },
    "0x50431ce4": {
        "type": "function",
        "value": "withdrawNative()"
    },
    "0xfa181699": {
        "type": "function",
        "value": "withdrawNativeAdminFee(address receiver)"
    },
    "0x23868d6c": {
        "type": "function",
        "value": "withdrawNativeGasFee(address receiver)"
    },
    "0x3dd7df50": {
        "type": "function",
        "value": "LOOKS_RARE_EXCHANGE()"
    },
    "0x33f2fa9f": {
        "type": "function",
        "value": "transferNonFungibleToken(address collection,address from,address to,uint256 tokenId,uint256 )"
    },
    "0x1878d1f1": {
        "type": "function",
        "value": "ETH_TOKEN_ADDRESS()"
    },
    "0xd337e37b": {
        "type": "function",
        "value": "pay(address src,uint256 srcAmount,address dest,address destAddress,uint256 maxDestAmount,uint256 minConversionRate,address walletId,bytes paymentData,bytes hint,address kyberNetworkProxy)"
    },
    "0x48d67e1b": {
        "type": "function",
        "value": "decayPeriod()"
    },
    "0xeaadf848": {
        "type": "function",
        "value": "decayPeriodVote(uint256 vote)"
    },
    "0x7e82a6f3": {
        "type": "function",
        "value": "decayPeriodVotes(address user)"
    },
    "0x3049105d": {
        "type": "function",
        "value": "deposit(uint256[2] maxAmounts,uint256[2] minAmounts)"
    },
    "0x9ea5ce0a": {
        "type": "function",
        "value": "depositFor(uint256[2] maxAmounts,uint256[2] minAmounts,address target)"
    },
    "0xf76d13b4": {
        "type": "function",
        "value": "discardDecayPeriodVote()"
    },
    "0x93028d83": {
        "type": "function",
        "value": "discardFeeVote()"
    },
    "0x6669302a": {
        "type": "function",
        "value": "discardSlippageFeeVote()"
    },
    "0x11212d66": {
        "type": "function",
        "value": "feeVote(uint256 vote)"
    },
    "0x9aad141b": {
        "type": "function",
        "value": "feeVotes(address user)"
    },
    "0xd7d3aab5": {
        "type": "function",
        "value": "getBalanceForAddition(address token)"
    },
    "0xe7ff42c9": {
        "type": "function",
        "value": "getBalanceForRemoval(address token)"
    },
    "0x1e1401f8": {
        "type": "function",
        "value": "getReturn(address src,address dst,uint256 amount)"
    },
    "0xd9a0c217": {
        "type": "function",
        "value": "mooniswapFactoryGovernance()"
    },
    "0xc40d4d66": {
        "type": "function",
        "value": "setMooniswapFactoryGovernance(address newMooniswapFactoryGovernance)"
    },
    "0x3732b394": {
        "type": "function",
        "value": "slippageFee()"
    },
    "0x07a80070": {
        "type": "function",
        "value": "slippageFeeVote(uint256 vote)"
    },
    "0x95cad3c7": {
        "type": "function",
        "value": "slippageFeeVotes(address user)"
    },
    "0xd5bcb9b5": {
        "type": "function",
        "value": "swap(address src,address dst,uint256 amount,uint256 minReturn,address referral)"
    },
    "0xe331d039": {
        "type": "function",
        "value": "swapFor(address src,address dst,uint256 amount,uint256 minReturn,address referral,address receiver)"
    },
    "0x0dfe1681": {
        "type": "function",
        "value": "token0()"
    },
    "0xd21220a7": {
        "type": "function",
        "value": "token1()"
    },
    "0x6edc2c09": {
        "type": "function",
        "value": "virtualBalancesForAddition(address )"
    },
    "0x5ed9156d": {
        "type": "function",
        "value": "virtualBalancesForRemoval(address )"
    },
    "0x0146081f": {
        "type": "function",
        "value": "virtualDecayPeriod()"
    },
    "0xf1ea6042": {
        "type": "function",
        "value": "virtualFee()"
    },
    "0x23e8cae1": {
        "type": "function",
        "value": "virtualSlippageFee()"
    },
    "0xb1ec4c40": {
        "type": "function",
        "value": "volumes(address )"
    },
    "0x5915d806": {
        "type": "function",
        "value": "withdraw(uint256 amount,uint256[] minReturns)"
    },
    "0x3c6216a6": {
        "type": "function",
        "value": "withdrawFor(uint256 amount,uint256[] minReturns,address target)"
    },
    "0xa82719c8": {
        "type": "function",
        "value": "bondingCurveAllowed(address )"
    },
    "0x1fba95e8": {
        "type": "function",
        "value": "callAllowed(address )"
    },
    "0x9c3c11d2": {
        "type": "function",
        "value": "changeProtocolFeeMultiplier(uint256 _protocolFeeMultiplier)"
    },
    "0x514f0330": {
        "type": "function",
        "value": "changeProtocolFeeRecipient(address _protocolFeeRecipient)"
    },
    "0x2b008738": {
        "type": "function",
        "value": "createPairERC20(tuple params)"
    },
    "0xce9c095d": {
        "type": "function",
        "value": "createPairETH(address _nft,address _bondingCurve,address _assetRecipient,uint8 _poolType,uint128 _delta,uint96 _fee,uint128 _spotPrice,uint256[] _initialNFTIDs)"
    },
    "0x1cad5a40": {
        "type": "function",
        "value": "depositERC20(address token,address recipient,uint256 amount)"
    },
    "0x2cdb394b": {
        "type": "function",
        "value": "depositNFTs(address _nft,uint256[] ids,address recipient)"
    },
    "0xa427f1ad": {
        "type": "function",
        "value": "enumerableERC20Template()"
    },
    "0xad2e5770": {
        "type": "function",
        "value": "enumerableETHTemplate()"
    },
    "0x08f25a8f": {
        "type": "function",
        "value": "isPair(address potentialPair,uint8 variant)"
    },
    "0x4c6bc433": {
        "type": "function",
        "value": "missingEnumerableERC20Template()"
    },
    "0x004885ea": {
        "type": "function",
        "value": "missingEnumerableETHTemplate()"
    },
    "0x1ce4c78b": {
        "type": "function",
        "value": "protocolFeeMultiplier()"
    },
    "0xa93ec68b": {
        "type": "function",
        "value": "routerStatus(address )"
    },
    "0x4bf107c1": {
        "type": "function",
        "value": "setBondingCurveAllowed(address bondingCurve,bool isAllowed)"
    },
    "0xebd0f693": {
        "type": "function",
        "value": "setCallAllowed(address target,bool isAllowed)"
    },
    "0x6cc88edb": {
        "type": "function",
        "value": "setRouterAllowed(address _router,bool isAllowed)"
    },
    "0xcc5bc20b": {
        "type": "function",
        "value": "withdrawERC20ProtocolFees(address token,uint256 amount)"
    },
    "0xb483eddc": {
        "type": "function",
        "value": "withdrawETHProtocolFees()"
    },
    "0xdd1fe62c": {
        "type": "function",
        "value": "freeReduxTokens(address user,uint256 tokensToFree)"
    },
    "0x7fb93127": {
        "type": "function",
        "value": "reduxToken()"
    },
    "0xa619486e": {
        "type": "function",
        "value": "masterCopy()"
    },
    "0x48ccda3c": {
        "type": "function",
        "value": "AAVE()"
    },
    "0x0542975c": {
        "type": "function",
        "value": "ADDRESSES_PROVIDER()"
    },
    "0xf301e781": {
        "type": "function",
        "value": "LEND()"
    },
    "0xb4dcfc77": {
        "type": "function",
        "value": "LENDING_POOL()"
    },
    "0xa56152e8": {
        "type": "function",
        "value": "LENDING_POOL_V1()"
    },
    "0x3bcb753f": {
        "type": "function",
        "value": "LENDING_POOL_V1_CORE()"
    },
    "0x4484c213": {
        "type": "function",
        "value": "LEND_TO_AAVE_MIGRATOR()"
    },
    "0x920f5c84": {
        "type": "function",
        "value": "executeOperation(address[] assets,uint256[] amounts,uint256[] premiums,address initiator,bytes params)"
    },
    "0x6321c7e8": {
        "type": "function",
        "value": "migrateATokens(address[] v1ATokens,uint256[] aTokensAmounts)"
    },
    "0x2e0e9fbd": {
        "type": "function",
        "value": "relayers(address ,uint256 )"
    },
    "0x482879aa": {
        "type": "function",
        "value": "sablier()"
    },
    "0x52e877d2": {
        "type": "function",
        "value": "whitelistRelayer(address relayer,uint256 salaryId)"
    },
    "0x591bc226": {
        "type": "function",
        "value": "discardRelayer(address relayer,uint256 salaryId)"
    },
    "0x73f4823e": {
        "type": "function",
        "value": "createCompoundingSalary(address employee,uint256 salary,address tokenAddress,uint256 startTime,uint256 stopTime,uint256 senderSharePercentage,uint256 recipientSharePercentage)"
    },
    "0x74e861d6": {
        "type": "function",
        "value": "getHubAddr()"
    },
    "0x80274db7": {
        "type": "function",
        "value": "preRelayedCall(bytes context)"
    },
    "0x80bfacc2": {
        "type": "function",
        "value": "getSalary(uint256 salaryId)"
    },
    "0x83947ea0": {
        "type": "function",
        "value": "acceptRelayedCall(address relay,address from,bytes encodedFunction,uint256 transactionFee,uint256 gasPrice,uint256 gasLimit,uint256 nonce,bytes approvalData,uint256 )"
    },
    "0xad61ccd5": {
        "type": "function",
        "value": "relayHubVersion()"
    },
    "0xc0c53b8b": {
        "type": "function",
        "value": "initialize(address ownerAddress,address signerAddress,address sablierAddress)"
    },
    "0xc5a66ff9": {
        "type": "function",
        "value": "cancelSalary(uint256 salaryId)"
    },
    "0xdc7d9369": {
        "type": "function",
        "value": "createSalary(address employee,uint256 salary,address tokenAddress,uint256 startTime,uint256 stopTime)"
    },
    "0xde8fd678": {
        "type": "function",
        "value": "nextSalaryId()"
    },
    "0xe06e0e22": {
        "type": "function",
        "value": "postRelayedCall(bytes context,bool success,uint256 actualCharge,bytes32 preRetVal)"
    },
    "0xfea7c53f": {
        "type": "function",
        "value": "withdrawFromSalary(uint256 salaryId,uint256 amount)"
    },
    "0x0510111e": {
        "type": "function",
        "value": "MAXIMUM_COLLATERALIZATION_LIMIT()"
    },
    "0x30d4d190": {
        "type": "function",
        "value": "MINIMUM_COLLATERALIZATION_LIMIT()"
    },
    "0x45f867b3": {
        "type": "function",
        "value": "PERCENT_RESOLUTION()"
    },
    "0x538ba4f9": {
        "type": "function",
        "value": "ZERO_ADDRESS()"
    },
    "0xa005fda3": {
        "type": "function",
        "value": "_linkGasOracle()"
    },
    "0x238efcbc": {
        "type": "function",
        "value": "acceptGovernance()"
    },
    "0x4aaf7c65": {
        "type": "function",
        "value": "collateralizationLimit()"
    },
    "0x5641ec03": {
        "type": "function",
        "value": "emergencyExit()"
    },
    "0x6b9f96ea": {
        "type": "function",
        "value": "flush()"
    },
    "0xf0d787a3": {
        "type": "function",
        "value": "flushActivator()"
    },
    "0x9a9af221": {
        "type": "function",
        "value": "getCdpLastDeposit(address _account)"
    },
    "0xfc00e8a0": {
        "type": "function",
        "value": "getCdpTotalCredit(address _account)"
    },
    "0xaa6e0434": {
        "type": "function",
        "value": "getCdpTotalDebt(address _account)"
    },
    "0xa1e401a9": {
        "type": "function",
        "value": "getCdpTotalDeposited(address _account)"
    },
    "0x2670fdd8": {
        "type": "function",
        "value": "getVaultAdapter(uint256 _vaultId)"
    },
    "0xaaf16660": {
        "type": "function",
        "value": "getVaultTotalDeposited(uint256 _vaultId)"
    },
    "0xddc63262": {
        "type": "function",
        "value": "harvest(uint256 _vaultId)"
    },
    "0xb5962917": {
        "type": "function",
        "value": "harvestFee()"
    },
    "0x158ef93e": {
        "type": "function",
        "value": "initialized()"
    },
    "0x415f1240": {
        "type": "function",
        "value": "liquidate(uint256 _amount)"
    },
    "0xce5494bb": {
        "type": "function",
        "value": "migrate(address _adapter)"
    },
    "0x3847f038": {
        "type": "function",
        "value": "pegMinimum()"
    },
    "0xf39c38a0": {
        "type": "function",
        "value": "pendingGovernance()"
    },
    "0xfefdc5d1": {
        "type": "function",
        "value": "recall(uint256 _vaultId,uint256 _amount)"
    },
    "0x4c3a8e02": {
        "type": "function",
        "value": "recallAll(uint256 _vaultId)"
    },
    "0xd8aed145": {
        "type": "function",
        "value": "repay(uint256 _parentAmount,uint256 _childAmount)"
    },
    "0x9ec5a894": {
        "type": "function",
        "value": "rewards()"
    },
    "0xf58c251c": {
        "type": "function",
        "value": "sentinel()"
    },
    "0x53ffa18b": {
        "type": "function",
        "value": "setCollateralizationLimit(uint256 _limit)"
    },
    "0x45ee0755": {
        "type": "function",
        "value": "setEmergencyExit(bool _emergencyExit)"
    },
    "0x22c37b75": {
        "type": "function",
        "value": "setFlushActivator(uint256 _flushActivator)"
    },
    "0x792b55b6": {
        "type": "function",
        "value": "setHarvestFee(uint256 _harvestFee)"
    },
    "0x5a9b5e92": {
        "type": "function",
        "value": "setOracleAddress(address Oracle,uint256 peg)"
    },
    "0x0abb6035": {
        "type": "function",
        "value": "setPendingGovernance(address _pendingGovernance)"
    },
    "0xec38a862": {
        "type": "function",
        "value": "setRewards(address _rewards)"
    },
    "0x09dac061": {
        "type": "function",
        "value": "setSentinel(address _sentinel)"
    },
    "0xadb4a9ad": {
        "type": "function",
        "value": "setTransmuter(address _transmuter)"
    },
    "0xff50abdc": {
        "type": "function",
        "value": "totalDeposited()"
    },
    "0x7239d2b9": {
        "type": "function",
        "value": "transmuter()"
    },
    "0xa7c6a100": {
        "type": "function",
        "value": "vaultCount()"
    },
    "0x1718a68f": {
        "type": "function",
        "value": "xtoken()"
    },
    "0xbb038e15": {
        "type": "function",
        "value": "cdpManager()"
    },
    "0xe19b8ee3": {
        "type": "function",
        "value": "migrate(bytes32 cup)"
    },
    "0x0b14408f": {
        "type": "function",
        "value": "saiJoin()"
    },
    "0xc41780ba": {
        "type": "function",
        "value": "swapDaiToSai(uint256 wad)"
    },
    "0xfbabdebd": {
        "type": "function",
        "value": "swapSaiToDai(uint256 wad)"
    },
    "0x34e70cc2": {
        "type": "function",
        "value": "tub()"
    },
    "0x2dbacef3": {
        "type": "function",
        "value": "wethJoin()"
    },
    "0x1652e9fc": {
        "type": "function",
        "value": "set_minter(address _minter)"
    },
    "0x40c10f19": {
        "type": "function",
        "value": "mint(address _to,uint256 _value)"
    },
    "0x79cc6790": {
        "type": "function",
        "value": "burnFrom(address _to,uint256 _value)"
    }
}