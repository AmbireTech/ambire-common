{
    "0xdd62ed3e": {
        "type": "function",
        "signature": "function allowance(address owner, address spender) view returns (uint256)",
        "selector": "0xdd62ed3e"
    },
    "0x095ea7b3": {
        "type": "function",
        "signature": "function approve(address spender, uint256 amount) returns (bool)",
        "selector": "0x095ea7b3"
    },
    "0x70a08231": {
        "type": "function",
        "signature": "function balanceOf(address account) view returns (uint256)",
        "selector": "0x70a08231"
    },
    "0xb0ac19a0": {
        "type": "function",
        "signature": "function computeAddress2(uint256 salt) view returns (address)",
        "selector": "0xb0ac19a0"
    },
    "0x313ce567": {
        "type": "function",
        "signature": "function decimals() view returns (uint8)",
        "selector": "0x313ce567"
    },
    "0xd8ccd0f3": {
        "type": "function",
        "signature": "function free(uint256 value) returns (uint256)",
        "selector": "0xd8ccd0f3"
    },
    "0x5f2e2b45": {
        "type": "function",
        "signature": "function freeFrom(address from, uint256 value) returns (uint256)",
        "selector": "0x5f2e2b45"
    },
    "0x079d229f": {
        "type": "function",
        "signature": "function freeFromUpTo(address from, uint256 value) returns (uint256)",
        "selector": "0x079d229f"
    },
    "0x6366b936": {
        "type": "function",
        "signature": "function freeUpTo(uint256 value) returns (uint256)",
        "selector": "0x6366b936"
    },
    "0xa0712d68": {
        "type": "function",
        "signature": "function mint(uint256 mintAmount) returns (uint256)",
        "selector": "0xa0712d68"
    },
    "0x06fdde03": {
        "type": "function",
        "signature": "function name() view returns (string)",
        "selector": "0x06fdde03"
    },
    "0x95d89b41": {
        "type": "function",
        "signature": "function symbol() view returns (string)",
        "selector": "0x95d89b41"
    },
    "0xd89135cd": {
        "type": "function",
        "signature": "function totalBurned() view returns (uint256)",
        "selector": "0xd89135cd"
    },
    "0xa2309ff8": {
        "type": "function",
        "signature": "function totalMinted() view returns (uint256)",
        "selector": "0xa2309ff8"
    },
    "0x18160ddd": {
        "type": "function",
        "signature": "function totalSupply() view returns (uint256)",
        "selector": "0x18160ddd"
    },
    "0xa9059cbb": {
        "type": "function",
        "signature": "function transfer(address recipient, uint256 amount) returns (bool)",
        "selector": "0xa9059cbb"
    },
    "0x23b872dd": {
        "type": "function",
        "signature": "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
        "selector": "0x23b872dd"
    },
    "0x0562b1a4": {
        "type": "function",
        "signature": "function setMarketActiveState(bool state)",
        "selector": "0x0562b1a4"
    },
    "0x057f8a38": {
        "type": "function",
        "signature": "function executeReserveReserveTradeWithData(address makerReserve, address takerReserve, tuple(address makerToken, address takerToken, uint256 makerAmount, uint256 takerAmount, uint256 makerFee, uint256 takerFee, uint256 gasLimit) trade, bytes32[] makerData, bytes32[] takerData) returns (bool)",
        "selector": "0x057f8a38"
    },
    "0x06789047": {
        "type": "function",
        "signature": "function settleReserveReserveTradeWithData(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) tradeInput, bytes32[] makerData, bytes32[] takerData)",
        "selector": "0x06789047"
    },
    "0x06b297d2": {
        "type": "function",
        "signature": "function settleReserveReserveTrade(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) tradeInput)",
        "selector": "0x06b297d2"
    },
    "0x0902f1ac": {
        "type": "function",
        "signature": "function getReserves() view returns (address[])",
        "selector": "0x0902f1ac"
    },
    "0x12fde4b7": {
        "type": "function",
        "signature": "function getFeeCollector() view returns (address)",
        "selector": "0x12fde4b7"
    },
    "0x268139d5": {
        "type": "function",
        "signature": "function removePublicReserveAddress(address reserve)",
        "selector": "0x268139d5"
    },
    "0x2a1e58c0": {
        "type": "function",
        "signature": "function ringTradeFromInput(tuple(bytes32 packedInput1, bytes32 packedInput2) packed) view returns (tuple(bool isReserve, uint256 identifier, address giveToken, uint256 giveAmount, uint256 fee, uint256 rebate, uint256 gasLimit))",
        "selector": "0x2a1e58c0"
    },
    "0x2c580a1f": {
        "type": "function",
        "signature": "function nominateFeeCollector(address collector)",
        "selector": "0x2c580a1f"
    },
    "0x338b5dea": {
        "type": "function",
        "signature": "function depositToken(address token, uint256 amount)",
        "selector": "0x338b5dea"
    },
    "0x3af89d03": {
        "type": "function",
        "signature": "function directWithdrawal(address token, uint256 amount) returns (bool)",
        "selector": "0x3af89d03"
    },
    "0x49c35605": {
        "type": "function",
        "signature": "function multiSigTransfer(address token, uint256 amount, uint64 nonce, uint8 v, bytes32 r, bytes32 s, address receiving_address)",
        "selector": "0x49c35605"
    },
    "0x4a0c3c3b": {
        "type": "function",
        "signature": "function delegateAddress(address delegate)",
        "selector": "0x4a0c3c3b"
    },
    "0x4f94d4c3": {
        "type": "function",
        "signature": "function orderFromInput(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s) orderInput) view returns (tuple(address sellToken, uint256 sellAmount, address buyToken, uint256 buyAmount, uint256 expiry, bytes32 hash, address signee))",
        "selector": "0x4f94d4c3"
    },
    "0x574c748d": {
        "type": "function",
        "signature": "function batchSettleTrades(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s)[] orderInput, tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3)[] tradeInput)",
        "selector": "0x574c748d"
    },
    "0x59b07e7a": {
        "type": "function",
        "signature": "function removeTokenAddressFromArr(address token)",
        "selector": "0x59b07e7a"
    },
    "0x5d7bdccd": {
        "type": "function",
        "signature": "function multiSigSend(address token, uint256 amount, uint64 nonce, uint8 v, bytes32 r, bytes32 s, address receiving_address)",
        "selector": "0x5d7bdccd"
    },
    "0x5e5dd317": {
        "type": "function",
        "signature": "function executeReserveReserveTrade(address makerReserve, address takerReserve, tuple(address makerToken, address takerToken, uint256 makerAmount, uint256 takerAmount, uint256 makerFee, uint256 takerFee, uint256 gasLimit) trade) returns (bool)",
        "selector": "0x5e5dd317"
    },
    "0x5e75228f": {
        "type": "function",
        "signature": "function swap(address sell_token, uint256 sell_amount, address buy_token, uint256 min_output, uint256 deadline) payable returns (uint256)",
        "selector": "0x5e75228f"
    },
    "0x61902470": {
        "type": "function",
        "signature": "function cacheTokenAddress(address token, uint256 index)",
        "selector": "0x61902470"
    },
    "0x660c5132": {
        "type": "function",
        "signature": "function getBestReserve(address sell_token, uint256 sell_amount, address buy_token) view returns (address, uint256)",
        "selector": "0x660c5132"
    },
    "0x66c0bd24": {
        "type": "function",
        "signature": "function getTokenIndex(address token) view returns (uint256)",
        "selector": "0x66c0bd24"
    },
    "0x6849dbe5": {
        "type": "function",
        "signature": "function nominateArbiter(address arbiter, bool status)",
        "selector": "0x6849dbe5"
    },
    "0x68bc15b0": {
        "type": "function",
        "signature": "function reserveTradeFromInput(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) packed) pure returns (tuple(uint256 orderAmount, uint256 reserveAmount, uint256 orderFee, uint256 reserveFee, uint256 orderRebate, uint256 reserveRebate, bool orderIsMaker, uint256 gasLimit))",
        "selector": "0x68bc15b0"
    },
    "0x72521dcd": {
        "type": "function",
        "signature": "function lockFeeCollector()",
        "selector": "0x72521dcd"
    },
    "0x73ee4d09": {
        "type": "function",
        "signature": "function executeReserveTrade(address sellToken, uint256 sellAmount, address buyToken, uint256 buyAmount, address reserve) returns (bool)",
        "selector": "0x73ee4d09"
    },
    "0x7bae7c22": {
        "type": "function",
        "signature": "function swapWithReserve(address sell_token, uint256 sell_amount, address buy_token, uint256 min_output, address reserve, uint256 deadline) payable returns (uint256)",
        "selector": "0x7bae7c22"
    },
    "0x862f9f5a": {
        "type": "function",
        "signature": "function getLastBlockedTimestamp(address user) view returns (uint256)",
        "selector": "0x862f9f5a"
    },
    "0x888d0e1d": {
        "type": "function",
        "signature": "function multiSigOrderBatchCancel(bytes32[] orderHashes, uint8 v, bytes32 r, bytes32 s)",
        "selector": "0x888d0e1d"
    },
    "0x8e0be445": {
        "type": "function",
        "signature": "function settleReserveTradeWithData(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s) orderInput, tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) tradeInput, bytes32[] data)",
        "selector": "0x8e0be445"
    },
    "0x90216c8c": {
        "type": "function",
        "signature": "function reserveReserveTradeFromInput(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) packed) view returns (tuple(address makerToken, address takerToken, uint256 makerAmount, uint256 takerAmount, uint256 makerFee, uint256 takerFee, uint256 gasLimit))",
        "selector": "0x90216c8c"
    },
    "0x94785a0c": {
        "type": "function",
        "signature": "function blockFundsForSingleSigWithdrawal(address token, uint256 amount)",
        "selector": "0x94785a0c"
    },
    "0x98a968c1": {
        "type": "function",
        "signature": "function depositWrappedEther(uint256 amount)",
        "selector": "0x98a968c1"
    },
    "0x98ea5fca": {
        "type": "function",
        "signature": "function depositEther() payable",
        "selector": "0x98ea5fca"
    },
    "0x9946ce7d": {
        "type": "function",
        "signature": "function getTokenFromIndex(uint256 index) view returns (address)",
        "selector": "0x9946ce7d"
    },
    "0x9bafc515": {
        "type": "function",
        "signature": "function userSigWithdrawal(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s)",
        "selector": "0x9bafc515"
    },
    "0x9e892372": {
        "type": "function",
        "signature": "function multiSigWithdrawal(address token, uint256 amount, uint64 nonce, uint8 v, bytes32 r, bytes32 s)",
        "selector": "0x9e892372"
    },
    "0xa2c38a23": {
        "type": "function",
        "signature": "function initiateSingleSigWithdrawal(address token, uint256 amount)",
        "selector": "0xa2c38a23"
    },
    "0xa46555d3": {
        "type": "function",
        "signature": "function settleRingTrade(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s)[] orderInput, tuple(bytes32 packedInput1, bytes32 packedInput2)[] tradeInput)",
        "selector": "0xa46555d3"
    },
    "0xa4d72d7c": {
        "type": "function",
        "signature": "function getReserveFromIndex(uint256 index) view returns (address)",
        "selector": "0xa4d72d7c"
    },
    "0xa6f9dae1": {
        "type": "function",
        "signature": "function changeOwner(address new_owner)",
        "selector": "0xa6f9dae1"
    },
    "0xaa6ca808": {
        "type": "function",
        "signature": "function getTokens() view returns (address[] tokens)",
        "selector": "0xaa6ca808"
    },
    "0xb695d805": {
        "type": "function",
        "signature": "function changeSingleSigWaitingPeriod(uint256 waiting_period)",
        "selector": "0xb695d805"
    },
    "0xb78e1bcc": {
        "type": "function",
        "signature": "function tradeFromInput(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) packed) pure returns (tuple(uint256 makerAmount, uint256 takerAmount, uint256 makerFee, uint256 takerFee, uint256 makerRebate))",
        "selector": "0xb78e1bcc"
    },
    "0xc47b8164": {
        "type": "function",
        "signature": "function cacheReserveAddress(address reserve, uint256 index, bool is_public)",
        "selector": "0xc47b8164"
    },
    "0xc84693a7": {
        "type": "function",
        "signature": "function settleTrade(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s) makerOrderInput, tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s) takerOrderInput, tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) tradeInput)",
        "selector": "0xc84693a7"
    },
    "0xcabfc903": {
        "type": "function",
        "signature": "function getSwapOutput(address sell_token, uint256 sell_amount, address buy_token) view returns (uint256)",
        "selector": "0xcabfc903"
    },
    "0xd0847f1c": {
        "type": "function",
        "signature": "function mintGasTokens(uint256 amount)",
        "selector": "0xd0847f1c"
    },
    "0xd4fac45d": {
        "type": "function",
        "signature": "function getBalance(address token, address user) view returns (uint256)",
        "selector": "0xd4fac45d"
    },
    "0xdedcc21b": {
        "type": "function",
        "signature": "function getReserveIndex(address reserve) view returns (uint256)",
        "selector": "0xdedcc21b"
    },
    "0xe21407ba": {
        "type": "function",
        "signature": "function settleRingTradeWithData(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s)[] orderInput, tuple(bytes32 packedInput1, bytes32 packedInput2)[] tradeInput, bytes32[][] data)",
        "selector": "0xe21407ba"
    },
    "0xe4e695fe": {
        "type": "function",
        "signature": "function getAvailableGasTokens() view returns (uint256 amount)",
        "selector": "0xe4e695fe"
    },
    "0xebf26a42": {
        "type": "function",
        "signature": "function revokeDelegation(address delegate, uint8 v, bytes32 r, bytes32 s)",
        "selector": "0xebf26a42"
    },
    "0xf6188339": {
        "type": "function",
        "signature": "function getBlocked(address token, address holder) view returns (uint256)",
        "selector": "0xf6188339"
    },
    "0xf8cd6e01": {
        "type": "function",
        "signature": "function executeReserveTradeWithData(address sellToken, uint256 sellAmount, address buyToken, uint256 buyAmount, address reserve, bytes32[] data) returns (bool)",
        "selector": "0xf8cd6e01"
    },
    "0xfdf99543": {
        "type": "function",
        "signature": "function settleReserveTrade(tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 r, bytes32 s) orderInput, tuple(bytes32 packedInput1, bytes32 packedInput2, bytes32 packedInput3) tradeInput)",
        "selector": "0xfdf99543"
    },
    "0x07f7aafb": {
        "type": "function",
        "signature": "function approveContract(address _contract)",
        "selector": "0x07f7aafb"
    },
    "0x69dc9ff3": {
        "type": "function",
        "signature": "function contracts(address) view returns (bool)",
        "selector": "0x69dc9ff3"
    },
    "0xb7e2077e": {
        "type": "function",
        "signature": "function denyContract(address _contract)",
        "selector": "0xb7e2077e"
    },
    "0xa8034df1": {
        "type": "function",
        "signature": "function grantApproval()",
        "selector": "0xa8034df1"
    },
    "0x8da5cb5b": {
        "type": "function",
        "signature": "function owner() view returns (address)",
        "selector": "0x8da5cb5b"
    },
    "0x715018a6": {
        "type": "function",
        "signature": "function renounceOwnership()",
        "selector": "0x715018a6"
    },
    "0x90d02b3c": {
        "type": "function",
        "signature": "function revokeApproval()",
        "selector": "0x90d02b3c"
    },
    "0x4a3e3a1f": {
        "type": "function",
        "signature": "function revokedApproval(address) view returns (bool)",
        "selector": "0x4a3e3a1f"
    },
    "0x74a9402e": {
        "type": "function",
        "signature": "function transferERC1155(address collection, address from, address to, uint256 tokenId, uint256 amount)",
        "selector": "0x74a9402e"
    },
    "0xda3e8ce4": {
        "type": "function",
        "signature": "function transferERC20(address token, address from, address to, uint256 amount)",
        "selector": "0xda3e8ce4"
    },
    "0x789f93f6": {
        "type": "function",
        "signature": "function transferERC721(address collection, address from, address to, uint256 tokenId)",
        "selector": "0x789f93f6"
    },
    "0xca72da8e": {
        "type": "function",
        "signature": "function transferERC721Unsafe(address collection, address from, address to, uint256 tokenId)",
        "selector": "0xca72da8e"
    },
    "0xf2fde38b": {
        "type": "function",
        "signature": "function transferOwnership(address newOwner)",
        "selector": "0xf2fde38b"
    },
    "0xd81b2f2e": {
        "type": "error",
        "signature": "error AllowanceExpired(uint256 deadline)",
        "selector": "0xd81b2f2e"
    },
    "0x24d35a26": {
        "type": "error",
        "signature": "error ExcessiveInvalidation()",
        "selector": "0x24d35a26"
    },
    "0xf96fb071": {
        "type": "error",
        "signature": "error InsufficientAllowance(uint256 amount)",
        "selector": "0xf96fb071"
    },
    "0x3728b83d": {
        "type": "error",
        "signature": "error InvalidAmount(uint256 maxAmount)",
        "selector": "0x3728b83d"
    },
    "0xb0669cbc": {
        "type": "error",
        "signature": "error InvalidContractSignature()",
        "selector": "0xb0669cbc"
    },
    "0x756688fe": {
        "type": "error",
        "signature": "error InvalidNonce()",
        "selector": "0x756688fe"
    },
    "0x8baa579f": {
        "type": "error",
        "signature": "error InvalidSignature()",
        "selector": "0x8baa579f"
    },
    "0x4be6321b": {
        "type": "error",
        "signature": "error InvalidSignatureLength()",
        "selector": "0x4be6321b"
    },
    "0x815e1d64": {
        "type": "error",
        "signature": "error InvalidSigner()",
        "selector": "0x815e1d64"
    },
    "0xff633a38": {
        "type": "error",
        "signature": "error LengthMismatch()",
        "selector": "0xff633a38"
    },
    "0xcd21db4f": {
        "type": "error",
        "signature": "error SignatureExpired(uint256 signatureDeadline)",
        "selector": "0xcd21db4f"
    },
    "0x3644e515": {
        "type": "function",
        "signature": "function DOMAIN_SEPARATOR() view returns (bytes32)",
        "selector": "0x3644e515"
    },
    "0x927da105": {
        "type": "function",
        "signature": "function allowance(address, address, address) view returns (uint160 amount, uint48 expiration, uint48 nonce)",
        "selector": "0x927da105"
    },
    "0x87517c45": {
        "type": "function",
        "signature": "function approve(address token, address spender, uint160 amount, uint48 expiration)",
        "selector": "0x87517c45"
    },
    "0x65d9723c": {
        "type": "function",
        "signature": "function invalidateNonces(address token, address spender, uint48 newNonce)",
        "selector": "0x65d9723c"
    },
    "0x3ff9dcb1": {
        "type": "function",
        "signature": "function invalidateUnorderedNonces(uint256 wordPos, uint256 mask)",
        "selector": "0x3ff9dcb1"
    },
    "0xcc53287f": {
        "type": "function",
        "signature": "function lockdown(tuple(address token, address spender)[] approvals)",
        "selector": "0xcc53287f"
    },
    "0x4fe02b44": {
        "type": "function",
        "signature": "function nonceBitmap(address, uint256) view returns (uint256)",
        "selector": "0x4fe02b44"
    },
    "0x2a2d80d1": {
        "type": "function",
        "signature": "function permit(address owner, tuple(tuple(address token, uint160 amount, uint48 expiration, uint48 nonce)[] details, address spender, uint256 sigDeadline) permitBatch, bytes signature)",
        "selector": "0x2a2d80d1"
    },
    "0x2b67b570": {
        "type": "function",
        "signature": "function permit(address owner, tuple(tuple(address token, uint160 amount, uint48 expiration, uint48 nonce) details, address spender, uint256 sigDeadline) permitSingle, bytes signature)",
        "selector": "0x2b67b570"
    },
    "0x30f28b7a": {
        "type": "function",
        "signature": "function permitTransferFrom(tuple(tuple(address token, uint256 amount) permitted, uint256 nonce, uint256 deadline) permit, tuple(address to, uint256 requestedAmount) transferDetails, address owner, bytes signature)",
        "selector": "0x30f28b7a"
    },
    "0xedd9444b": {
        "type": "function",
        "signature": "function permitTransferFrom(tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) permit, tuple(address to, uint256 requestedAmount)[] transferDetails, address owner, bytes signature)",
        "selector": "0xedd9444b"
    },
    "0x137c29fe": {
        "type": "function",
        "signature": "function permitWitnessTransferFrom(tuple(tuple(address token, uint256 amount) permitted, uint256 nonce, uint256 deadline) permit, tuple(address to, uint256 requestedAmount) transferDetails, address owner, bytes32 witness, string witnessTypeString, bytes signature)",
        "selector": "0x137c29fe"
    },
    "0xfe8ec1a7": {
        "type": "function",
        "signature": "function permitWitnessTransferFrom(tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) permit, tuple(address to, uint256 requestedAmount)[] transferDetails, address owner, bytes32 witness, string witnessTypeString, bytes signature)",
        "selector": "0xfe8ec1a7"
    },
    "0x0d58b1db": {
        "type": "function",
        "signature": "function transferFrom(tuple(address from, address to, uint160 amount, address token)[] transferDetails)",
        "selector": "0x0d58b1db"
    },
    "0x36c78516": {
        "type": "function",
        "signature": "function transferFrom(address from, address to, uint160 amount, address token)",
        "selector": "0x36c78516"
    },
    "0x3659cfe6": {
        "type": "function",
        "signature": "function upgradeTo(address newImplementation)",
        "selector": "0x3659cfe6"
    },
    "0x4f1ef286": {
        "type": "function",
        "signature": "function upgradeToAndCall(address newImplementation, bytes data) payable",
        "selector": "0x4f1ef286"
    },
    "0x5c60da1b": {
        "type": "function",
        "signature": "function implementation() view returns (address)",
        "selector": "0x5c60da1b"
    },
    "0x8f283970": {
        "type": "function",
        "signature": "function changeAdmin(address newAdmin)",
        "selector": "0x8f283970"
    },
    "0xf851a440": {
        "type": "function",
        "signature": "function admin() view returns (address)",
        "selector": "0xf851a440"
    },
    "0x66d38203": {
        "type": "function",
        "signature": "function setup(address token_addr)",
        "selector": "0x66d38203"
    },
    "0x422f1043": {
        "type": "function",
        "signature": "function addLiquidity(uint256 min_liquidity, uint256 max_tokens, uint256 deadline) payable returns (uint256 out)",
        "selector": "0x422f1043"
    },
    "0xf88bf15a": {
        "type": "function",
        "signature": "function removeLiquidity(uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline) returns (uint256 out, uint256 out)",
        "selector": "0xf88bf15a"
    },
    "0x89402a72": {
        "type": "function",
        "signature": "function __default__() payable",
        "selector": "0x89402a72"
    },
    "0xf39b5b9b": {
        "type": "function",
        "signature": "function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline) payable returns (uint256 out)",
        "selector": "0xf39b5b9b"
    },
    "0xad65d76d": {
        "type": "function",
        "signature": "function ethToTokenTransferInput(uint256 min_tokens, uint256 deadline, address recipient) payable returns (uint256 out)",
        "selector": "0xad65d76d"
    },
    "0x6b1d4db7": {
        "type": "function",
        "signature": "function ethToTokenSwapOutput(uint256 tokens_bought, uint256 deadline) payable returns (uint256 out)",
        "selector": "0x6b1d4db7"
    },
    "0x0b573638": {
        "type": "function",
        "signature": "function ethToTokenTransferOutput(uint256 tokens_bought, uint256 deadline, address recipient) payable returns (uint256 out)",
        "selector": "0x0b573638"
    },
    "0x95e3c50b": {
        "type": "function",
        "signature": "function tokenToEthSwapInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline) returns (uint256 out)",
        "selector": "0x95e3c50b"
    },
    "0x7237e031": {
        "type": "function",
        "signature": "function tokenToEthTransferInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline, address recipient) returns (uint256 out)",
        "selector": "0x7237e031"
    },
    "0x013efd8b": {
        "type": "function",
        "signature": "function tokenToEthSwapOutput(uint256 eth_bought, uint256 max_tokens, uint256 deadline) returns (uint256 out)",
        "selector": "0x013efd8b"
    },
    "0xd4e4841d": {
        "type": "function",
        "signature": "function tokenToEthTransferOutput(uint256 eth_bought, uint256 max_tokens, uint256 deadline, address recipient) returns (uint256 out)",
        "selector": "0xd4e4841d"
    },
    "0xddf7e1a7": {
        "type": "function",
        "signature": "function tokenToTokenSwapInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address token_addr) returns (uint256 out)",
        "selector": "0xddf7e1a7"
    },
    "0xf552d91b": {
        "type": "function",
        "signature": "function tokenToTokenTransferInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address recipient, address token_addr) returns (uint256 out)",
        "selector": "0xf552d91b"
    },
    "0xb040d545": {
        "type": "function",
        "signature": "function tokenToTokenSwapOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address token_addr) returns (uint256 out)",
        "selector": "0xb040d545"
    },
    "0xf3c0efe9": {
        "type": "function",
        "signature": "function tokenToTokenTransferOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address recipient, address token_addr) returns (uint256 out)",
        "selector": "0xf3c0efe9"
    },
    "0xb1cb43bf": {
        "type": "function",
        "signature": "function tokenToExchangeSwapInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address exchange_addr) returns (uint256 out)",
        "selector": "0xb1cb43bf"
    },
    "0xec384a3e": {
        "type": "function",
        "signature": "function tokenToExchangeTransferInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address recipient, address exchange_addr) returns (uint256 out)",
        "selector": "0xec384a3e"
    },
    "0xea650c7d": {
        "type": "function",
        "signature": "function tokenToExchangeSwapOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address exchange_addr) returns (uint256 out)",
        "selector": "0xea650c7d"
    },
    "0x981a1327": {
        "type": "function",
        "signature": "function tokenToExchangeTransferOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address recipient, address exchange_addr) returns (uint256 out)",
        "selector": "0x981a1327"
    },
    "0xcd7724c3": {
        "type": "function",
        "signature": "function getEthToTokenInputPrice(uint256 eth_sold) view returns (uint256 out)",
        "selector": "0xcd7724c3"
    },
    "0x59e94862": {
        "type": "function",
        "signature": "function getEthToTokenOutputPrice(uint256 tokens_bought) view returns (uint256 out)",
        "selector": "0x59e94862"
    },
    "0x95b68fe7": {
        "type": "function",
        "signature": "function getTokenToEthInputPrice(uint256 tokens_sold) view returns (uint256 out)",
        "selector": "0x95b68fe7"
    },
    "0x2640f62c": {
        "type": "function",
        "signature": "function getTokenToEthOutputPrice(uint256 eth_bought) view returns (uint256 out)",
        "selector": "0x2640f62c"
    },
    "0x9d76ea58": {
        "type": "function",
        "signature": "function tokenAddress() view returns (address out)",
        "selector": "0x9d76ea58"
    },
    "0x966dae0e": {
        "type": "function",
        "signature": "function factoryAddress() view returns (address out)",
        "selector": "0x966dae0e"
    },
    "0xa24a13a6": {
        "type": "error",
        "signature": "error ArrayLengthMismatch()",
        "selector": "0xa24a13a6"
    },
    "0xb29526b9": {
        "type": "error",
        "signature": "error BearAlreadyClaimedReward()",
        "selector": "0xb29526b9"
    },
    "0x3c16d2dc": {
        "type": "error",
        "signature": "error BitAlreadyClaimedReward()",
        "selector": "0x3c16d2dc"
    },
    "0x49e27cff": {
        "type": "error",
        "signature": "error InvalidOwner()",
        "selector": "0x49e27cff"
    },
    "0x9430a17e": {
        "type": "error",
        "signature": "error NonExistentToken()",
        "selector": "0x9430a17e"
    },
    "0x5fd76e04": {
        "type": "error",
        "signature": "error NotCompleted()",
        "selector": "0x5fd76e04"
    },
    "0x091fe61c": {
        "type": "error",
        "signature": "error NotYourToken()",
        "selector": "0x091fe61c"
    },
    "0xa3df9bcf": {
        "type": "error",
        "signature": "error StakingNotEnabled()",
        "selector": "0xa3df9bcf"
    },
    "0x8cd22d19": {
        "type": "error",
        "signature": "error TransferNotAllowed()",
        "selector": "0x8cd22d19"
    },
    "0x27e235e3": {
        "type": "function",
        "signature": "function balances(address) view returns (uint256)",
        "selector": "0x27e235e3"
    },
    "0x6c0360eb": {
        "type": "function",
        "signature": "function baseURI() pure returns (string)",
        "selector": "0x6c0360eb"
    },
    "0xdc39f583": {
        "type": "function",
        "signature": "function bearsClaimed(uint256) view returns (bool)",
        "selector": "0xdc39f583"
    },
    "0x4c7cecdd": {
        "type": "function",
        "signature": "function bitsClaimed(uint256) view returns (bool)",
        "selector": "0x4c7cecdd"
    },
    "0xb1a8adfd": {
        "type": "function",
        "signature": "function enter(uint256[] bears, uint256[] bits)",
        "selector": "0xb1a8adfd"
    },
    "0x9c87e0a8": {
        "type": "function",
        "signature": "function escape(uint256[] bears)",
        "selector": "0x9c87e0a8"
    },
    "0xb0297e68": {
        "type": "function",
        "signature": "function exit(uint256[] bears, uint256[] rewards, bytes signature)",
        "selector": "0xb0297e68"
    },
    "0x081812fc": {
        "type": "function",
        "signature": "function getApproved(uint256 tokenId) view returns (address)",
        "selector": "0x081812fc"
    },
    "0xe985e9c5": {
        "type": "function",
        "signature": "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "selector": "0xe985e9c5"
    },
    "0xf9374284": {
        "type": "function",
        "signature": "function killaBearsContract() view returns (address)",
        "selector": "0xf9374284"
    },
    "0x7670f7dd": {
        "type": "function",
        "signature": "function killaBitsContract() view returns (address)",
        "selector": "0x7670f7dd"
    },
    "0x150b7a02": {
        "type": "function",
        "signature": "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
        "selector": "0x150b7a02"
    },
    "0x6352211e": {
        "type": "function",
        "signature": "function ownerOf(uint256 tokenId) view returns (address)",
        "selector": "0x6352211e"
    },
    "0x220cce97": {
        "type": "function",
        "signature": "function rewardsContract() view returns (address)",
        "selector": "0x220cce97"
    },
    "0x42842e0e": {
        "type": "function",
        "signature": "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "selector": "0x42842e0e"
    },
    "0xb88d4fde": {
        "type": "function",
        "signature": "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
        "selector": "0xb88d4fde"
    },
    "0xa22cb465": {
        "type": "function",
        "signature": "function setApprovalForAll(address operator, bool approved)",
        "selector": "0xa22cb465"
    },
    "0x55f804b3": {
        "type": "function",
        "signature": "function setBaseURI(string baseURI_)",
        "selector": "0x55f804b3"
    },
    "0x3a6462e4": {
        "type": "function",
        "signature": "function setRewarder(address addr)",
        "selector": "0x3a6462e4"
    },
    "0xb77a2c1c": {
        "type": "function",
        "signature": "function stakeTime() view returns (uint256)",
        "selector": "0xb77a2c1c"
    },
    "0xd5a44f86": {
        "type": "function",
        "signature": "function stakes(uint256) view returns (uint32 ts, address owner, uint16 bit)",
        "selector": "0xd5a44f86"
    },
    "0x1cfff51b": {
        "type": "function",
        "signature": "function stakingEnabled() view returns (bool)",
        "selector": "0x1cfff51b"
    },
    "0x233a095d": {
        "type": "function",
        "signature": "function stakingEnabledFor(address) view returns (bool)",
        "selector": "0x233a095d"
    },
    "0x01ffc9a7": {
        "type": "function",
        "signature": "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "selector": "0x01ffc9a7"
    },
    "0x69805981": {
        "type": "function",
        "signature": "function toggleStaking(bool enabled)",
        "selector": "0x69805981"
    },
    "0x1a91ca5f": {
        "type": "function",
        "signature": "function toggleStakingFor(address who, bool enabled)",
        "selector": "0x1a91ca5f"
    },
    "0xc87b56dd": {
        "type": "function",
        "signature": "function tokenURI(uint256 tokenId) view returns (string)",
        "selector": "0xc87b56dd"
    },
    "0x6b2ace87": {
        "type": "function",
        "signature": "function bentoBox() view returns (address)",
        "selector": "0x6b2ace87"
    },
    "0x2646478b": {
        "type": "function",
        "signature": "function processRoute(address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOutMin, address to, bytes route) payable returns (uint256 amountOut)",
        "selector": "0x2646478b"
    },
    "0x93b3774c": {
        "type": "function",
        "signature": "function transferValueAndprocessRoute(address transferValueTo, uint256 amountValueTransfer, address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOutMin, address to, bytes route) payable returns (uint256 amountOut)",
        "selector": "0x93b3774c"
    },
    "0xe2a7b501": {
        "type": "function",
        "signature": "function tridentCLSwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)",
        "selector": "0xe2a7b501"
    },
    "0xfa461e33": {
        "type": "function",
        "signature": "function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)",
        "selector": "0xfa461e33"
    },
    "0x819faf7b": {
        "type": "function",
        "signature": "function aave() view returns (address)",
        "selector": "0x819faf7b"
    },
    "0x06a3fe59": {
        "type": "function",
        "signature": "function aaveToken() view returns (address)",
        "selector": "0x06a3fe59"
    },
    "0x99b71d5c": {
        "type": "function",
        "signature": "function approveToken()",
        "selector": "0x99b71d5c"
    },
    "0x57ded9c9": {
        "type": "function",
        "signature": "function apr() view returns (address)",
        "selector": "0x57ded9c9"
    },
    "0xb69ef8a8": {
        "type": "function",
        "signature": "function balance() view returns (uint256)",
        "selector": "0xb69ef8a8"
    },
    "0xcf8ca426": {
        "type": "function",
        "signature": "function balanceAave() view returns (uint256)",
        "selector": "0xcf8ca426"
    },
    "0x61c1ec55": {
        "type": "function",
        "signature": "function balanceCompound() view returns (uint256)",
        "selector": "0x61c1ec55"
    },
    "0xa7287971": {
        "type": "function",
        "signature": "function balanceCompoundInToken() view returns (uint256)",
        "selector": "0xa7287971"
    },
    "0x39c0a7e1": {
        "type": "function",
        "signature": "function balanceDydx() view returns (uint256)",
        "selector": "0x39c0a7e1"
    },
    "0x0eb2a267": {
        "type": "function",
        "signature": "function balanceFulcrum() view returns (uint256)",
        "selector": "0x0eb2a267"
    },
    "0xf5a41dea": {
        "type": "function",
        "signature": "function balanceFulcrumInToken() view returns (uint256)",
        "selector": "0xf5a41dea"
    },
    "0x7137ef99": {
        "type": "function",
        "signature": "function calcPoolValueInToken() view returns (uint256)",
        "selector": "0x7137ef99"
    },
    "0xf69e2046": {
        "type": "function",
        "signature": "function compound() view returns (address)",
        "selector": "0xf69e2046"
    },
    "0xd9d7858a": {
        "type": "function",
        "signature": "function dToken() view returns (uint256)",
        "selector": "0xd9d7858a"
    },
    "0xa457c2d7": {
        "type": "function",
        "signature": "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
        "selector": "0xa457c2d7"
    },
    "0xb6b55f25": {
        "type": "function",
        "signature": "function deposit(uint256 _amount)",
        "selector": "0xb6b55f25"
    },
    "0x8e4ec6ef": {
        "type": "function",
        "signature": "function dydx() view returns (address)",
        "selector": "0x8e4ec6ef"
    },
    "0x58782c21": {
        "type": "function",
        "signature": "function fulcrum() view returns (address)",
        "selector": "0x58782c21"
    },
    "0xf7c1ec77": {
        "type": "function",
        "signature": "function getAave() view returns (address)",
        "selector": "0xf7c1ec77"
    },
    "0xf82ce27d": {
        "type": "function",
        "signature": "function getAaveCore() view returns (address)",
        "selector": "0xf82ce27d"
    },
    "0x77c7b8fc": {
        "type": "function",
        "signature": "function getPricePerFullShare() view returns (uint256)",
        "selector": "0x77c7b8fc"
    },
    "0x39509351": {
        "type": "function",
        "signature": "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
        "selector": "0x39509351"
    },
    "0x8f32d59b": {
        "type": "function",
        "signature": "function isOwner() view returns (bool)",
        "selector": "0x8f32d59b"
    },
    "0x16f0115b": {
        "type": "function",
        "signature": "function pool() view returns (uint256)",
        "selector": "0x16f0115b"
    },
    "0x085d4883": {
        "type": "function",
        "signature": "function provider() view returns (uint8)",
        "selector": "0x085d4883"
    },
    "0x7d7c2a1c": {
        "type": "function",
        "signature": "function rebalance()",
        "selector": "0x7d7c2a1c"
    },
    "0xa160176d": {
        "type": "function",
        "signature": "function recommend() view returns (uint8)",
        "selector": "0xa160176d"
    },
    "0x46357473": {
        "type": "function",
        "signature": "function set_new_APR(address _new_APR)",
        "selector": "0x46357473"
    },
    "0xf5ff1916": {
        "type": "function",
        "signature": "function set_new_COMPOUND(address _new_COMPOUND)",
        "selector": "0xf5ff1916"
    },
    "0x9ff011b9": {
        "type": "function",
        "signature": "function set_new_DTOKEN(uint256 _new_DTOKEN)",
        "selector": "0x9ff011b9"
    },
    "0x65aab749": {
        "type": "function",
        "signature": "function supplyAave(uint256 amount)",
        "selector": "0x65aab749"
    },
    "0xe849d659": {
        "type": "function",
        "signature": "function supplyCompound(uint256 amount)",
        "selector": "0xe849d659"
    },
    "0x06636c1c": {
        "type": "function",
        "signature": "function supplyDydx(uint256 amount) returns (uint256)",
        "selector": "0x06636c1c"
    },
    "0x8124955c": {
        "type": "function",
        "signature": "function supplyFulcrum(uint256 amount)",
        "selector": "0x8124955c"
    },
    "0xfc0c546a": {
        "type": "function",
        "signature": "function token() view returns (address)",
        "selector": "0xfc0c546a"
    },
    "0x2e1a7d4d": {
        "type": "function",
        "signature": "function withdraw(uint256 _shares)",
        "selector": "0x2e1a7d4d"
    },
    "0xf60a15ed": {
        "type": "function",
        "signature": "function inCaseETHGetsStuck()",
        "selector": "0xf60a15ed"
    },
    "0x2e8d6e18": {
        "type": "function",
        "signature": "function inCaseTokenGetsStuck(address _TokenAddress)",
        "selector": "0x2e8d6e18"
    },
    "0x2afcf480": {
        "type": "function",
        "signature": "function invest(uint256 _amount)",
        "selector": "0x2afcf480"
    },
    "0x3990ab4f": {
        "type": "function",
        "signature": "function investSelf()",
        "selector": "0x3990ab4f"
    },
    "0xdb006a75": {
        "type": "function",
        "signature": "function redeem(uint256 redeemTokens) returns (uint256)",
        "selector": "0xdb006a75"
    },
    "0x812adb06": {
        "type": "function",
        "signature": "function set_new_AAVE(address _new_AAVE)",
        "selector": "0x812adb06"
    },
    "0xa9de245b": {
        "type": "function",
        "signature": "function set_new_ATOKEN(address _new_ATOKEN)",
        "selector": "0xa9de245b"
    },
    "0x2c7a5ae4": {
        "type": "function",
        "signature": "function set_new_DYDX(address _new_DYDX)",
        "selector": "0x2c7a5ae4"
    },
    "0xbbf31644": {
        "type": "function",
        "signature": "function set_new_FULCRUM(address _new_FULCRUM)",
        "selector": "0xbbf31644"
    },
    "0x30adf81f": {
        "type": "function",
        "signature": "function PERMIT_TYPEHASH() view returns (bytes32)",
        "selector": "0x30adf81f"
    },
    "0x6c25b346": {
        "type": "function",
        "signature": "function dai(address _account) view returns (uint256)",
        "selector": "0x6c25b346"
    },
    "0xc11645bc": {
        "type": "function",
        "signature": "function daiJoin() view returns (address)",
        "selector": "0xc11645bc"
    },
    "0xbe22f546": {
        "type": "function",
        "signature": "function daiToken() view returns (address)",
        "selector": "0xbe22f546"
    },
    "0x4a03707c": {
        "type": "function",
        "signature": "function draw(address src, uint256 wad)",
        "selector": "0x4a03707c"
    },
    "0xef693bed": {
        "type": "function",
        "signature": "function exit(address src, uint256 wad)",
        "selector": "0xef693bed"
    },
    "0x3b4da69f": {
        "type": "function",
        "signature": "function join(address dst, uint256 wad)",
        "selector": "0x3b4da69f"
    },
    "0xbb35783b": {
        "type": "function",
        "signature": "function move(address src, address dst, uint256 wad) returns (bool)",
        "selector": "0xbb35783b"
    },
    "0x7ecebe00": {
        "type": "function",
        "signature": "function nonces(address) view returns (uint256)",
        "selector": "0x7ecebe00"
    },
    "0x8fcbaf0c": {
        "type": "function",
        "signature": "function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)",
        "selector": "0x8fcbaf0c"
    },
    "0x4ba2363a": {
        "type": "function",
        "signature": "function pot() view returns (address)",
        "selector": "0x4ba2363a"
    },
    "0x36569e77": {
        "type": "function",
        "signature": "function vat() view returns (address)",
        "selector": "0x36569e77"
    },
    "0x54fd4d50": {
        "type": "function",
        "signature": "function version() view returns (uint256)",
        "selector": "0x54fd4d50"
    },
    "0x06394c9b": {
        "type": "function",
        "signature": "function changeOperator(address _newOperator)",
        "selector": "0x06394c9b"
    },
    "0x17cc915c": {
        "type": "function",
        "signature": "function nullifierHashes(bytes32) view returns (bool)",
        "selector": "0x17cc915c"
    },
    "0x21a0adb6": {
        "type": "function",
        "signature": "function withdraw(bytes _proof, bytes32 _root, bytes32 _nullifierHash, address _recipient, address _relayer, uint256 _fee, uint256 _refund) payable",
        "selector": "0x21a0adb6"
    },
    "0x2b7ac3f3": {
        "type": "function",
        "signature": "function verifier() view returns (address)",
        "selector": "0x2b7ac3f3"
    },
    "0x38bf282e": {
        "type": "function",
        "signature": "function hashLeftRight(bytes32 _left, bytes32 _right) pure returns (bytes32)",
        "selector": "0x38bf282e"
    },
    "0x414a37ba": {
        "type": "function",
        "signature": "function FIELD_SIZE() view returns (uint256)",
        "selector": "0x414a37ba"
    },
    "0x4ecf518b": {
        "type": "function",
        "signature": "function levels() view returns (uint32)",
        "selector": "0x4ecf518b"
    },
    "0x570ca735": {
        "type": "function",
        "signature": "function operator() view returns (address)",
        "selector": "0x570ca735"
    },
    "0x6d9833e3": {
        "type": "function",
        "signature": "function isKnownRoot(bytes32 _root) view returns (bool)",
        "selector": "0x6d9833e3"
    },
    "0x839df945": {
        "type": "function",
        "signature": "function commitments(bytes32) view returns (bool)",
        "selector": "0x839df945"
    },
    "0x8bca6d16": {
        "type": "function",
        "signature": "function denomination() view returns (uint256)",
        "selector": "0x8bca6d16"
    },
    "0x90eeb02b": {
        "type": "function",
        "signature": "function currentRootIndex() view returns (uint32)",
        "selector": "0x90eeb02b"
    },
    "0x97fc007c": {
        "type": "function",
        "signature": "function updateVerifier(address _newVerifier)",
        "selector": "0x97fc007c"
    },
    "0x9fa12d0b": {
        "type": "function",
        "signature": "function isSpentArray(bytes32[] _nullifierHashes) view returns (bool[] spent)",
        "selector": "0x9fa12d0b"
    },
    "0xb214faa5": {
        "type": "function",
        "signature": "function deposit(bytes32 _commitment) payable",
        "selector": "0xb214faa5"
    },
    "0xba70f757": {
        "type": "function",
        "signature": "function getLastRoot() view returns (bytes32)",
        "selector": "0xba70f757"
    },
    "0xc2b40ae4": {
        "type": "function",
        "signature": "function roots(uint256) view returns (bytes32)",
        "selector": "0xc2b40ae4"
    },
    "0xcd87a3b4": {
        "type": "function",
        "signature": "function ROOT_HISTORY_SIZE() view returns (uint32)",
        "selector": "0xcd87a3b4"
    },
    "0xe5285dcc": {
        "type": "function",
        "signature": "function isSpent(bytes32 _nullifierHash) view returns (bool)",
        "selector": "0xe5285dcc"
    },
    "0xe8295588": {
        "type": "function",
        "signature": "function zeros(uint256) view returns (bytes32)",
        "selector": "0xe8295588"
    },
    "0xec732959": {
        "type": "function",
        "signature": "function ZERO_VALUE() view returns (uint256)",
        "selector": "0xec732959"
    },
    "0xf178e47c": {
        "type": "function",
        "signature": "function filledSubtrees(uint256) view returns (bytes32)",
        "selector": "0xf178e47c"
    },
    "0xfc7e9c6f": {
        "type": "function",
        "signature": "function nextIndex() view returns (uint32)",
        "selector": "0xfc7e9c6f"
    },
    "0x0b82d33d": {
        "type": "function",
        "signature": "function withdrawBalanceDifference() returns (bool success)",
        "selector": "0x0b82d33d"
    },
    "0x0e7c1cb5": {
        "type": "function",
        "signature": "function originalToken() view returns (address)",
        "selector": "0x0e7c1cb5"
    },
    "0x1d6f757d": {
        "type": "function",
        "signature": "function withdraw(uint256 _value, uint8 v, bytes32 r, bytes32 s, uint256 signatureValidUntilBlock) returns (bool success)",
        "selector": "0x1d6f757d"
    },
    "0x45164b3e": {
        "type": "function",
        "signature": "function TRANSFER_PROXY_VEFX() view returns (address)",
        "selector": "0x45164b3e"
    },
    "0x74f1d6ce": {
        "type": "function",
        "signature": "function keccak(address _sender, address _wrapper, uint256 _validTill) view returns (bytes32)",
        "selector": "0x74f1d6ce"
    },
    "0x7df73e27": {
        "type": "function",
        "signature": "function isSigner(address) view returns (bool)",
        "selector": "0x7df73e27"
    },
    "0x8b257d3d": {
        "type": "function",
        "signature": "function isValidSignature(bytes32 hash, uint8 v, bytes32 r, bytes32 s) view returns (bool)",
        "selector": "0x8b257d3d"
    },
    "0xad93640f": {
        "type": "function",
        "signature": "function TRANSFER_PROXY_V2() view returns (address)",
        "selector": "0xad93640f"
    },
    "0xcc891023": {
        "type": "function",
        "signature": "function depositLock(address) view returns (uint256)",
        "selector": "0xcc891023"
    },
    "0xdc42f2ed": {
        "type": "function",
        "signature": "function withdrawDifferentToken(address _differentToken) returns (bool)",
        "selector": "0xdc42f2ed"
    },
    "0xe2bbb158": {
        "type": "function",
        "signature": "function deposit(uint256 _value, uint256 _forTime) returns (bool success)",
        "selector": "0xe2bbb158"
    },
    "0xeb12d61e": {
        "type": "function",
        "signature": "function addSigner(address _newSigner)",
        "selector": "0xeb12d61e"
    },
    "0x0bdbb71b": {
        "type": "error",
        "signature": "error CanNoLongerEscape()",
        "selector": "0x0bdbb71b"
    },
    "0x64da4178": {
        "type": "function",
        "signature": "function adminEscape(uint256[] bears)",
        "selector": "0x64da4178"
    },
    "0xb76aa710": {
        "type": "function",
        "signature": "function adminExit(address holder, uint256[] bears, uint256[] rewards)",
        "selector": "0xb76aa710"
    },
    "0xc7e3677b": {
        "type": "function",
        "signature": "function escapeAndMarkAsClaimed(uint256[] bears)",
        "selector": "0xc7e3677b"
    },
    "0xd2f7265a": {
        "type": "function",
        "signature": "function exchange() view returns (address)",
        "selector": "0xd2f7265a"
    },
    "0x99f0d6c5": {
        "type": "function",
        "signature": "function transferNFT(address collection, uint256 tokenId, uint256, address from, address to)",
        "selector": "0x99f0d6c5"
    },
    "0x118e31b7": {
        "type": "function",
        "signature": "function getBorrowBalance(address account, address asset) view returns (uint256)",
        "selector": "0x118e31b7"
    },
    "0x24021127": {
        "type": "function",
        "signature": "function _setOriginationFee(uint256 originationFeeMantissa) returns (uint256)",
        "selector": "0x24021127"
    },
    "0x26617c28": {
        "type": "function",
        "signature": "function _setPaused(bool requestedState) returns (uint256)",
        "selector": "0x26617c28"
    },
    "0x26782247": {
        "type": "function",
        "signature": "function pendingAdmin() view returns (address)",
        "selector": "0x26782247"
    },
    "0x3be59443": {
        "type": "function",
        "signature": "function _setOracle(address newOracle) returns (uint256)",
        "selector": "0x3be59443"
    },
    "0x4706c375": {
        "type": "function",
        "signature": "function _withdrawEquity(address asset, uint256 amount) returns (uint256)",
        "selector": "0x4706c375"
    },
    "0x4b8a3529": {
        "type": "function",
        "signature": "function borrow(address asset, uint256 amount) returns (uint256)",
        "selector": "0x4b8a3529"
    },
    "0x5c975abb": {
        "type": "function",
        "signature": "function paused() view returns (bool)",
        "selector": "0x5c975abb"
    },
    "0x5cf756d2": {
        "type": "function",
        "signature": "function _setMarketInterestRateModel(address asset, address interestRateModel) returns (uint256)",
        "selector": "0x5cf756d2"
    },
    "0x5e9a523c": {
        "type": "function",
        "signature": "function assetPrices(address asset) view returns (uint256)",
        "selector": "0x5e9a523c"
    },
    "0x5ec88c79": {
        "type": "function",
        "signature": "function getAccountLiquidity(address account) view returns (int256)",
        "selector": "0x5ec88c79"
    },
    "0x6e2ede03": {
        "type": "function",
        "signature": "function getCollateralMarketsLength() view returns (uint256)",
        "selector": "0x6e2ede03"
    },
    "0x7dc0d1d0": {
        "type": "function",
        "signature": "function oracle() view returns (address)",
        "selector": "0x7dc0d1d0"
    },
    "0x8053fcbe": {
        "type": "function",
        "signature": "function liquidationDiscount() view returns (uint256 mantissa)",
        "selector": "0x8053fcbe"
    },
    "0x8e8f294b": {
        "type": "function",
        "signature": "function markets(address) view returns (bool isSupported, uint256 blockNumber, address interestRateModel, uint256 totalSupply, uint256 supplyRateMantissa, uint256 supplyIndex, uint256 totalBorrows, uint256 borrowRateMantissa, uint256 borrowIndex)",
        "selector": "0x8e8f294b"
    },
    "0x9f180cf1": {
        "type": "function",
        "signature": "function calculateAccountValues(address userAddress) view returns (uint256, uint256, uint256)",
        "selector": "0x9f180cf1"
    },
    "0xabdb5ea8": {
        "type": "function",
        "signature": "function repayBorrow(address asset, uint256 amount) returns (uint256)",
        "selector": "0xabdb5ea8"
    },
    "0xb4eae1cb": {
        "type": "function",
        "signature": "function collateralRatio() view returns (uint256 mantissa)",
        "selector": "0xb4eae1cb"
    },
    "0xb71d1a0c": {
        "type": "function",
        "signature": "function _setPendingAdmin(address newPendingAdmin) returns (uint256)",
        "selector": "0xb71d1a0c"
    },
    "0xb7adddac": {
        "type": "function",
        "signature": "function supplyBalances(address, address) view returns (uint256 principal, uint256 interestIndex)",
        "selector": "0xb7adddac"
    },
    "0xb8bb5c42": {
        "type": "function",
        "signature": "function originationFee() view returns (uint256 mantissa)",
        "selector": "0xb8bb5c42"
    },
    "0xba377731": {
        "type": "function",
        "signature": "function getSupplyBalance(address account, address asset) view returns (uint256)",
        "selector": "0xba377731"
    },
    "0xbeb54615": {
        "type": "function",
        "signature": "function collateralMarkets(uint256) view returns (address)",
        "selector": "0xbeb54615"
    },
    "0xc1abfaa3": {
        "type": "function",
        "signature": "function _supportMarket(address asset, address interestRateModel) returns (uint256)",
        "selector": "0xc1abfaa3"
    },
    "0xc365a646": {
        "type": "function",
        "signature": "function _setRiskParameters(uint256 collateralRatioMantissa, uint256 liquidationDiscountMantissa) returns (uint256)",
        "selector": "0xc365a646"
    },
    "0xdbe2bc84": {
        "type": "function",
        "signature": "function _suspendMarket(address asset) returns (uint256)",
        "selector": "0xdbe2bc84"
    },
    "0xe61604cf": {
        "type": "function",
        "signature": "function liquidateBorrow(address targetAccount, address assetBorrow, address assetCollateral, uint256 requestedAmountClose) returns (uint256)",
        "selector": "0xe61604cf"
    },
    "0xe9c714f2": {
        "type": "function",
        "signature": "function _acceptAdmin() returns (uint256)",
        "selector": "0xe9c714f2"
    },
    "0xf2b9fdb8": {
        "type": "function",
        "signature": "function supply(address asset, uint256 amount) returns (uint256)",
        "selector": "0xf2b9fdb8"
    },
    "0xf3fef3a3": {
        "type": "function",
        "signature": "function withdraw(address token, uint256 amount) returns (bool success)",
        "selector": "0xf3fef3a3"
    },
    "0xfc7d42d7": {
        "type": "function",
        "signature": "function borrowBalances(address, address) view returns (uint256 principal, uint256 interestIndex)",
        "selector": "0xfc7d42d7"
    },
    "0xd6d75f51": {
        "type": "function",
        "signature": "function moneyMarket() view returns (address)",
        "selector": "0xd6d75f51"
    },
    "0x01d22ccd": {
        "type": "function",
        "signature": "function rebalancer() view returns (address)",
        "selector": "0x01d22ccd"
    },
    "0x194a62a8": {
        "type": "function",
        "signature": "function redeemInterestBearingTokens(uint256 _amount)",
        "selector": "0x194a62a8"
    },
    "0x1a5d6705": {
        "type": "function",
        "signature": "function getParamsForRedeemIdleToken(uint256 _amount, bool _skipRebalance) returns (address[], uint256[])",
        "selector": "0x1a5d6705"
    },
    "0x1aaa4a18": {
        "type": "function",
        "signature": "function setMinRateDifference(uint256 _rate)",
        "selector": "0x1aaa4a18"
    },
    "0x22c9f971": {
        "type": "function",
        "signature": "function minRateDifference() view returns (uint256)",
        "selector": "0x22c9f971"
    },
    "0x36a00082": {
        "type": "function",
        "signature": "function allAvailableTokens(uint256) view returns (address)",
        "selector": "0x36a00082"
    },
    "0x3b97e856": {
        "type": "function",
        "signature": "function tokenDecimals() view returns (uint256)",
        "selector": "0x3b97e856"
    },
    "0x3cfcef64": {
        "type": "function",
        "signature": "function mintIdleToken(uint256 _amount, uint256[] _clientProtocolAmounts) returns (uint256 mintedTokens)",
        "selector": "0x3cfcef64"
    },
    "0x3f4ba83a": {
        "type": "function",
        "signature": "function unpause()",
        "selector": "0x3f4ba83a"
    },
    "0x408cfe24": {
        "type": "function",
        "signature": "function iToken() view returns (address)",
        "selector": "0x408cfe24"
    },
    "0x45c8026c": {
        "type": "function",
        "signature": "function protocolWrappers(address) view returns (address)",
        "selector": "0x45c8026c"
    },
    "0x46fbf68e": {
        "type": "function",
        "signature": "function isPauser(address account) view returns (bool)",
        "selector": "0x46fbf68e"
    },
    "0x47ce6522": {
        "type": "function",
        "signature": "function getParamsForMintIdleToken(uint256 _amount) returns (address[], uint256[])",
        "selector": "0x47ce6522"
    },
    "0x56a5178b": {
        "type": "function",
        "signature": "function claimITokens(uint256[] _clientProtocolAmounts) returns (uint256 claimedTokens)",
        "selector": "0x56a5178b"
    },
    "0x6922d7b6": {
        "type": "function",
        "signature": "function setPriceCalculator(address _priceCalculator)",
        "selector": "0x6922d7b6"
    },
    "0x69ad6af2": {
        "type": "function",
        "signature": "function rebalance(uint256 _newAmount, uint256[] _clientProtocolAmounts) returns (bool)",
        "selector": "0x69ad6af2"
    },
    "0x6cfd1553": {
        "type": "function",
        "signature": "function setRebalancer(address _rebalancer)",
        "selector": "0x6cfd1553"
    },
    "0x6ef8d66d": {
        "type": "function",
        "signature": "function renouncePauser()",
        "selector": "0x6ef8d66d"
    },
    "0x7e2a53af": {
        "type": "function",
        "signature": "function setIToken(address _iToken)",
        "selector": "0x7e2a53af"
    },
    "0x7ff9b596": {
        "type": "function",
        "signature": "function tokenPrice() view returns (uint256 price)",
        "selector": "0x7ff9b596"
    },
    "0x82ba653d": {
        "type": "function",
        "signature": "function setManualPlay(bool _manualPlay)",
        "selector": "0x82ba653d"
    },
    "0x82dc1ec4": {
        "type": "function",
        "signature": "function addPauser(address account)",
        "selector": "0x82dc1ec4"
    },
    "0x8456cb59": {
        "type": "function",
        "signature": "function pause()",
        "selector": "0x8456cb59"
    },
    "0x8b95e335": {
        "type": "function",
        "signature": "function priceCalculator() view returns (address)",
        "selector": "0x8b95e335"
    },
    "0x9fc7875b": {
        "type": "function",
        "signature": "function manualPlay() view returns (bool)",
        "selector": "0x9fc7875b"
    },
    "0xb13bd491": {
        "type": "function",
        "signature": "function getAPRs() view returns (address[] addresses, uint256[] aprs)",
        "selector": "0xb13bd491"
    },
    "0xbf959bb8": {
        "type": "function",
        "signature": "function currentTokensUsed(uint256) view returns (address)",
        "selector": "0xbf959bb8"
    },
    "0xc4a664b8": {
        "type": "function",
        "signature": "function getParamsForRebalance(uint256 _newAmount) returns (address[], uint256[])",
        "selector": "0xc4a664b8"
    },
    "0xc85c93aa": {
        "type": "function",
        "signature": "function redeemIdleToken(uint256 _amount, bool _skipRebalance, uint256[] _clientProtocolAmounts) returns (uint256 redeemedTokens)",
        "selector": "0xc85c93aa"
    },
    "0xf2ce5806": {
        "type": "function",
        "signature": "function setProtocolWrapper(address _token, address _wrapper)",
        "selector": "0xf2ce5806"
    },
    "0xf2d50ba6": {
        "type": "function",
        "signature": "function lastITokenPrice() view returns (uint256)",
        "selector": "0xf2d50ba6"
    },
    "0x83197ef0": {
        "type": "function",
        "signature": "function destroy()",
        "selector": "0x83197ef0"
    },
    "0x6c4a483e": {
        "type": "function",
        "signature": "function discountedSwap(address caller, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 flags, bytes permit) desc, bytes data) payable returns (uint256 returnAmount, uint256 gasLeft, uint256 chiSpent)",
        "selector": "0x6c4a483e"
    },
    "0x78e3214f": {
        "type": "function",
        "signature": "function rescueFunds(address token, uint256 amount)",
        "selector": "0x78e3214f"
    },
    "0x7c025200": {
        "type": "function",
        "signature": "function swap(address caller, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 flags, bytes permit) desc, bytes data) payable returns (uint256 returnAmount, uint256 spentAmount, uint256 gasLeft)",
        "selector": "0x7c025200"
    },
    "0x2e95b6c8": {
        "type": "function",
        "signature": "function unoswap(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools) payable returns (uint256 returnAmount)",
        "selector": "0x2e95b6c8"
    },
    "0xa1251d75": {
        "type": "function",
        "signature": "function unoswapWithPermit(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools, bytes permit) returns (uint256 returnAmount)",
        "selector": "0xa1251d75"
    },
    "0x34b0793b": {
        "type": "function",
        "signature": "function discountedSwap(address caller, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 guaranteedAmount, uint256 flags, address referrer, bytes permit) desc, tuple(uint256 targetWithMandatory, uint256 gasLimit, uint256 value, bytes data)[] calls) payable returns (uint256 returnAmount)",
        "selector": "0x34b0793b"
    },
    "0x90411a32": {
        "type": "function",
        "signature": "function swap(address caller, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 guaranteedAmount, uint256 flags, address referrer, bytes permit) desc, tuple(uint256 targetWithMandatory, uint256 gasLimit, uint256 value, bytes data)[] calls) payable returns (uint256 returnAmount)",
        "selector": "0x90411a32"
    },
    "0x4ca88867": {
        "type": "error",
        "signature": "error AccessDenied()",
        "selector": "0x4ca88867"
    },
    "0xbd71636d": {
        "type": "error",
        "signature": "error AdvanceNonceFailed()",
        "selector": "0xbd71636d"
    },
    "0x41a26a63": {
        "type": "error",
        "signature": "error AlreadyFilled()",
        "selector": "0x41a26a63"
    },
    "0x1f1b8f61": {
        "type": "error",
        "signature": "error ArbitraryStaticCallFailed()",
        "selector": "0x1f1b8f61"
    },
    "0xb2c02722": {
        "type": "error",
        "signature": "error BadPool()",
        "selector": "0xb2c02722"
    },
    "0x5cd5d233": {
        "type": "error",
        "signature": "error BadSignature()",
        "selector": "0x5cd5d233"
    },
    "0xb12d13eb": {
        "type": "error",
        "signature": "error ETHTransferFailed()",
        "selector": "0xb12d13eb"
    },
    "0x67e7c0f6": {
        "type": "error",
        "signature": "error EmptyPools()",
        "selector": "0x67e7c0f6"
    },
    "0x1b10b0f9": {
        "type": "error",
        "signature": "error EthDepositRejected()",
        "selector": "0x1b10b0f9"
    },
    "0x110b8e73": {
        "type": "error",
        "signature": "error GetAmountCallFailed()",
        "selector": "0x110b8e73"
    },
    "0xef356d7a": {
        "type": "error",
        "signature": "error IncorrectDataLength()",
        "selector": "0xef356d7a"
    },
    "0xf4d678b8": {
        "type": "error",
        "signature": "error InsufficientBalance()",
        "selector": "0xf4d678b8"
    },
    "0x1841b4e1": {
        "type": "error",
        "signature": "error InvalidMsgValue()",
        "selector": "0x1841b4e1"
    },
    "0xf71fbda2": {
        "type": "error",
        "signature": "error InvalidatedOrder()",
        "selector": "0xf71fbda2"
    },
    "0xaa34b696": {
        "type": "error",
        "signature": "error MakingAmountExceeded()",
        "selector": "0xaa34b696"
    },
    "0x481ea392": {
        "type": "error",
        "signature": "error MakingAmountTooLow()",
        "selector": "0x481ea392"
    },
    "0x00e2a522": {
        "type": "error",
        "signature": "error OnlyOneAmountShouldBeZero()",
        "selector": "0x00e2a522"
    },
    "0xc56873ba": {
        "type": "error",
        "signature": "error OrderExpired()",
        "selector": "0xc56873ba"
    },
    "0xd9e1c6dc": {
        "type": "error",
        "signature": "error PermitLengthTooLow()",
        "selector": "0xd9e1c6dc"
    },
    "0xb6629c02": {
        "type": "error",
        "signature": "error PredicateIsNotTrue()",
        "selector": "0xb6629c02"
    },
    "0xd4dfdafe": {
        "type": "error",
        "signature": "error PrivateOrder()",
        "selector": "0xd4dfdafe"
    },
    "0x17c2b1f1": {
        "type": "error",
        "signature": "error RFQBadSignature()",
        "selector": "0x17c2b1f1"
    },
    "0xe8c66321": {
        "type": "error",
        "signature": "error RFQPrivateOrder()",
        "selector": "0xe8c66321"
    },
    "0x07b6e79f": {
        "type": "error",
        "signature": "error RFQSwapWithZeroAmount()",
        "selector": "0x07b6e79f"
    },
    "0x692e45e0": {
        "type": "error",
        "signature": "error RFQZeroTargetIsForbidden()",
        "selector": "0x692e45e0"
    },
    "0xc5f2be51": {
        "type": "error",
        "signature": "error ReentrancyDetected()",
        "selector": "0xc5f2be51"
    },
    "0xecef3664": {
        "type": "error",
        "signature": "error RemainingAmountIsZero()",
        "selector": "0xecef3664"
    },
    "0x85cd58dc": {
        "type": "error",
        "signature": "error ReservesCallFailed()",
        "selector": "0x85cd58dc"
    },
    "0xf32bec2f": {
        "type": "error",
        "signature": "error ReturnAmountIsNotEnough()",
        "selector": "0xf32bec2f"
    },
    "0x68275857": {
        "type": "error",
        "signature": "error SafePermitBadLength()",
        "selector": "0x68275857"
    },
    "0xfb7f5079": {
        "type": "error",
        "signature": "error SafeTransferFailed()",
        "selector": "0xfb7f5079"
    },
    "0xf4059071": {
        "type": "error",
        "signature": "error SafeTransferFromFailed()",
        "selector": "0xf4059071"
    },
    "0x1934afc8": {
        "type": "error",
        "signature": "error SimulationResults(bool success, bytes res)",
        "selector": "0x1934afc8"
    },
    "0xcf0b4d3a": {
        "type": "error",
        "signature": "error SwapAmountTooLarge()",
        "selector": "0xcf0b4d3a"
    },
    "0xfba5a276": {
        "type": "error",
        "signature": "error SwapWithZeroAmount()",
        "selector": "0xfba5a276"
    },
    "0x7f902a93": {
        "type": "error",
        "signature": "error TakingAmountExceeded()",
        "selector": "0x7f902a93"
    },
    "0x939c4204": {
        "type": "error",
        "signature": "error TakingAmountIncreased()",
        "selector": "0x939c4204"
    },
    "0xfb8ae129": {
        "type": "error",
        "signature": "error TakingAmountTooHigh()",
        "selector": "0xfb8ae129"
    },
    "0x70a03f48": {
        "type": "error",
        "signature": "error TransferFromMakerToTakerFailed()",
        "selector": "0x70a03f48"
    },
    "0x478a5205": {
        "type": "error",
        "signature": "error TransferFromTakerToMakerFailed()",
        "selector": "0x478a5205"
    },
    "0xb838de96": {
        "type": "error",
        "signature": "error UnknownOrder()",
        "selector": "0xb838de96"
    },
    "0x49986e73": {
        "type": "error",
        "signature": "error WrongAmount()",
        "selector": "0x49986e73"
    },
    "0xbec74c85": {
        "type": "error",
        "signature": "error WrongGetter()",
        "selector": "0xbec74c85"
    },
    "0xd92e233d": {
        "type": "error",
        "signature": "error ZeroAddress()",
        "selector": "0xd92e233d"
    },
    "0x0262dde4": {
        "type": "error",
        "signature": "error ZeroMinReturn()",
        "selector": "0x0262dde4"
    },
    "0x28ebf247": {
        "type": "error",
        "signature": "error ZeroReturnAmount()",
        "selector": "0x28ebf247"
    },
    "0xb0c4d05f": {
        "type": "error",
        "signature": "error ZeroTargetIsForbidden()",
        "selector": "0xb0c4d05f"
    },
    "0x72c244a8": {
        "type": "function",
        "signature": "function advanceNonce(uint8 amount)",
        "selector": "0x72c244a8"
    },
    "0xbfa75143": {
        "type": "function",
        "signature": "function and(uint256 offsets, bytes data) view returns (bool)",
        "selector": "0xbfa75143"
    },
    "0xbf15fcd8": {
        "type": "function",
        "signature": "function arbitraryStaticCall(address target, bytes data) view returns (uint256)",
        "selector": "0xbf15fcd8"
    },
    "0x2d9a56f6": {
        "type": "function",
        "signature": "function cancelOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order) returns (uint256 orderRemaining, bytes32 orderHash)",
        "selector": "0x2d9a56f6"
    },
    "0x825caba1": {
        "type": "function",
        "signature": "function cancelOrderRFQ(uint256 orderInfo)",
        "selector": "0x825caba1"
    },
    "0xbddccd35": {
        "type": "function",
        "signature": "function cancelOrderRFQ(uint256 orderInfo, uint256 additionalMask)",
        "selector": "0xbddccd35"
    },
    "0x6c838250": {
        "type": "function",
        "signature": "function checkPredicate(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order) view returns (bool)",
        "selector": "0x6c838250"
    },
    "0x84bd6d29": {
        "type": "function",
        "signature": "function clipperSwap(address clipperExchange, address srcToken, address dstToken, uint256 inputAmount, uint256 outputAmount, uint256 goodUntil, bytes32 r, bytes32 vs) payable returns (uint256 returnAmount)",
        "selector": "0x84bd6d29"
    },
    "0x093d4fa5": {
        "type": "function",
        "signature": "function clipperSwapTo(address clipperExchange, address recipient, address srcToken, address dstToken, uint256 inputAmount, uint256 outputAmount, uint256 goodUntil, bytes32 r, bytes32 vs) payable returns (uint256 returnAmount)",
        "selector": "0x093d4fa5"
    },
    "0xc805a666": {
        "type": "function",
        "signature": "function clipperSwapToWithPermit(address clipperExchange, address recipient, address srcToken, address dstToken, uint256 inputAmount, uint256 outputAmount, uint256 goodUntil, bytes32 r, bytes32 vs, bytes permit) returns (uint256 returnAmount)",
        "selector": "0xc805a666"
    },
    "0x6fe7b0ba": {
        "type": "function",
        "signature": "function eq(uint256 value, bytes data) view returns (bool)",
        "selector": "0x6fe7b0ba"
    },
    "0x62e238bb": {
        "type": "function",
        "signature": "function fillOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order, bytes signature, bytes interaction, uint256 makingAmount, uint256 takingAmount, uint256 skipPermitAndThresholdAmount) payable returns (uint256, uint256, bytes32)",
        "selector": "0x62e238bb"
    },
    "0x3eca9c0a": {
        "type": "function",
        "signature": "function fillOrderRFQ(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 flagsAndAmount) payable returns (uint256, uint256, bytes32)",
        "selector": "0x3eca9c0a"
    },
    "0x9570eeee": {
        "type": "function",
        "signature": "function fillOrderRFQCompact(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes32 r, bytes32 vs, uint256 flagsAndAmount) payable returns (uint256 filledMakingAmount, uint256 filledTakingAmount, bytes32 orderHash)",
        "selector": "0x9570eeee"
    },
    "0x5a099843": {
        "type": "function",
        "signature": "function fillOrderRFQTo(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 flagsAndAmount, address target) payable returns (uint256 filledMakingAmount, uint256 filledTakingAmount, bytes32 orderHash)",
        "selector": "0x5a099843"
    },
    "0x70ccbd31": {
        "type": "function",
        "signature": "function fillOrderRFQToWithPermit(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 flagsAndAmount, address target, bytes permit) returns (uint256, uint256, bytes32)",
        "selector": "0x70ccbd31"
    },
    "0xe5d7bde6": {
        "type": "function",
        "signature": "function fillOrderTo(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order_, bytes signature, bytes interaction, uint256 makingAmount, uint256 takingAmount, uint256 skipPermitAndThresholdAmount, address target) payable returns (uint256 actualMakingAmount, uint256 actualTakingAmount, bytes32 orderHash)",
        "selector": "0xe5d7bde6"
    },
    "0xd365c695": {
        "type": "function",
        "signature": "function fillOrderToWithPermit(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order, bytes signature, bytes interaction, uint256 makingAmount, uint256 takingAmount, uint256 skipPermitAndThresholdAmount, address target, bytes permit) returns (uint256, uint256, bytes32)",
        "selector": "0xd365c695"
    },
    "0x4f38e2b8": {
        "type": "function",
        "signature": "function gt(uint256 value, bytes data) view returns (bool)",
        "selector": "0x4f38e2b8"
    },
    "0x37e7316f": {
        "type": "function",
        "signature": "function hashOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, uint256 offsets, bytes interactions) order) view returns (bytes32)",
        "selector": "0x37e7316f"
    },
    "0xc53a0292": {
        "type": "function",
        "signature": "function increaseNonce()",
        "selector": "0xc53a0292"
    },
    "0x56f16124": {
        "type": "function",
        "signature": "function invalidatorForOrderRFQ(address maker, uint256 slot) view returns (uint256)",
        "selector": "0x56f16124"
    },
    "0xca4ece22": {
        "type": "function",
        "signature": "function lt(uint256 value, bytes data) view returns (bool)",
        "selector": "0xca4ece22"
    },
    "0x70ae92d2": {
        "type": "function",
        "signature": "function nonce(address) view returns (uint256)",
        "selector": "0x70ae92d2"
    },
    "0xcf6fc6e3": {
        "type": "function",
        "signature": "function nonceEquals(address makerAddress, uint256 makerNonce) view returns (bool)",
        "selector": "0xcf6fc6e3"
    },
    "0x74261145": {
        "type": "function",
        "signature": "function or(uint256 offsets, bytes data) view returns (bool)",
        "selector": "0x74261145"
    },
    "0xbc1ed74c": {
        "type": "function",
        "signature": "function remaining(bytes32 orderHash) view returns (uint256)",
        "selector": "0xbc1ed74c"
    },
    "0x7e54f092": {
        "type": "function",
        "signature": "function remainingRaw(bytes32 orderHash) view returns (uint256)",
        "selector": "0x7e54f092"
    },
    "0x942461bb": {
        "type": "function",
        "signature": "function remainingsRaw(bytes32[] orderHashes) view returns (uint256[])",
        "selector": "0x942461bb"
    },
    "0xbd61951d": {
        "type": "function",
        "signature": "function simulate(address target, bytes data)",
        "selector": "0xbd61951d"
    },
    "0x12aa3caf": {
        "type": "function",
        "signature": "function swap(address executor, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 flags) desc, bytes permit, bytes data) payable returns (uint256 returnAmount, uint256 spentAmount)",
        "selector": "0x12aa3caf"
    },
    "0x63592c2b": {
        "type": "function",
        "signature": "function timestampBelow(uint256 time) view returns (bool)",
        "selector": "0x63592c2b"
    },
    "0x2cc2878d": {
        "type": "function",
        "signature": "function timestampBelowAndNonceEquals(uint256 timeNonceAccount) view returns (bool)",
        "selector": "0x2cc2878d"
    },
    "0xe449022e": {
        "type": "function",
        "signature": "function uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools) payable returns (uint256 returnAmount)",
        "selector": "0xe449022e"
    },
    "0xbc80f1a8": {
        "type": "function",
        "signature": "function uniswapV3SwapTo(address recipient, uint256 amount, uint256 minReturn, uint256[] pools) payable returns (uint256 returnAmount)",
        "selector": "0xbc80f1a8"
    },
    "0x2521b930": {
        "type": "function",
        "signature": "function uniswapV3SwapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit) returns (uint256 returnAmount)",
        "selector": "0x2521b930"
    },
    "0x0502b1c5": {
        "type": "function",
        "signature": "function unoswap(address srcToken, uint256 amount, uint256 minReturn, uint256[] pools) payable returns (uint256 returnAmount)",
        "selector": "0x0502b1c5"
    },
    "0xf78dc253": {
        "type": "function",
        "signature": "function unoswapTo(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools) payable returns (uint256 returnAmount)",
        "selector": "0xf78dc253"
    },
    "0x3c15fd91": {
        "type": "function",
        "signature": "function unoswapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit) returns (uint256 returnAmount)",
        "selector": "0x3c15fd91"
    },
    "0x06bf53d0": {
        "type": "function",
        "signature": "function LIMIT_ORDER_RFQ_TYPEHASH() view returns (bytes32)",
        "selector": "0x06bf53d0"
    },
    "0xb0431182": {
        "type": "function",
        "signature": "function clipperSwap(address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns (uint256 returnAmount)",
        "selector": "0xb0431182"
    },
    "0x9994dd15": {
        "type": "function",
        "signature": "function clipperSwapTo(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns (uint256 returnAmount)",
        "selector": "0x9994dd15"
    },
    "0xd6a92a5d": {
        "type": "function",
        "signature": "function clipperSwapToWithPermit(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn, bytes permit) returns (uint256 returnAmount)",
        "selector": "0xd6a92a5d"
    },
    "0xd0a3b665": {
        "type": "function",
        "signature": "function fillOrderRFQ(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount) returns (uint256, uint256)",
        "selector": "0xd0a3b665"
    },
    "0xbaba5855": {
        "type": "function",
        "signature": "function fillOrderRFQTo(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target) returns (uint256, uint256)",
        "selector": "0xbaba5855"
    },
    "0x4cc4a27b": {
        "type": "function",
        "signature": "function fillOrderRFQToWithPermit(tuple(uint256 info, address makerAsset, address takerAsset, address maker, address allowedSender, uint256 makingAmount, uint256 takingAmount) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target, bytes permit) returns (uint256, uint256)",
        "selector": "0x4cc4a27b"
    },
    "0x71a2039a": {
        "type": "function",
        "signature": "function getOrdersInfoRespectingBalancesAndAllowances(address token, address zrx, address zrxTokenProxy, tuple(address makerAddress, address takerAddress, address feeRecipientAddress, address senderAddress, uint256 makerAssetAmount, uint256 takerAssetAmount, uint256 makerFee, uint256 takerFee, uint256 expirationTimeSeconds, uint256 salt, bytes makerAssetData, bytes takerAssetData)[] orders) view returns (tuple(uint8 orderStatus, bytes32 orderHash, uint256 orderTakerAssetFilledAmount)[] ordersInfo)",
        "selector": "0x71a2039a"
    },
    "0xa96c400e": {
        "type": "function",
        "signature": "function marketSellOrdersProportion(address tokenSell, address tokenBuy, address zrxExchange, address zrxTokenProxy, tuple(address makerAddress, address takerAddress, address feeRecipientAddress, address senderAddress, uint256 makerAssetAmount, uint256 takerAssetAmount, uint256 makerFee, uint256 takerFee, uint256 expirationTimeSeconds, uint256 salt, bytes makerAssetData, bytes takerAssetData)[] orders, bytes[] signatures, uint256 mul, uint256 div)",
        "selector": "0xa96c400e"
    },
    "0xae4dd0fc": {
        "type": "function",
        "signature": "function withdrawAllToken(address token)",
        "selector": "0xae4dd0fc"
    },
    "0xbf86d690": {
        "type": "function",
        "signature": "function isShutdown() view returns (bool)",
        "selector": "0xbf86d690"
    },
    "0xc9b27359": {
        "type": "function",
        "signature": "function infiniteApproveIfNeeded(address token, address to)",
        "selector": "0xc9b27359"
    },
    "0xe8edc816": {
        "type": "function",
        "signature": "function spender() view returns (address)",
        "selector": "0xe8edc816"
    },
    "0xf88309d7": {
        "type": "function",
        "signature": "function swap(address fromToken, address toToken, uint256 fromTokenAmount, uint256 minReturnAmount, uint256 guaranteedAmount, address referrer, address[] callAddresses, bytes callDataConcat, uint256[] starts, uint256[] gasLimitsAndValues) payable returns (uint256 returnAmount)",
        "selector": "0xf88309d7"
    },
    "0xfc0e74d1": {
        "type": "function",
        "signature": "function shutdown()",
        "selector": "0xfc0e74d1"
    },
    "0xfcc06f8e": {
        "type": "function",
        "signature": "function marketSellOrders(address makerAsset, address zrxExchange, address zrxTokenProxy, uint256 takerAssetFillAmount, tuple(address makerAddress, address takerAddress, address feeRecipientAddress, address senderAddress, uint256 makerAssetAmount, uint256 takerAssetAmount, uint256 makerFee, uint256 takerFee, uint256 expirationTimeSeconds, uint256 salt, bytes makerAssetData, bytes takerAssetData)[] orders, bytes[] signatures) returns (tuple(uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid) totalFillResults)",
        "selector": "0xfcc06f8e"
    },
    "0x54dd5f74": {
        "type": "function",
        "signature": "function LIMIT_ORDER_TYPEHASH() view returns (bytes32)",
        "selector": "0x54dd5f74"
    },
    "0x961d5b1e": {
        "type": "function",
        "signature": "function and(address[] targets, bytes[] data) view returns (bool)",
        "selector": "0x961d5b1e"
    },
    "0xb244b450": {
        "type": "function",
        "signature": "function cancelOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order)",
        "selector": "0xb244b450"
    },
    "0xa65a0e71": {
        "type": "function",
        "signature": "function checkPredicate(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order) view returns (bool)",
        "selector": "0xa65a0e71"
    },
    "0x36006bf3": {
        "type": "function",
        "signature": "function doublePrice(address oracle1, address oracle2, uint256 spread, uint256 amount) view returns (uint256)",
        "selector": "0x36006bf3"
    },
    "0x32565d61": {
        "type": "function",
        "signature": "function eq(uint256 value, address target, bytes data) view returns (bool)",
        "selector": "0x32565d61"
    },
    "0x655d13cd": {
        "type": "function",
        "signature": "function fillOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order, bytes signature, uint256 makingAmount, uint256 takingAmount, uint256 thresholdAmount) returns (uint256, uint256)",
        "selector": "0x655d13cd"
    },
    "0xb2610fe3": {
        "type": "function",
        "signature": "function fillOrderTo(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order, bytes signature, uint256 makingAmount, uint256 takingAmount, uint256 thresholdAmount, address target) returns (uint256, uint256)",
        "selector": "0xb2610fe3"
    },
    "0x6073cc20": {
        "type": "function",
        "signature": "function fillOrderToWithPermit(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order, bytes signature, uint256 makingAmount, uint256 takingAmount, uint256 thresholdAmount, address target, bytes permit) returns (uint256, uint256)",
        "selector": "0x6073cc20"
    },
    "0xf4a215c3": {
        "type": "function",
        "signature": "function getMakerAmount(uint256 orderMakerAmount, uint256 orderTakerAmount, uint256 swapTakerAmount) pure returns (uint256)",
        "selector": "0xf4a215c3"
    },
    "0x296637bf": {
        "type": "function",
        "signature": "function getTakerAmount(uint256 orderMakerAmount, uint256 orderTakerAmount, uint256 swapMakerAmount) pure returns (uint256)",
        "selector": "0x296637bf"
    },
    "0x057702e9": {
        "type": "function",
        "signature": "function gt(uint256 value, address target, bytes data) view returns (bool)",
        "selector": "0x057702e9"
    },
    "0xfa1cb9f2": {
        "type": "function",
        "signature": "function hashOrder(tuple(uint256 salt, address makerAsset, address takerAsset, address maker, address receiver, address allowedSender, uint256 makingAmount, uint256 takingAmount, bytes makerAssetData, bytes takerAssetData, bytes getMakerAmount, bytes getTakerAmount, bytes predicate, bytes permit, bytes interaction) order) view returns (bytes32)",
        "selector": "0xfa1cb9f2"
    },
    "0x871919d5": {
        "type": "function",
        "signature": "function lt(uint256 value, address target, bytes data) view returns (bool)",
        "selector": "0x871919d5"
    },
    "0xe6133301": {
        "type": "function",
        "signature": "function or(address[] targets, bytes[] data) view returns (bool)",
        "selector": "0xe6133301"
    },
    "0x7f29a59d": {
        "type": "function",
        "signature": "function simulateCalls(address[] targets, bytes[] data)",
        "selector": "0x7f29a59d"
    },
    "0xc05435f1": {
        "type": "function",
        "signature": "function singlePrice(address oracle, uint256 inverseAndSpread, uint256 amount) view returns (uint256)",
        "selector": "0xc05435f1"
    },
    "0x42200566": {
        "type": "error",
        "signature": "error CalldataEmptyButInitNotZero()",
        "selector": "0x42200566"
    },
    "0x79c9df22": {
        "type": "error",
        "signature": "error FacetAddressIsNotZero()",
        "selector": "0x79c9df22"
    },
    "0xc68ec83a": {
        "type": "error",
        "signature": "error FacetAddressIsZero()",
        "selector": "0xc68ec83a"
    },
    "0xe3500600": {
        "type": "error",
        "signature": "error FacetContainsNoCode()",
        "selector": "0xe3500600"
    },
    "0xa023275d": {
        "type": "error",
        "signature": "error FunctionAlreadyExists()",
        "selector": "0xa023275d"
    },
    "0xa9ad62f8": {
        "type": "error",
        "signature": "error FunctionDoesNotExist()",
        "selector": "0xa9ad62f8"
    },
    "0xc3c5ec37": {
        "type": "error",
        "signature": "error FunctionIsImmutable()",
        "selector": "0xc3c5ec37"
    },
    "0xe548e6b5": {
        "type": "error",
        "signature": "error IncorrectFacetCutAction()",
        "selector": "0xe548e6b5"
    },
    "0xc53ebed5": {
        "type": "error",
        "signature": "error InitReverted()",
        "selector": "0xc53ebed5"
    },
    "0x98116860": {
        "type": "error",
        "signature": "error InitZeroButCalldataNotEmpty()",
        "selector": "0x98116860"
    },
    "0x7bc55950": {
        "type": "error",
        "signature": "error NoSelectorsInFace()",
        "selector": "0x7bc55950"
    },
    "0x6ba355aa": {
        "type": "function",
        "signature": "function initializeTreeForMigration(bytes32[] _filledSubtrees, bytes32 _root)",
        "selector": "0x6ba355aa"
    },
    "0x88d761f2": {
        "type": "function",
        "signature": "function finishMigration() payable",
        "selector": "0x88d761f2"
    },
    "0x916710aa": {
        "type": "function",
        "signature": "function migrateState(bytes32[] _commitments, bytes32[] _nullifierHashes)",
        "selector": "0x916710aa"
    },
    "0xb06faf62": {
        "type": "function",
        "signature": "function isMigrated() view returns (bool)",
        "selector": "0xb06faf62"
    },
    "0x0e752702": {
        "type": "function",
        "signature": "function repayBorrow(uint256 repayAmount) returns (uint256)",
        "selector": "0x0e752702"
    },
    "0x173b9904": {
        "type": "function",
        "signature": "function reserveFactorMantissa() view returns (uint256)",
        "selector": "0x173b9904"
    },
    "0x17bfdfbc": {
        "type": "function",
        "signature": "function borrowBalanceCurrent(address account) returns (uint256)",
        "selector": "0x17bfdfbc"
    },
    "0x182df0f5": {
        "type": "function",
        "signature": "function exchangeRateStored() view returns (uint256)",
        "selector": "0x182df0f5"
    },
    "0x2608f818": {
        "type": "function",
        "signature": "function repayBorrowBehalf(address borrower, uint256 repayAmount) returns (uint256)",
        "selector": "0x2608f818"
    },
    "0x3af9e669": {
        "type": "function",
        "signature": "function balanceOfUnderlying(address owner) returns (uint256)",
        "selector": "0x3af9e669"
    },
    "0x3b1d21a2": {
        "type": "function",
        "signature": "function getCash() view returns (uint256)",
        "selector": "0x3b1d21a2"
    },
    "0x4576b5db": {
        "type": "function",
        "signature": "function _setComptroller(address newComptroller) returns (uint256)",
        "selector": "0x4576b5db"
    },
    "0x47bd3718": {
        "type": "function",
        "signature": "function totalBorrows() view returns (uint256)",
        "selector": "0x47bd3718"
    },
    "0x5fe3b567": {
        "type": "function",
        "signature": "function comptroller() view returns (address)",
        "selector": "0x5fe3b567"
    },
    "0x601a0bf1": {
        "type": "function",
        "signature": "function _reduceReserves(uint256 reduceAmount) returns (uint256)",
        "selector": "0x601a0bf1"
    },
    "0x675d972c": {
        "type": "function",
        "signature": "function initialExchangeRateMantissa() view returns (uint256)",
        "selector": "0x675d972c"
    },
    "0x6c540baf": {
        "type": "function",
        "signature": "function accrualBlockNumber() view returns (uint256)",
        "selector": "0x6c540baf"
    },
    "0x6f307dc3": {
        "type": "function",
        "signature": "function underlying() view returns (address)",
        "selector": "0x6f307dc3"
    },
    "0x73acee98": {
        "type": "function",
        "signature": "function totalBorrowsCurrent() returns (uint256)",
        "selector": "0x73acee98"
    },
    "0x852a12e3": {
        "type": "function",
        "signature": "function redeemUnderlying(uint256 redeemAmount) returns (uint256)",
        "selector": "0x852a12e3"
    },
    "0x8f840ddd": {
        "type": "function",
        "signature": "function totalReserves() view returns (uint256)",
        "selector": "0x8f840ddd"
    },
    "0x95dd9193": {
        "type": "function",
        "signature": "function borrowBalanceStored(address account) view returns (uint256)",
        "selector": "0x95dd9193"
    },
    "0xa6afed95": {
        "type": "function",
        "signature": "function accrueInterest() returns (uint256)",
        "selector": "0xa6afed95"
    },
    "0xaa5af0fd": {
        "type": "function",
        "signature": "function borrowIndex() view returns (uint256)",
        "selector": "0xaa5af0fd"
    },
    "0xae9d70b0": {
        "type": "function",
        "signature": "function supplyRatePerBlock() view returns (uint256)",
        "selector": "0xae9d70b0"
    },
    "0xb2a02ff1": {
        "type": "function",
        "signature": "function seize(address liquidator, address borrower, uint256 seizeTokens) returns (uint256)",
        "selector": "0xb2a02ff1"
    },
    "0xbd6d894d": {
        "type": "function",
        "signature": "function exchangeRateCurrent() returns (uint256)",
        "selector": "0xbd6d894d"
    },
    "0xc37f68e2": {
        "type": "function",
        "signature": "function getAccountSnapshot(address account) view returns (uint256, uint256, uint256, uint256)",
        "selector": "0xc37f68e2"
    },
    "0xc5ebeaec": {
        "type": "function",
        "signature": "function borrow(uint256 borrowAmount) returns (uint256)",
        "selector": "0xc5ebeaec"
    },
    "0xf2b3abbd": {
        "type": "function",
        "signature": "function _setInterestRateModel(address newInterestRateModel) returns (uint256)",
        "selector": "0xf2b3abbd"
    },
    "0xf3fdb15a": {
        "type": "function",
        "signature": "function interestRateModel() view returns (address)",
        "selector": "0xf3fdb15a"
    },
    "0xf5e3c462": {
        "type": "function",
        "signature": "function liquidateBorrow(address borrower, uint256 repayAmount, address cTokenCollateral) returns (uint256)",
        "selector": "0xf5e3c462"
    },
    "0xf8f9da28": {
        "type": "function",
        "signature": "function borrowRatePerBlock() view returns (uint256)",
        "selector": "0xf8f9da28"
    },
    "0xfca7820b": {
        "type": "function",
        "signature": "function _setReserveFactor(uint256 newReserveFactorMantissa) returns (uint256)",
        "selector": "0xfca7820b"
    },
    "0xfe9c44ae": {
        "type": "function",
        "signature": "function isCToken() view returns (bool)",
        "selector": "0xfe9c44ae"
    },
    "0x1413dc7d": {
        "type": "function",
        "signature": "function CUBE_COUNTER_KEY() view returns (bytes32)",
        "selector": "0x1413dc7d"
    },
    "0x0f532d18": {
        "type": "function",
        "signature": "function MSG_SENDER_KEY() view returns (bytes32)",
        "selector": "0x0f532d18"
    },
    "0x87c13943": {
        "type": "function",
        "signature": "function PERCENTAGE_BASE() view returns (uint256)",
        "selector": "0x87c13943"
    },
    "0xfa2901a5": {
        "type": "function",
        "signature": "function POSTPROCESS_SIG() view returns (bytes4)",
        "selector": "0xfa2901a5"
    },
    "0x38c5c08e": {
        "type": "function",
        "signature": "function batchExec(address[] tos, bytes32[] configs, bytes[] datas) payable",
        "selector": "0x38c5c08e"
    },
    "0x99eb59b9": {
        "type": "function",
        "signature": "function cache(bytes32) view returns (bytes32)",
        "selector": "0x99eb59b9"
    },
    "0x71938509": {
        "type": "function",
        "signature": "function execs(address[] tos, bytes32[] configs, bytes[] datas) payable",
        "selector": "0x71938509"
    },
    "0xdc9031c4": {
        "type": "function",
        "signature": "function stack(uint256) view returns (bytes32)",
        "selector": "0xdc9031c4"
    },
    "0x7388614b": {
        "type": "function",
        "signature": "function buyCover(address coveredContractAddress, bytes4 coverCurrency, uint256[] coverDetails, uint16 coverPeriod, uint8 _v, bytes32 _r, bytes32 _s) payable",
        "selector": "0x7388614b"
    },
    "0x445def2e": {
        "type": "function",
        "signature": "function distributorFeePercentage() view returns (uint256)",
        "selector": "0x445def2e"
    },
    "0xdc4645c3": {
        "type": "function",
        "signature": "function getCoverStatus(uint256 tokenId) view returns (uint8 coverStatus, bool payoutCompleted)",
        "selector": "0xdc4645c3"
    },
    "0x4e170591": {
        "type": "function",
        "signature": "function getMemberRoles() view returns (address)",
        "selector": "0x4e170591"
    },
    "0xb4634a5e": {
        "type": "function",
        "signature": "function nxMaster() view returns (address)",
        "selector": "0xb4634a5e"
    },
    "0x91be3713": {
        "type": "function",
        "signature": "function nxmTokenApprove(address _spender, uint256 _value)",
        "selector": "0x91be3713"
    },
    "0x3500e4a9": {
        "type": "function",
        "signature": "function redeemClaim(uint256 tokenId)",
        "selector": "0x3500e4a9"
    },
    "0x74bd0ace": {
        "type": "function",
        "signature": "function sellNXMTokens(uint256 amount)",
        "selector": "0x74bd0ace"
    },
    "0x6aa14a96": {
        "type": "function",
        "signature": "function submitClaim(uint256 tokenId)",
        "selector": "0x6aa14a96"
    },
    "0x4ed75d47": {
        "type": "function",
        "signature": "function switchMembership(address _newMembership)",
        "selector": "0x4ed75d47"
    },
    "0x4f6ccce7": {
        "type": "function",
        "signature": "function tokenByIndex(uint256 index) view returns (uint256)",
        "selector": "0x4f6ccce7"
    },
    "0x2f745c59": {
        "type": "function",
        "signature": "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
        "selector": "0x2f745c59"
    },
    "0x4f64b2be": {
        "type": "function",
        "signature": "function tokens(uint256 i) view returns (address)",
        "selector": "0x4f64b2be"
    },
    "0x522f6815": {
        "type": "function",
        "signature": "function withdrawEther(address recipient, uint256 amount)",
        "selector": "0x522f6815"
    },
    "0x165ffdcc": {
        "type": "function",
        "signature": "function withdrawTokens(address _recipient, uint256 _amount, bytes4 _currency)",
        "selector": "0x165ffdcc"
    },
    "0xe9744712": {
        "type": "function",
        "signature": "function withdrawableTokens(bytes4) view returns (uint256)",
        "selector": "0xe9744712"
    },
    "0xe320176b": {
        "type": "error",
        "signature": "error NonZeroValue()",
        "selector": "0xe320176b"
    },
    "0x3d2f7ef6": {
        "type": "error",
        "signature": "error TokenNonExistent(uint256 tokenId)",
        "selector": "0x3d2f7ef6"
    },
    "0xbb690064": {
        "type": "error",
        "signature": "error TokenNonOwner(uint256 tokenId)",
        "selector": "0xbb690064"
    },
    "0x595162dd": {
        "type": "error",
        "signature": "error Unapprovable()",
        "selector": "0x595162dd"
    },
    "0x072b78c7": {
        "type": "error",
        "signature": "error Untransferable()",
        "selector": "0x072b78c7"
    },
    "0xbb4b5734": {
        "type": "function",
        "signature": "function EXPIRATION() view returns (uint256)",
        "selector": "0xbb4b5734"
    },
    "0x1852e8d9": {
        "type": "function",
        "signature": "function calculateReward(address account, uint256 tokenId) view returns (uint256 total)",
        "selector": "0x1852e8d9"
    },
    "0x068c526f": {
        "type": "function",
        "signature": "function calculateRewards(address account, uint256[] tokenIds) view returns (uint256[] rewards)",
        "selector": "0x068c526f"
    },
    "0x5eac6239": {
        "type": "function",
        "signature": "function claimRewards(uint256[] tokenIds)",
        "selector": "0x5eac6239"
    },
    "0x598b8e71": {
        "type": "function",
        "signature": "function deposit(uint256[] tokenIds)",
        "selector": "0x598b8e71"
    },
    "0xe3a9db1a": {
        "type": "function",
        "signature": "function depositsOf(address account) view returns (uint256[])",
        "selector": "0xe3a9db1a"
    },
    "0x276184ae": {
        "type": "function",
        "signature": "function erc20Address() view returns (address)",
        "selector": "0x276184ae"
    },
    "0x2352a864": {
        "type": "function",
        "signature": "function erc721Address() view returns (address)",
        "selector": "0x2352a864"
    },
    "0x940414ce": {
        "type": "function",
        "signature": "function findRate(uint256 tokenId) view returns (uint256 rate)",
        "selector": "0x940414ce"
    },
    "0x5773d778": {
        "type": "function",
        "signature": "function pauseTokenEmissions() view returns (bool)",
        "selector": "0x5773d778"
    },
    "0x3320d501": {
        "type": "function",
        "signature": "function pausedDepositBlocks() view returns (bool)",
        "selector": "0x3320d501"
    },
    "0xcea01962": {
        "type": "function",
        "signature": "function rewardRate(uint256) view returns (uint256)",
        "selector": "0xcea01962"
    },
    "0x9a03d9a3": {
        "type": "function",
        "signature": "function setERC721Address(address _newErc721Address)",
        "selector": "0x9a03d9a3"
    },
    "0x4a39fa80": {
        "type": "function",
        "signature": "function setErc20Address(address _newErc20Address)",
        "selector": "0x4a39fa80"
    },
    "0xdb3b947f": {
        "type": "function",
        "signature": "function setStakedSealsAddress(address _stakingContractV1Address)",
        "selector": "0xdb3b947f"
    },
    "0x7c79d73b": {
        "type": "function",
        "signature": "function stakeSealsV1() view returns (address)",
        "selector": "0x7c79d73b"
    },
    "0x5e1bef32": {
        "type": "function",
        "signature": "function staked(uint256) view returns (uint256 claimedAt)",
        "selector": "0x5e1bef32"
    },
    "0x335e15a2": {
        "type": "function",
        "signature": "function stakedInfoOf(uint256[] tokenIds) view returns (bytes[])",
        "selector": "0x335e15a2"
    },
    "0x19a249a8": {
        "type": "function",
        "signature": "function toggleEmissions()",
        "selector": "0x19a249a8"
    },
    "0xc620994b": {
        "type": "function",
        "signature": "function togglePauseDepositBlocks()",
        "selector": "0xc620994b"
    },
    "0xb32534cf": {
        "type": "function",
        "signature": "function updateRewardRate(uint256 index, uint256 rate)",
        "selector": "0xb32534cf"
    },
    "0x983d95ce": {
        "type": "function",
        "signature": "function withdraw(uint256[] tokenIds)",
        "selector": "0x983d95ce"
    },
    "0x315a095d": {
        "type": "function",
        "signature": "function withdrawTokens(uint256 amount)",
        "selector": "0x315a095d"
    },
    "0x98891923": {
        "type": "error",
        "signature": "error BadReturnValueFromERC20OnTransfer(address token, address from, address to, uint256 amount)",
        "selector": "0x98891923"
    },
    "0x93daadf2": {
        "type": "error",
        "signature": "error ChannelClosed(address channel)",
        "selector": "0x93daadf2"
    },
    "0x924e341e": {
        "type": "error",
        "signature": "error ChannelStatusAlreadySet(address channel, bool isOpen)",
        "selector": "0x924e341e"
    },
    "0xafc445e2": {
        "type": "error",
        "signature": "error ERC1155BatchTransferGenericFailure(address token, address from, address to, uint256[] identifiers, uint256[] amounts)",
        "selector": "0xafc445e2"
    },
    "0xeba2084c": {
        "type": "error",
        "signature": "error Invalid1155BatchTransferEncoding()",
        "selector": "0xeba2084c"
    },
    "0x6d5769be": {
        "type": "error",
        "signature": "error InvalidController()",
        "selector": "0x6d5769be"
    },
    "0xefcc00b1": {
        "type": "error",
        "signature": "error InvalidERC721TransferAmount()",
        "selector": "0xefcc00b1"
    },
    "0x7932f1fc": {
        "type": "error",
        "signature": "error InvalidItemType()",
        "selector": "0x7932f1fc"
    },
    "0x91b3e514": {
        "type": "error",
        "signature": "error MissingItemAmount()",
        "selector": "0x91b3e514"
    },
    "0x5f15d672": {
        "type": "error",
        "signature": "error NoContract(address account)",
        "selector": "0x5f15d672"
    },
    "0xf486bc87": {
        "type": "error",
        "signature": "error TokenTransferGenericFailure(address token, address from, address to, uint256 identifier, uint256 amount)",
        "selector": "0xf486bc87"
    },
    "0x6ab37ce7": {
        "type": "error",
        "signature": "error UnusedItemParameters()",
        "selector": "0x6ab37ce7"
    },
    "0x4ce34aa2": {
        "type": "function",
        "signature": "function execute(tuple(uint8 itemType, address token, address from, address to, uint256 identifier, uint256 amount)[] transfers) returns (bytes4 magicValue)",
        "selector": "0x4ce34aa2"
    },
    "0x8df25d92": {
        "type": "function",
        "signature": "function executeBatch1155(tuple(address token, address from, address to, uint256[] ids, uint256[] amounts)[] batchTransfers) returns (bytes4 magicValue)",
        "selector": "0x8df25d92"
    },
    "0x899e104c": {
        "type": "function",
        "signature": "function executeWithBatch1155(tuple(uint8 itemType, address token, address from, address to, uint256 identifier, uint256 amount)[] standardTransfers, tuple(address token, address from, address to, uint256[] ids, uint256[] amounts)[] batchTransfers) returns (bytes4 magicValue)",
        "selector": "0x899e104c"
    },
    "0xc4e8fcb5": {
        "type": "function",
        "signature": "function updateChannel(address channel, bool isOpen)",
        "selector": "0xc4e8fcb5"
    },
    "0x042069d6": {
        "type": "function",
        "signature": "function ownerSetSpreadPremium(uint256 marketId, tuple(uint256 value) spreadPremium)",
        "selector": "0x042069d6"
    },
    "0x052f72d7": {
        "type": "function",
        "signature": "function getIsGlobalOperator(address operator) view returns (bool)",
        "selector": "0x052f72d7"
    },
    "0x062bd3e9": {
        "type": "function",
        "signature": "function getMarketTokenAddress(uint256 marketId) view returns (address)",
        "selector": "0x062bd3e9"
    },
    "0x121fb72f": {
        "type": "function",
        "signature": "function ownerSetInterestSetter(uint256 marketId, address interestSetter)",
        "selector": "0x121fb72f"
    },
    "0x124f914c": {
        "type": "function",
        "signature": "function getAccountValues(tuple(address owner, uint256 number) account) view returns (tuple(uint256 value), tuple(uint256 value))",
        "selector": "0x124f914c"
    },
    "0x13368364": {
        "type": "function",
        "signature": "function getMarketPriceOracle(uint256 marketId) view returns (address)",
        "selector": "0x13368364"
    },
    "0x197f0f05": {
        "type": "function",
        "signature": "function getMarketInterestSetter(uint256 marketId) view returns (address)",
        "selector": "0x197f0f05"
    },
    "0x1a7777bb": {
        "type": "function",
        "signature": "function getMarketSpreadPremium(uint256 marketId) view returns (tuple(uint256 value))",
        "selector": "0x1a7777bb"
    },
    "0x295c39a5": {
        "type": "function",
        "signature": "function getNumMarkets() view returns (uint256)",
        "selector": "0x295c39a5"
    },
    "0x2a560845": {
        "type": "function",
        "signature": "function ownerWithdrawUnsupportedTokens(address token, address recipient) returns (uint256)",
        "selector": "0x2a560845"
    },
    "0x2e822af3": {
        "type": "function",
        "signature": "function ownerSetMinBorrowedValue(tuple(uint256 value) minBorrowedValue)",
        "selector": "0x2e822af3"
    },
    "0x3063bce2": {
        "type": "function",
        "signature": "function ownerSetLiquidationSpread(tuple(uint256 value) spread)",
        "selector": "0x3063bce2"
    },
    "0x387a498a": {
        "type": "function",
        "signature": "function ownerSetEarningsRate(tuple(uint256 value) earningsRate)",
        "selector": "0x387a498a"
    },
    "0x3a031bf0": {
        "type": "function",
        "signature": "function getIsLocalOperator(address owner, address operator) view returns (bool)",
        "selector": "0x3a031bf0"
    },
    "0x47d1b53c": {
        "type": "function",
        "signature": "function getAccountPar(tuple(address owner, uint256 number) account, uint256 marketId) view returns (tuple(bool sign, uint128 value))",
        "selector": "0x47d1b53c"
    },
    "0x4be87414": {
        "type": "function",
        "signature": "function ownerSetMarginPremium(uint256 marketId, tuple(uint256 value) marginPremium)",
        "selector": "0x4be87414"
    },
    "0x4f3c1542": {
        "type": "function",
        "signature": "function getMarginRatio() view returns (tuple(uint256 value))",
        "selector": "0x4f3c1542"
    },
    "0x56ea84b2": {
        "type": "function",
        "signature": "function getMarketCurrentIndex(uint256 marketId) view returns (tuple(uint96 borrow, uint96 supply, uint32 lastUpdate))",
        "selector": "0x56ea84b2"
    },
    "0x5ac7d17c": {
        "type": "function",
        "signature": "function getMarketIsClosing(uint256 marketId) view returns (bool)",
        "selector": "0x5ac7d17c"
    },
    "0x69794795": {
        "type": "function",
        "signature": "function getRiskParams() view returns (tuple(tuple(uint256 value) marginRatio, tuple(uint256 value) liquidationSpread, tuple(uint256 value) earningsRate, tuple(uint256 value) minBorrowedValue))",
        "selector": "0x69794795"
    },
    "0x6a8194e7": {
        "type": "function",
        "signature": "function getAccountBalances(tuple(address owner, uint256 number) account) view returns (address[], tuple(bool sign, uint128 value)[], tuple(bool sign, uint256 value)[])",
        "selector": "0x6a8194e7"
    },
    "0x7e9eaf41": {
        "type": "function",
        "signature": "function getMinBorrowedValue() view returns (tuple(uint256 value))",
        "selector": "0x7e9eaf41"
    },
    "0x85b53fc8": {
        "type": "function",
        "signature": "function setOperators(tuple(address operator, bool trusted)[] args)",
        "selector": "0x85b53fc8"
    },
    "0x8928378e": {
        "type": "function",
        "signature": "function getMarketPrice(uint256 marketId) view returns (tuple(uint256 value))",
        "selector": "0x8928378e"
    },
    "0x8f6bc659": {
        "type": "function",
        "signature": "function ownerWithdrawExcessTokens(uint256 marketId, address recipient) returns (uint256)",
        "selector": "0x8f6bc659"
    },
    "0x982f323c": {
        "type": "function",
        "signature": "function ownerAddMarket(address token, address priceOracle, address interestSetter, tuple(uint256 value) marginPremium, tuple(uint256 value) spreadPremium)",
        "selector": "0x982f323c"
    },
    "0xa67a6a45": {
        "type": "function",
        "signature": "function operate(tuple(address owner, uint256 number)[] accounts, tuple(uint8 actionType, uint256 accountId, tuple(bool sign, uint8 denomination, uint8 ref, uint256 value) amount, uint256 primaryMarketId, uint256 secondaryMarketId, address otherAddress, uint256 otherAccountId, bytes data)[] actions)",
        "selector": "0xa67a6a45"
    },
    "0xb548b892": {
        "type": "function",
        "signature": "function getMarketWithInfo(uint256 marketId) view returns (tuple(address token, tuple(uint128 borrow, uint128 supply) totalPar, tuple(uint96 borrow, uint96 supply, uint32 lastUpdate) index, address priceOracle, address interestSetter, tuple(uint256 value) marginPremium, tuple(uint256 value) spreadPremium, bool isClosing), tuple(uint96 borrow, uint96 supply, uint32 lastUpdate), tuple(uint256 value), tuple(uint256 value))",
        "selector": "0xb548b892"
    },
    "0xc0bb72b7": {
        "type": "function",
        "signature": "function ownerSetMarginRatio(tuple(uint256 value) ratio)",
        "selector": "0xc0bb72b7"
    },
    "0xc1460942": {
        "type": "function",
        "signature": "function getLiquidationSpread() view returns (tuple(uint256 value))",
        "selector": "0xc1460942"
    },
    "0xc190c2ec": {
        "type": "function",
        "signature": "function getAccountWei(tuple(address owner, uint256 number) account, uint256 marketId) view returns (tuple(bool sign, uint256 value))",
        "selector": "0xc190c2ec"
    },
    "0xcb04a34c": {
        "type": "function",
        "signature": "function getMarketTotalPar(uint256 marketId) view returns (tuple(uint128 borrow, uint128 supply))",
        "selector": "0xcb04a34c"
    },
    "0xd24c48bc": {
        "type": "function",
        "signature": "function getLiquidationSpreadForPair(uint256 heldMarketId, uint256 owedMarketId) view returns (tuple(uint256 value))",
        "selector": "0xd24c48bc"
    },
    "0xd5ecf7c5": {
        "type": "function",
        "signature": "function getNumExcessTokens(uint256 marketId) view returns (tuple(bool sign, uint256 value))",
        "selector": "0xd5ecf7c5"
    },
    "0xdeec053d": {
        "type": "function",
        "signature": "function getMarketCachedIndex(uint256 marketId) view returns (tuple(uint96 borrow, uint96 supply, uint32 lastUpdate))",
        "selector": "0xdeec053d"
    },
    "0xe51bfcb4": {
        "type": "function",
        "signature": "function getAccountStatus(tuple(address owner, uint256 number) account) view returns (uint8)",
        "selector": "0xe51bfcb4"
    },
    "0xe5520228": {
        "type": "function",
        "signature": "function getEarningsRate() view returns (tuple(uint256 value))",
        "selector": "0xe5520228"
    },
    "0xe8e72f75": {
        "type": "function",
        "signature": "function ownerSetPriceOracle(uint256 marketId, address priceOracle)",
        "selector": "0xe8e72f75"
    },
    "0xeb1c6e6b": {
        "type": "function",
        "signature": "function getRiskLimits() view returns (tuple(uint64 marginRatioMax, uint64 liquidationSpreadMax, uint64 earningsRateMax, uint64 marginPremiumMax, uint64 spreadPremiumMax, uint128 minBorrowedValueMax))",
        "selector": "0xeb1c6e6b"
    },
    "0xeb44fdd3": {
        "type": "function",
        "signature": "function getMarket(uint256 marketId) view returns (tuple(address token, tuple(uint128 borrow, uint128 supply) totalPar, tuple(uint96 borrow, uint96 supply, uint32 lastUpdate) index, address priceOracle, address interestSetter, tuple(uint256 value) marginPremium, tuple(uint256 value) spreadPremium, bool isClosing))",
        "selector": "0xeb44fdd3"
    },
    "0xef6957d0": {
        "type": "function",
        "signature": "function ownerSetIsClosing(uint256 marketId, bool isClosing)",
        "selector": "0xef6957d0"
    },
    "0xf2901ae2": {
        "type": "function",
        "signature": "function ownerSetGlobalOperator(address operator, bool approved)",
        "selector": "0xf2901ae2"
    },
    "0xf9416052": {
        "type": "function",
        "signature": "function getAdjustedAccountValues(tuple(address owner, uint256 number) account) view returns (tuple(uint256 value), tuple(uint256 value))",
        "selector": "0xf9416052"
    },
    "0xfd04b606": {
        "type": "function",
        "signature": "function getMarketMarginPremium(uint256 marketId) view returns (tuple(uint256 value))",
        "selector": "0xfd04b606"
    },
    "0xfd47eda6": {
        "type": "function",
        "signature": "function getMarketInterestRate(uint256 marketId) view returns (tuple(uint256 value))",
        "selector": "0xfd47eda6"
    },
    "0x9de66604": {
        "type": "function",
        "signature": "function erc20old() view returns (bool)",
        "selector": "0x9de66604"
    },
    "0xd9ee369a": {
        "type": "function",
        "signature": "function withdrawDifferentToken(address _differentToken, bool _erc20old) returns (bool)",
        "selector": "0xd9ee369a"
    },
    "0x972fdd26": {
        "type": "function",
        "signature": "function getFunctionImplementation(bytes4 selector) view returns (address impl)",
        "selector": "0x972fdd26"
    },
    "0x15dacbea": {
        "type": "function",
        "signature": "function transferFrom(address token, address from, address to, uint256 amount)",
        "selector": "0x15dacbea"
    },
    "0x06df453e": {
        "type": "function",
        "signature": "function approveDelegate(address delegate)",
        "selector": "0x06df453e"
    },
    "0x0c511d11": {
        "type": "function",
        "signature": "function isOrderCancelled(bytes32 orderHash) view returns (bool isCancelled)",
        "selector": "0x0c511d11"
    },
    "0x0f8eeeb0": {
        "type": "function",
        "signature": "function isAccountLiquidatable(address user, uint16 marketID) view returns (bool isLiquidatable)",
        "selector": "0x0f8eeeb0"
    },
    "0x101424d9": {
        "type": "function",
        "signature": "function getPoolCashableAmount(address asset) view returns (uint256 cashableAmount)",
        "selector": "0x101424d9"
    },
    "0x13a30013": {
        "type": "function",
        "signature": "function getMarket(uint16 marketID) view returns (tuple(address baseAsset, address quoteAsset, uint256 liquidateRate, uint256 withdrawRate, uint256 auctionRatioStart, uint256 auctionRatioPerBlock, bool borrowEnable) market)",
        "selector": "0x13a30013"
    },
    "0x168ba56c": {
        "type": "function",
        "signature": "function liquidateAccount(address user, uint16 marketID) returns (bool hasAuction, uint32 auctionID)",
        "selector": "0x168ba56c"
    },
    "0x1a8cd123": {
        "type": "function",
        "signature": "function getMarketTransferableAmount(uint16 marketID, address asset, address user) view returns (uint256 amount)",
        "selector": "0x1a8cd123"
    },
    "0x21028767": {
        "type": "function",
        "signature": "function updateMarket(uint16 marketID, uint256 newAuctionRatioStart, uint256 newAuctionRatioPerBlock, uint256 newLiquidateRate, uint256 newWithdrawRate)",
        "selector": "0x21028767"
    },
    "0x2a2b1240": {
        "type": "function",
        "signature": "function fillAuctionWithAmount(uint32 auctionID, uint256 amount)",
        "selector": "0x2a2b1240"
    },
    "0x2d6a6025": {
        "type": "function",
        "signature": "function getAuctionDetails(uint32 auctionID) view returns (tuple(address borrower, uint16 marketID, address debtAsset, address collateralAsset, uint256 leftDebtAmount, uint256 leftCollateralAmount, uint256 ratio, uint256 price, bool finished) details)",
        "selector": "0x2d6a6025"
    },
    "0x30b8b2c6": {
        "type": "function",
        "signature": "function getAsset(address assetAddress) view returns (tuple(address lendingPoolToken, address priceOracle, address interestModel) asset)",
        "selector": "0x30b8b2c6"
    },
    "0x316e5b1e": {
        "type": "function",
        "signature": "function getAmountSupplied(address asset, address user) view returns (uint256 amount)",
        "selector": "0x316e5b1e"
    },
    "0x325b7b03": {
        "type": "function",
        "signature": "function getHydroTokenAddress() view returns (address hydroTokenAddress)",
        "selector": "0x325b7b03"
    },
    "0x3560c5cd": {
        "type": "function",
        "signature": "function exitIncentiveSystem()",
        "selector": "0x3560c5cd"
    },
    "0x3b481b0a": {
        "type": "function",
        "signature": "function createAsset(address asset, address oracleAddress, address interestModelAddress, string poolTokenName, string poolTokenSymbol, uint8 poolTokenDecimals)",
        "selector": "0x3b481b0a"
    },
    "0x3e5893be": {
        "type": "function",
        "signature": "function canMatchOrdersFrom(address relayer) view returns (bool canMatch)",
        "selector": "0x3e5893be"
    },
    "0x43239e9b": {
        "type": "function",
        "signature": "function getInterestRates(address asset, uint256 extraBorrowAmount) view returns (uint256 borrowInterestRate, uint256 supplyInterestRate)",
        "selector": "0x43239e9b"
    },
    "0x4376abf1": {
        "type": "function",
        "signature": "function getDiscountedRate(address user) view returns (uint256 rate)",
        "selector": "0x4376abf1"
    },
    "0x53bab42e": {
        "type": "function",
        "signature": "function getAccountDetails(address user, uint16 marketID) view returns (tuple(bool liquidatable, uint8 status, uint256 debtsTotalUSDValue, uint256 balancesTotalUSDValue) details)",
        "selector": "0x53bab42e"
    },
    "0x55559a86": {
        "type": "function",
        "signature": "function getOrderFilledAmount(bytes32 orderHash) view returns (uint256 amount)",
        "selector": "0x55559a86"
    },
    "0x5be53e74": {
        "type": "function",
        "signature": "function getCurrentAuctions() view returns (uint32[])",
        "selector": "0x5be53e74"
    },
    "0x5dae042d": {
        "type": "function",
        "signature": "function getAssetOraclePrice(address assetAddress) view returns (uint256 price)",
        "selector": "0x5dae042d"
    },
    "0x637b93ed": {
        "type": "function",
        "signature": "function getInsuranceBalance(address asset) view returns (uint256 amount)",
        "selector": "0x637b93ed"
    },
    "0x68da10ae": {
        "type": "function",
        "signature": "function getTotalSupply(address asset) view returns (uint256 amount)",
        "selector": "0x68da10ae"
    },
    "0x762a4862": {
        "type": "function",
        "signature": "function updateAsset(address asset, address oracleAddress, address interestModelAddress)",
        "selector": "0x762a4862"
    },
    "0x7e6ef7fc": {
        "type": "function",
        "signature": "function isValidSignature(bytes32 hash, address signerAddress, tuple(bytes32 config, bytes32 r, bytes32 s) signature) pure returns (bool isValid)",
        "selector": "0x7e6ef7fc"
    },
    "0x8059cf3b": {
        "type": "function",
        "signature": "function batch(tuple(uint8 actionType, bytes encodedParams)[] actions) payable",
        "selector": "0x8059cf3b"
    },
    "0x8538d14e": {
        "type": "function",
        "signature": "function getTotalBorrow(address asset) view returns (uint256 amount)",
        "selector": "0x8538d14e"
    },
    "0x86e4d973": {
        "type": "function",
        "signature": "function createMarket(tuple(address baseAsset, address quoteAsset, uint256 liquidateRate, uint256 withdrawRate, uint256 auctionRatioStart, uint256 auctionRatioPerBlock, bool borrowEnable) market)",
        "selector": "0x86e4d973"
    },
    "0x8ea17c7b": {
        "type": "function",
        "signature": "function getAmountBorrowed(address asset, address user, uint16 marketID) view returns (uint256 amount)",
        "selector": "0x8ea17c7b"
    },
    "0x929066f5": {
        "type": "function",
        "signature": "function isParticipant(address relayer) view returns (bool result)",
        "selector": "0x929066f5"
    },
    "0x9c61a3dd": {
        "type": "function",
        "signature": "function getAllMarketsCount() view returns (uint256 count)",
        "selector": "0x9c61a3dd"
    },
    "0x9f0bf0a7": {
        "type": "function",
        "signature": "function matchOrders(tuple(tuple(address trader, uint256 baseAssetAmount, uint256 quoteAssetAmount, uint256 gasTokenAmount, bytes32 data, tuple(bytes32 config, bytes32 r, bytes32 s) signature) takerOrderParam, tuple(address trader, uint256 baseAssetAmount, uint256 quoteAssetAmount, uint256 gasTokenAmount, bytes32 data, tuple(bytes32 config, bytes32 r, bytes32 s) signature)[] makerOrderParams, uint256[] baseAssetFilledAmounts, tuple(address baseAsset, address quoteAsset, address relayer) orderAddressSet) params)",
        "selector": "0x9f0bf0a7"
    },
    "0xa6fc9191": {
        "type": "function",
        "signature": "function updateAuctionInitiatorRewardRatio(uint256 newInitiatorRewardRatio)",
        "selector": "0xa6fc9191"
    },
    "0xb31610db": {
        "type": "function",
        "signature": "function getIndex(address asset) view returns (uint256 supplyIndex, uint256 borrowIndex)",
        "selector": "0xb31610db"
    },
    "0xb6b3618e": {
        "type": "function",
        "signature": "function cancelOrder(tuple(address trader, address relayer, address baseAsset, address quoteAsset, uint256 baseAssetAmount, uint256 quoteAssetAmount, uint256 gasTokenAmount, bytes32 data) order)",
        "selector": "0xb6b3618e"
    },
    "0xb875bdf1": {
        "type": "function",
        "signature": "function joinIncentiveSystem()",
        "selector": "0xb875bdf1"
    },
    "0xbb6d5838": {
        "type": "function",
        "signature": "function updateInsuranceRatio(uint256 newInsuranceRatio)",
        "selector": "0xbb6d5838"
    },
    "0xc747fcc0": {
        "type": "function",
        "signature": "function updateDiscountConfig(bytes32 newConfig)",
        "selector": "0xc747fcc0"
    },
    "0xddf1f0f4": {
        "type": "function",
        "signature": "function setMarketBorrowUsability(uint16 marketID, bool usability)",
        "selector": "0xddf1f0f4"
    },
    "0xe45c1879": {
        "type": "function",
        "signature": "function getAuctionsCount() view returns (uint32 count)",
        "selector": "0xe45c1879"
    },
    "0xee684955": {
        "type": "function",
        "signature": "function marketBalanceOf(uint16 marketID, address asset, address user) view returns (uint256 balance)",
        "selector": "0xee684955"
    },
    "0xf7888aec": {
        "type": "function",
        "signature": "function balanceOf(address token, address user) view returns (uint256)",
        "selector": "0xf7888aec"
    },
    "0xfa352c00": {
        "type": "function",
        "signature": "function revokeDelegate(address delegate)",
        "selector": "0xfa352c00"
    },
    "0xc7d26c86": {
        "type": "function",
        "signature": "function provideDelegateOrder(tuple(uint256 nonce, uint256 expiry, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) signer, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) sender, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) affiliate, tuple(address signatory, address validator, bytes1 version, uint8 v, bytes32 r, bytes32 s) signature) order, address delegate) payable",
        "selector": "0xc7d26c86"
    },
    "0x67641c2f": {
        "type": "function",
        "signature": "function swap(tuple(uint256 nonce, uint256 expiry, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) signer, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) sender, tuple(bytes4 kind, address wallet, address token, uint256 amount, uint256 id) affiliate, tuple(address signatory, address validator, bytes1 version, uint8 v, bytes32 r, bytes32 s) signature) order)",
        "selector": "0x67641c2f"
    },
    "0x8ea83031": {
        "type": "function",
        "signature": "function swapContract() view returns (address)",
        "selector": "0x8ea83031"
    },
    "0x4780eac1": {
        "type": "function",
        "signature": "function wethContract() view returns (address)",
        "selector": "0x4780eac1"
    },
    "0x0f15f4c0": {
        "type": "function",
        "signature": "function activate()",
        "selector": "0x0f15f4c0"
    },
    "0xb040785a": {
        "type": "function",
        "signature": "function availableToBorrowETH() view returns (uint256)",
        "selector": "0xb040785a"
    },
    "0x929c8849": {
        "type": "function",
        "signature": "function availableToBorrowReserve() view returns (uint256)",
        "selector": "0x929c8849"
    },
    "0xa75ac608": {
        "type": "function",
        "signature": "function claimInsurance()",
        "selector": "0xa75ac608"
    },
    "0xf77c4791": {
        "type": "function",
        "signature": "function controller() view returns (address)",
        "selector": "0xf77c4791"
    },
    "0xa06d083c": {
        "type": "function",
        "signature": "function credit() view returns (uint256)",
        "selector": "0xa06d083c"
    },
    "0x0dca59c1": {
        "type": "function",
        "signature": "function debt() view returns (uint256)",
        "selector": "0x0dca59c1"
    },
    "0x2851e2e0": {
        "type": "function",
        "signature": "function debtShare(address _lp) view returns (uint256)",
        "selector": "0x2851e2e0"
    },
    "0xde5f6268": {
        "type": "function",
        "signature": "function depositAll()",
        "selector": "0xde5f6268"
    },
    "0xd389800f": {
        "type": "function",
        "signature": "function earn()",
        "selector": "0xd389800f"
    },
    "0x9f287e16": {
        "type": "function",
        "signature": "function getAaveOracle() view returns (address)",
        "selector": "0x9f287e16"
    },
    "0xf0722322": {
        "type": "function",
        "signature": "function getReservePrice() view returns (uint256)",
        "selector": "0xf0722322"
    },
    "0x11dddca4": {
        "type": "function",
        "signature": "function getReservePriceETH(address reserve) view returns (uint256)",
        "selector": "0x11dddca4"
    },
    "0x468f02d2": {
        "type": "function",
        "signature": "function getUnderlyingPrice() view returns (uint256)",
        "selector": "0x468f02d2"
    },
    "0xdd90a791": {
        "type": "function",
        "signature": "function getUnderlyingPriceETH(uint256 _amount) view returns (uint256)",
        "selector": "0xdd90a791"
    },
    "0x5aa6e675": {
        "type": "function",
        "signature": "function governance() view returns (address)",
        "selector": "0x5aa6e675"
    },
    "0x018ee9b7": {
        "type": "function",
        "signature": "function harvest(address reserve, uint256 amount)",
        "selector": "0x018ee9b7"
    },
    "0x22841f01": {
        "type": "function",
        "signature": "function healthFactor() view returns (uint256)",
        "selector": "0x22841f01"
    },
    "0x89cf3204": {
        "type": "function",
        "signature": "function insurance() view returns (uint256)",
        "selector": "0x89cf3204"
    },
    "0xcf309012": {
        "type": "function",
        "signature": "function locked() view returns (bool)",
        "selector": "0xcf309012"
    },
    "0x6fb49d73": {
        "type": "function",
        "signature": "function ltv() view returns (uint256)",
        "selector": "0x6fb49d73"
    },
    "0x6ac5db19": {
        "type": "function",
        "signature": "function max() view returns (uint256)",
        "selector": "0x6ac5db19"
    },
    "0x62f5548d": {
        "type": "function",
        "signature": "function maxSafeETH() view returns (uint256 maxBorrowsETH, uint256 totalBorrowsETH, uint256 availableBorrowsETH)",
        "selector": "0x62f5548d"
    },
    "0x27afd028": {
        "type": "function",
        "signature": "function maxWithdrawal(address account) view returns (uint256)",
        "selector": "0x27afd028"
    },
    "0x6ad4e251": {
        "type": "function",
        "signature": "function over(uint256 _amount) view returns (uint256)",
        "selector": "0x6ad4e251"
    },
    "0x7eaef50c": {
        "type": "function",
        "signature": "function over() view returns (uint256)",
        "selector": "0x7eaef50c"
    },
    "0x22867d78": {
        "type": "function",
        "signature": "function repay(address reserve, uint256 amount)",
        "selector": "0x22867d78"
    },
    "0xfa3ae6dc": {
        "type": "function",
        "signature": "function repayAll()",
        "selector": "0xfa3ae6dc"
    },
    "0xcd3293de": {
        "type": "function",
        "signature": "function reserve() view returns (address)",
        "selector": "0xcd3293de"
    },
    "0x7fd42617": {
        "type": "function",
        "signature": "function safeWithdraw()",
        "selector": "0x7fd42617"
    },
    "0x92eefe9b": {
        "type": "function",
        "signature": "function setController(address _controller)",
        "selector": "0x92eefe9b"
    },
    "0x31111708": {
        "type": "function",
        "signature": "function setHealthFactor(uint256 _hf)",
        "selector": "0x31111708"
    },
    "0x1b93e5b0": {
        "type": "function",
        "signature": "function shouldBorrow() view returns (bool)",
        "selector": "0x1b93e5b0"
    },
    "0xae2c1d5f": {
        "type": "function",
        "signature": "function shouldRebalance() view returns (bool)",
        "selector": "0xae2c1d5f"
    },
    "0x853828b6": {
        "type": "function",
        "signature": "function withdrawAll()",
        "selector": "0x853828b6"
    },
    "0x010f3237": {
        "type": "function",
        "signature": "function exitExcessPie() returns (bool)",
        "selector": "0x010f3237"
    },
    "0x207e6467": {
        "type": "function",
        "signature": "function pieBalances(address) view returns (uint256)",
        "selector": "0x207e6467"
    },
    "0x20eb1342": {
        "type": "function",
        "signature": "function withdrawVatBalance(uint256 _rad) returns (bool)",
        "selector": "0x20eb1342"
    },
    "0x29731b0e": {
        "type": "function",
        "signature": "function totalPie() view returns (uint256)",
        "selector": "0x29731b0e"
    },
    "0x4c255c97": {
        "type": "function",
        "signature": "function MAX_PERCENTAGE() view returns (uint256)",
        "selector": "0x4c255c97"
    },
    "0x5b56d6f5": {
        "type": "function",
        "signature": "function setInterestFee(uint256 _interestFee) returns (bool)",
        "selector": "0x5b56d6f5"
    },
    "0xa75df498": {
        "type": "function",
        "signature": "function interestFee() view returns (uint256)",
        "selector": "0xa75df498"
    },
    "0xcb13cddb": {
        "type": "function",
        "signature": "function deposited(address) view returns (uint256)",
        "selector": "0xcb13cddb"
    },
    "0x0674763c": {
        "type": "function",
        "signature": "function assert(bool assertion)",
        "selector": "0x0674763c"
    },
    "0x13af4035": {
        "type": "function",
        "signature": "function setOwner(address owner_)",
        "selector": "0x13af4035"
    },
    "0x2295115b": {
        "type": "function",
        "signature": "function adminWithdraw(address token, uint256 amount, address user, uint256 nonce, uint8 v, bytes32 r, bytes32 s, uint256 feeWithdrawal) returns (bool success)",
        "selector": "0x2295115b"
    },
    "0x254dcfe2": {
        "type": "function",
        "signature": "function lastActiveTransaction(address) view returns (uint256)",
        "selector": "0x254dcfe2"
    },
    "0x3823d66c": {
        "type": "function",
        "signature": "function withdrawn(bytes32) view returns (bool)",
        "selector": "0x3823d66c"
    },
    "0x429b62e5": {
        "type": "function",
        "signature": "function admins(address) view returns (bool)",
        "selector": "0x429b62e5"
    },
    "0x4b0bddd2": {
        "type": "function",
        "signature": "function setAdmin(address admin, bool isAdmin)",
        "selector": "0x4b0bddd2"
    },
    "0x508493bc": {
        "type": "function",
        "signature": "function tokens(address, address) view returns (uint256)",
        "selector": "0x508493bc"
    },
    "0x65e17c9d": {
        "type": "function",
        "signature": "function feeAccount() view returns (address)",
        "selector": "0x65e17c9d"
    },
    "0x83dbb27b": {
        "type": "function",
        "signature": "function invalidOrder(address) view returns (uint256)",
        "selector": "0x83dbb27b"
    },
    "0x893d20e8": {
        "type": "function",
        "signature": "function getOwner() view returns (address)",
        "selector": "0x893d20e8"
    },
    "0xa293d1e8": {
        "type": "function",
        "signature": "function safeSub(uint256 a, uint256 b) returns (uint256)",
        "selector": "0xa293d1e8"
    },
    "0xb12de559": {
        "type": "function",
        "signature": "function invalidateOrdersBefore(address user, uint256 nonce)",
        "selector": "0xb12de559"
    },
    "0xd05c78da": {
        "type": "function",
        "signature": "function safeMul(uint256 a, uint256 b) returns (uint256)",
        "selector": "0xd05c78da"
    },
    "0xd0e30db0": {
        "type": "function",
        "signature": "function deposit() payable",
        "selector": "0xd0e30db0"
    },
    "0xd5813323": {
        "type": "function",
        "signature": "function traded(bytes32) view returns (bool)",
        "selector": "0xd5813323"
    },
    "0xdd93c74a": {
        "type": "function",
        "signature": "function setInactivityReleasePeriod(uint256 expiry) returns (bool success)",
        "selector": "0xdd93c74a"
    },
    "0xe6cb9013": {
        "type": "function",
        "signature": "function safeAdd(uint256 a, uint256 b) returns (uint256)",
        "selector": "0xe6cb9013"
    },
    "0xef343588": {
        "type": "function",
        "signature": "function trade(uint256[8] tradeValues, address[4] tradeAddresses, uint8[2] v, bytes32[4] rs) returns (bool success)",
        "selector": "0xef343588"
    },
    "0xf31174ee": {
        "type": "function",
        "signature": "function inactivityReleasePeriod() view returns (uint256)",
        "selector": "0xf31174ee"
    },
    "0xf7213db6": {
        "type": "function",
        "signature": "function orderFills(bytes32) view returns (uint256)",
        "selector": "0xf7213db6"
    },
    "0xbb7b8b80": {
        "type": "function",
        "signature": "function get_virtual_price() view returns (uint256)",
        "selector": "0xbb7b8b80"
    },
    "0x0b4c7e4d": {
        "type": "function",
        "signature": "function add_liquidity(uint256[2] amounts, uint256 min_mint_amount) payable returns (uint256)",
        "selector": "0x0b4c7e4d"
    },
    "0x5e0d443f": {
        "type": "function",
        "signature": "function get_dy(int128 i, int128 j, uint256 dx) view returns (uint256)",
        "selector": "0x5e0d443f"
    },
    "0x07211ef7": {
        "type": "function",
        "signature": "function get_dy_underlying(int128 i, int128 j, uint256 dx) view returns (uint256 out)",
        "selector": "0x07211ef7"
    },
    "0x17f1bdf0": {
        "type": "function",
        "signature": "function exchange(int128 i, int128 j, uint256 dx, uint256 min_dy, uint256 deadline)",
        "selector": "0x17f1bdf0"
    },
    "0x882ff7fc": {
        "type": "function",
        "signature": "function exchange_underlying(int128 i, int128 j, uint256 dx, uint256 min_dy, uint256 deadline)",
        "selector": "0x882ff7fc"
    },
    "0x59639fa9": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _amount, uint256 deadline, uint256[2] min_amounts)",
        "selector": "0x59639fa9"
    },
    "0xe3103273": {
        "type": "function",
        "signature": "function remove_liquidity_imbalance(uint256[2] _amounts, uint256 _max_burn_amount) returns (uint256)",
        "selector": "0xe3103273"
    },
    "0xe1ceefda": {
        "type": "function",
        "signature": "function commit_new_parameters(int128 amplification, int128 new_fee, int128 new_admin_fee)",
        "selector": "0xe1ceefda"
    },
    "0x2a7dd7cd": {
        "type": "function",
        "signature": "function apply_new_parameters()",
        "selector": "0x2a7dd7cd"
    },
    "0x226840fb": {
        "type": "function",
        "signature": "function revert_new_parameters()",
        "selector": "0x226840fb"
    },
    "0x6b441a40": {
        "type": "function",
        "signature": "function commit_transfer_ownership(address _owner)",
        "selector": "0x6b441a40"
    },
    "0x6a1c05ae": {
        "type": "function",
        "signature": "function apply_transfer_ownership()",
        "selector": "0x6a1c05ae"
    },
    "0x86fbf193": {
        "type": "function",
        "signature": "function revert_transfer_ownership()",
        "selector": "0x86fbf193"
    },
    "0x30c54085": {
        "type": "function",
        "signature": "function withdraw_admin_fees()",
        "selector": "0x30c54085"
    },
    "0xe3698853": {
        "type": "function",
        "signature": "function kill_me()",
        "selector": "0xe3698853"
    },
    "0x3046f972": {
        "type": "function",
        "signature": "function unkill_me()",
        "selector": "0x3046f972"
    },
    "0x23746eb8": {
        "type": "function",
        "signature": "function coins(int128 arg0) view returns (address out)",
        "selector": "0x23746eb8"
    },
    "0xb739953e": {
        "type": "function",
        "signature": "function underlying_coins(int128 arg0) view returns (address out)",
        "selector": "0xb739953e"
    },
    "0x065a80d8": {
        "type": "function",
        "signature": "function balances(int128 arg0) view returns (uint256 out)",
        "selector": "0x065a80d8"
    },
    "0xf446c1d0": {
        "type": "function",
        "signature": "function A() view returns (uint256)",
        "selector": "0xf446c1d0"
    },
    "0xddca3f43": {
        "type": "function",
        "signature": "function fee() view returns (uint256)",
        "selector": "0xddca3f43"
    },
    "0xfee3f7f9": {
        "type": "function",
        "signature": "function admin_fee() view returns (uint256)",
        "selector": "0xfee3f7f9"
    },
    "0x405e28f8": {
        "type": "function",
        "signature": "function admin_actions_deadline() view returns (uint256)",
        "selector": "0x405e28f8"
    },
    "0xe0a0b586": {
        "type": "function",
        "signature": "function transfer_ownership_deadline() view returns (uint256)",
        "selector": "0xe0a0b586"
    },
    "0xb4b577ad": {
        "type": "function",
        "signature": "function future_A() view returns (uint256)",
        "selector": "0xb4b577ad"
    },
    "0x58680d0b": {
        "type": "function",
        "signature": "function future_fee() view returns (uint256 out)",
        "selector": "0x58680d0b"
    },
    "0xe3824462": {
        "type": "function",
        "signature": "function future_admin_fee() view returns (uint256)",
        "selector": "0xe3824462"
    },
    "0x1ec0cdc1": {
        "type": "function",
        "signature": "function future_owner() view returns (address)",
        "selector": "0x1ec0cdc1"
    },
    "0xcf7a1d77": {
        "type": "function",
        "signature": "function initialize(address _logic, address _admin, bytes _data) payable",
        "selector": "0xcf7a1d77"
    },
    "0xd1f57894": {
        "type": "function",
        "signature": "function initialize(address _logic, bytes _data) payable",
        "selector": "0xd1f57894"
    },
    "0x48a0d754": {
        "type": "function",
        "signature": "function available() view returns (uint256)",
        "selector": "0x48a0d754"
    },
    "0xf8897945": {
        "type": "function",
        "signature": "function min() view returns (uint256)",
        "selector": "0xf8897945"
    },
    "0xab033ea9": {
        "type": "function",
        "signature": "function setGovernance(address _governance)",
        "selector": "0xab033ea9"
    },
    "0x45dc3dd8": {
        "type": "function",
        "signature": "function setMin(uint256 _min)",
        "selector": "0x45dc3dd8"
    },
    "0x024c7ec7": {
        "type": "function",
        "signature": "function restrictRegistryUpdate(bool _adminOnly)",
        "selector": "0x024c7ec7"
    },
    "0x02ef521e": {
        "type": "function",
        "signature": "function registerEtherToken(address _token, bool _register)",
        "selector": "0x02ef521e"
    },
    "0x046dc166": {
        "type": "function",
        "signature": "function setSignerAddress(address _signerAddress)",
        "selector": "0x046dc166"
    },
    "0x0c8496cc": {
        "type": "function",
        "signature": "function getReturnByPath(address[] _path, uint256 _amount) view returns (uint256, uint256)",
        "selector": "0x0c8496cc"
    },
    "0x1134269a": {
        "type": "function",
        "signature": "function convertForPrioritized(address[] _path, uint256 _amount, uint256 _minReturn, address _for, uint256 _block, uint256 _nonce, uint8 _v, bytes32 _r, bytes32 _s) payable returns (uint256)",
        "selector": "0x1134269a"
    },
    "0x2978c10e": {
        "type": "function",
        "signature": "function claimAndConvertFor2(address[] _path, uint256 _amount, uint256 _minReturn, address _for, address _affiliateAccount, uint256 _affiliateFee) returns (uint256)",
        "selector": "0x2978c10e"
    },
    "0x49d10b64": {
        "type": "function",
        "signature": "function updateRegistry()",
        "selector": "0x49d10b64"
    },
    "0x4de006cb": {
        "type": "function",
        "signature": "function convertForPrioritized4(address[] _path, uint256 _amount, uint256 _minReturn, address _for, uint256[] _signature, address _affiliateAccount, uint256 _affiliateFee) payable returns (uint256)",
        "selector": "0x4de006cb"
    },
    "0x569706eb": {
        "type": "function",
        "signature": "function convert2(address[] _path, uint256 _amount, uint256 _minReturn, address _affiliateAccount, uint256 _affiliateFee) payable returns (uint256)",
        "selector": "0x569706eb"
    },
    "0x5b7633d0": {
        "type": "function",
        "signature": "function signerAddress() view returns (address)",
        "selector": "0x5b7633d0"
    },
    "0x5d732ff2": {
        "type": "function",
        "signature": "function maxAffiliateFee() view returns (uint256)",
        "selector": "0x5d732ff2"
    },
    "0x5e35359e": {
        "type": "function",
        "signature": "function withdrawTokens(address _token, address _to, uint256 _amount)",
        "selector": "0x5e35359e"
    },
    "0x61cd756e": {
        "type": "function",
        "signature": "function prevRegistry() view returns (address)",
        "selector": "0x61cd756e"
    },
    "0x6896b999": {
        "type": "function",
        "signature": "function xConvertPrioritized(address[] _path, uint256 _amount, uint256 _minReturn, bytes32 _toBlockchain, bytes32 _to, uint256 _conversionId, uint256 _block, uint8 _v, bytes32 _r, bytes32 _s) payable returns (uint256)",
        "selector": "0x6896b999"
    },
    "0x6b08f2ef": {
        "type": "function",
        "signature": "function convertForPrioritized2(address[] _path, uint256 _amount, uint256 _minReturn, address _for, uint256 _block, uint8 _v, bytes32 _r, bytes32 _s) payable returns (uint256)",
        "selector": "0x6b08f2ef"
    },
    "0x79ba5097": {
        "type": "function",
        "signature": "function acceptOwnership()",
        "selector": "0x79ba5097"
    },
    "0x7b103999": {
        "type": "function",
        "signature": "function registry() view returns (address)",
        "selector": "0x7b103999"
    },
    "0x8077ccf7": {
        "type": "function",
        "signature": "function etherTokens(address) view returns (bool)",
        "selector": "0x8077ccf7"
    },
    "0x89e63a60": {
        "type": "function",
        "signature": "function conversionHashes(bytes32) view returns (bool)",
        "selector": "0x89e63a60"
    },
    "0x8dc56657": {
        "type": "function",
        "signature": "function xConvertPrioritized3(address[] _path, uint256 _amount, uint256 _minReturn, bytes32 _toBlockchain, bytes32 _to, uint256 _conversionId, uint256[] _signature, address _affiliateAccount, uint256 _affiliateFee) payable returns (uint256)",
        "selector": "0x8dc56657"
    },
    "0x92d1abb7": {
        "type": "function",
        "signature": "function CONVERTER_CONVERSION_WHITELIST() view returns (uint256)",
        "selector": "0x92d1abb7"
    },
    "0xab6214ce": {
        "type": "function",
        "signature": "function convertFor2(address[] _path, uint256 _amount, uint256 _minReturn, address _for, address _affiliateAccount, uint256 _affiliateFee) payable returns (uint256)",
        "selector": "0xab6214ce"
    },
    "0xb1e9932b": {
        "type": "function",
        "signature": "function claimAndConvertFor(address[] _path, uint256 _amount, uint256 _minReturn, address _for) returns (uint256)",
        "selector": "0xb1e9932b"
    },
    "0xb406d386": {
        "type": "function",
        "signature": "function convertForPrioritized3(address[] _path, uint256 _amount, uint256 _minReturn, address _for, uint256 _customVal, uint256 _block, uint8 _v, bytes32 _r, bytes32 _s) payable returns (uint256)",
        "selector": "0xb406d386"
    },
    "0xb4a176d3": {
        "type": "function",
        "signature": "function restoreRegistry()",
        "selector": "0xb4a176d3"
    },
    "0xc52173de": {
        "type": "function",
        "signature": "function xConvert(address[] _path, uint256 _amount, uint256 _minReturn, bytes32 _toBlockchain, bytes32 _to, uint256 _conversionId) payable returns (uint256)",
        "selector": "0xc52173de"
    },
    "0xc7ba24bc": {
        "type": "function",
        "signature": "function claimAndConvert(address[] _path, uint256 _amount, uint256 _minReturn) returns (uint256)",
        "selector": "0xc7ba24bc"
    },
    "0xc976a359": {
        "type": "function",
        "signature": "function adminOnly() view returns (bool)",
        "selector": "0xc976a359"
    },
    "0xc98fefed": {
        "type": "function",
        "signature": "function convertFor(address[] _path, uint256 _amount, uint256 _minReturn, address _for) payable returns (uint256)",
        "selector": "0xc98fefed"
    },
    "0xcb32564e": {
        "type": "function",
        "signature": "function xConvert2(address[] _path, uint256 _amount, uint256 _minReturn, bytes32 _toBlockchain, bytes32 _to, uint256 _conversionId, address _affiliateAccount, uint256 _affiliateFee) payable returns (uint256)",
        "selector": "0xcb32564e"
    },
    "0xce200963": {
        "type": "function",
        "signature": "function xConvertPrioritized2(address[] _path, uint256 _amount, uint256 _minReturn, bytes32 _toBlockchain, bytes32 _to, uint256 _conversionId, uint256[] _signature) payable returns (uint256)",
        "selector": "0xce200963"
    },
    "0xd4ee1d90": {
        "type": "function",
        "signature": "function newOwner() view returns (address)",
        "selector": "0xd4ee1d90"
    },
    "0xe57738e5": {
        "type": "function",
        "signature": "function claimAndConvert2(address[] _path, uint256 _amount, uint256 _minReturn, address _affiliateAccount, uint256 _affiliateFee) returns (uint256)",
        "selector": "0xe57738e5"
    },
    "0xf3898a97": {
        "type": "function",
        "signature": "function convert(address[] _path, uint256 _amount, uint256 _minReturn) payable returns (uint256)",
        "selector": "0xf3898a97"
    },
    "0xf3bc7d2a": {
        "type": "function",
        "signature": "function setMaxAffiliateFee(uint256 _maxAffiliateFee)",
        "selector": "0xf3bc7d2a"
    },
    "0x8743ad58": {
        "type": "function",
        "signature": "function batchSwapExactIn(tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[] swaps, address tokenIn, address tokenOut, uint256 totalAmountIn, uint256 minTotalAmountOut) payable returns (uint256 totalAmountOut)",
        "selector": "0x8743ad58"
    },
    "0x2db58134": {
        "type": "function",
        "signature": "function batchSwapExactOut(tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[] swaps, address tokenIn, address tokenOut, uint256 maxTotalAmountIn) payable returns (uint256 totalAmountIn)",
        "selector": "0x2db58134"
    },
    "0xe2b39746": {
        "type": "function",
        "signature": "function multihopBatchSwapExactIn(tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[][] swapSequences, address tokenIn, address tokenOut, uint256 totalAmountIn, uint256 minTotalAmountOut) payable returns (uint256 totalAmountOut)",
        "selector": "0xe2b39746"
    },
    "0x86b2ecc4": {
        "type": "function",
        "signature": "function multihopBatchSwapExactOut(tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[][] swapSequences, address tokenIn, address tokenOut, uint256 maxTotalAmountIn) payable returns (uint256 totalAmountIn)",
        "selector": "0x86b2ecc4"
    },
    "0xa91ee0dc": {
        "type": "function",
        "signature": "function setRegistry(address _registry)",
        "selector": "0xa91ee0dc"
    },
    "0x21b0eb85": {
        "type": "function",
        "signature": "function smartSwapExactIn(address tokenIn, address tokenOut, uint256 totalAmountIn, uint256 minTotalAmountOut, uint256 nPools) payable returns (uint256 totalAmountOut)",
        "selector": "0x21b0eb85"
    },
    "0xb40f39ee": {
        "type": "function",
        "signature": "function smartSwapExactOut(address tokenIn, address tokenOut, uint256 totalAmountOut, uint256 maxTotalAmountIn, uint256 nPools) payable returns (uint256 totalAmountIn)",
        "selector": "0xb40f39ee"
    },
    "0x4b0f93fb": {
        "type": "function",
        "signature": "function viewSplitExactIn(address tokenIn, address tokenOut, uint256 swapAmount, uint256 nPools) view returns (tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[] swaps, uint256 totalOutput)",
        "selector": "0x4b0f93fb"
    },
    "0x368bb1fc": {
        "type": "function",
        "signature": "function viewSplitExactOut(address tokenIn, address tokenOut, uint256 swapAmount, uint256 nPools) view returns (tuple(address pool, address tokenIn, address tokenOut, uint256 swapAmount, uint256 limitReturnAmount, uint256 maxPrice)[] swaps, uint256 totalOutput)",
        "selector": "0x368bb1fc"
    },
    "0x98c4f76d": {
        "type": "function",
        "signature": "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
        "selector": "0x98c4f76d"
    },
    "0x4de8c6e6": {
        "type": "function",
        "signature": "function TIME_SLOT_SIZE() view returns (uint256)",
        "selector": "0x4de8c6e6"
    },
    "0x5325937f": {
        "type": "function",
        "signature": "function addBonder(address bonder)",
        "selector": "0x5325937f"
    },
    "0x8d8798bf": {
        "type": "function",
        "signature": "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
        "selector": "0x8d8798bf"
    },
    "0x23c452cd": {
        "type": "function",
        "signature": "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
        "selector": "0x23c452cd"
    },
    "0xfc110b67": {
        "type": "function",
        "signature": "function chainBalance(uint256) view returns (uint256)",
        "selector": "0xfc110b67"
    },
    "0xf3f480d9": {
        "type": "function",
        "signature": "function challengePeriod() view returns (uint256)",
        "selector": "0xf3f480d9"
    },
    "0x767631d5": {
        "type": "function",
        "signature": "function challengeResolutionPeriod() view returns (uint256)",
        "selector": "0x767631d5"
    },
    "0x1bbe15ea": {
        "type": "function",
        "signature": "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
        "selector": "0x1bbe15ea"
    },
    "0xef6ebe5e": {
        "type": "function",
        "signature": "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
        "selector": "0xef6ebe5e"
    },
    "0xa35962f3": {
        "type": "function",
        "signature": "function crossDomainMessengerWrappers(uint256) view returns (address)",
        "selector": "0xa35962f3"
    },
    "0xe19be150": {
        "type": "function",
        "signature": "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
        "selector": "0xe19be150"
    },
    "0x302830ab": {
        "type": "function",
        "signature": "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
        "selector": "0x302830ab"
    },
    "0x3408e470": {
        "type": "function",
        "signature": "function getChainId() view returns (uint256 chainId)",
        "selector": "0x3408e470"
    },
    "0xa239f5ee": {
        "type": "function",
        "signature": "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
        "selector": "0xa239f5ee"
    },
    "0x57344e6f": {
        "type": "function",
        "signature": "function getCredit(address bonder) view returns (uint256)",
        "selector": "0x57344e6f"
    },
    "0xffa9286c": {
        "type": "function",
        "signature": "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
        "selector": "0xffa9286c"
    },
    "0xd5ef7551": {
        "type": "function",
        "signature": "function getIsBonder(address maybeBonder) view returns (bool)",
        "selector": "0xd5ef7551"
    },
    "0x13948c76": {
        "type": "function",
        "signature": "function getRawDebit(address bonder) view returns (uint256)",
        "selector": "0x13948c76"
    },
    "0x2b85dcc9": {
        "type": "function",
        "signature": "function getTimeSlot(uint256 time) pure returns (uint256)",
        "selector": "0x2b85dcc9"
    },
    "0xaf215f94": {
        "type": "function",
        "signature": "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
        "selector": "0xaf215f94"
    },
    "0xce803b4f": {
        "type": "function",
        "signature": "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
        "selector": "0xce803b4f"
    },
    "0x960a7afa": {
        "type": "function",
        "signature": "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
        "selector": "0x960a7afa"
    },
    "0xfa2a69a3": {
        "type": "function",
        "signature": "function isChainIdPaused(uint256) view returns (bool)",
        "selector": "0xfa2a69a3"
    },
    "0x3a7af631": {
        "type": "function",
        "signature": "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
        "selector": "0x3a7af631"
    },
    "0xb7a0bda6": {
        "type": "function",
        "signature": "function l1CanonicalToken() view returns (address)",
        "selector": "0xb7a0bda6"
    },
    "0x6cff06a7": {
        "type": "function",
        "signature": "function minTransferRootBondDelay() view returns (uint256)",
        "selector": "0x6cff06a7"
    },
    "0x04e6c2c0": {
        "type": "function",
        "signature": "function removeBonder(address bonder)",
        "selector": "0x04e6c2c0"
    },
    "0xcbd1642e": {
        "type": "function",
        "signature": "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
        "selector": "0xcbd1642e"
    },
    "0x81707b80": {
        "type": "function",
        "signature": "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
        "selector": "0x81707b80"
    },
    "0xdeace8f5": {
        "type": "function",
        "signature": "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
        "selector": "0xdeace8f5"
    },
    "0x14942024": {
        "type": "function",
        "signature": "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
        "selector": "0x14942024"
    },
    "0x5d475fdd": {
        "type": "function",
        "signature": "function setChallengePeriod(uint256 _challengePeriod)",
        "selector": "0x5d475fdd"
    },
    "0xeecd57e6": {
        "type": "function",
        "signature": "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
        "selector": "0xeecd57e6"
    },
    "0xd4448163": {
        "type": "function",
        "signature": "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
        "selector": "0xd4448163"
    },
    "0x39ada669": {
        "type": "function",
        "signature": "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
        "selector": "0x39ada669"
    },
    "0xc7525dd3": {
        "type": "function",
        "signature": "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
        "selector": "0xc7525dd3"
    },
    "0xb162717e": {
        "type": "function",
        "signature": "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
        "selector": "0xb162717e"
    },
    "0xadc9772e": {
        "type": "function",
        "signature": "function stake(address bonder, uint256 amount) payable",
        "selector": "0xadc9772e"
    },
    "0x7398d282": {
        "type": "function",
        "signature": "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
        "selector": "0x7398d282"
    },
    "0x5a7e1083": {
        "type": "function",
        "signature": "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
        "selector": "0x5a7e1083"
    },
    "0x3b8fea28": {
        "type": "function",
        "signature": "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
        "selector": "0x3b8fea28"
    },
    "0x2e17de78": {
        "type": "function",
        "signature": "function unstake(uint256 amount)",
        "selector": "0x2e17de78"
    },
    "0x0f7aadb7": {
        "type": "function",
        "signature": "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
        "selector": "0x0f7aadb7"
    },
    "0x025b22bc": {
        "type": "function",
        "signature": "function updateImplementation(address _newProxyTo)",
        "selector": "0x025b22bc"
    },
    "0x42fc47fb": {
        "type": "function",
        "signature": "function childChain() view returns (address)",
        "selector": "0x42fc47fb"
    },
    "0x4555d5c9": {
        "type": "function",
        "signature": "function proxyType() pure returns (uint256 proxyTypeId)",
        "selector": "0x4555d5c9"
    },
    "0x987ab9db": {
        "type": "function",
        "signature": "function rootChain() view returns (address)",
        "selector": "0x987ab9db"
    },
    "0xa69df4b5": {
        "type": "function",
        "signature": "function unlock()",
        "selector": "0xa69df4b5"
    },
    "0xb02c43d0": {
        "type": "function",
        "signature": "function deposits(uint256) view returns (bytes32 depositHash, uint256 createdAt)",
        "selector": "0xb02c43d0"
    },
    "0xcb10f94c": {
        "type": "function",
        "signature": "function stateSender() view returns (address)",
        "selector": "0xcb10f94c"
    },
    "0xe7af7ba1": {
        "type": "function",
        "signature": "function maxErc20Deposit() view returns (uint256)",
        "selector": "0xe7af7ba1"
    },
    "0xf83d08ba": {
        "type": "function",
        "signature": "function lock()",
        "selector": "0xf83d08ba"
    },
    "0x025313a2": {
        "type": "function",
        "signature": "function proxyOwner() view returns (address)",
        "selector": "0x025313a2"
    },
    "0xf1739cae": {
        "type": "function",
        "signature": "function transferProxyOwnership(address newOwner)",
        "selector": "0xf1739cae"
    },
    "0xd88ca2c8": {
        "type": "function",
        "signature": "function updateAndCall(address _newProxyTo, bytes data) payable",
        "selector": "0xd88ca2c8"
    },
    "0x53755b8f": {
        "type": "function",
        "signature": "function authorizeSender(address authorizedSender)",
        "selector": "0x53755b8f"
    },
    "0xbfe51c10": {
        "type": "function",
        "signature": "function authorizeSigner(address authorizedSigner)",
        "selector": "0xbfe51c10"
    },
    "0x2e340823": {
        "type": "function",
        "signature": "function cancel(uint256[] nonces)",
        "selector": "0x2e340823"
    },
    "0x3c641910": {
        "type": "function",
        "signature": "function cancelUpTo(uint256 minimumNonce)",
        "selector": "0x3c641910"
    },
    "0xab204282": {
        "type": "function",
        "signature": "function revokeSender(address authorizedSender)",
        "selector": "0xab204282"
    },
    "0xc34b44a0": {
        "type": "function",
        "signature": "function revokeSigner(address authorizedSigner)",
        "selector": "0xc34b44a0"
    },
    "0x4f94c536": {
        "type": "function",
        "signature": "function senderAuthorizations(address, address) view returns (bool)",
        "selector": "0x4f94c536"
    },
    "0x41ac49a3": {
        "type": "function",
        "signature": "function signerAuthorizations(address, address) view returns (bool)",
        "selector": "0x41ac49a3"
    },
    "0x5e68e11f": {
        "type": "function",
        "signature": "function signerMinimumNonce(address) view returns (uint256)",
        "selector": "0x5e68e11f"
    },
    "0xbfb96279": {
        "type": "function",
        "signature": "function signerNonceStatus(address, uint256) view returns (bytes1)",
        "selector": "0xbfb96279"
    },
    "0xcf701ff7": {
        "type": "function",
        "signature": "function calc_token_amount(uint256[4] amounts, bool deposit) view returns (uint256 out)",
        "selector": "0xcf701ff7"
    },
    "0x029b2f34": {
        "type": "function",
        "signature": "function add_liquidity(uint256[4] amounts, uint256 min_mint_amount)",
        "selector": "0x029b2f34"
    },
    "0x67df02ca": {
        "type": "function",
        "signature": "function get_dx(int128 i, int128 j, uint256 dy) view returns (uint256 out)",
        "selector": "0x67df02ca"
    },
    "0x0e71d1b9": {
        "type": "function",
        "signature": "function get_dx_underlying(int128 i, int128 j, uint256 dy) view returns (uint256 out)",
        "selector": "0x0e71d1b9"
    },
    "0x3df02124": {
        "type": "function",
        "signature": "function exchange(int128 i, int128 j, uint256 _dx, uint256 _min_dy) returns (uint256)",
        "selector": "0x3df02124"
    },
    "0xa6417ed6": {
        "type": "function",
        "signature": "function exchange_underlying(int128 i, int128 j, uint256 dx, uint256 min_dy)",
        "selector": "0xa6417ed6"
    },
    "0x7d49d875": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _amount, uint256[4] min_amounts)",
        "selector": "0x7d49d875"
    },
    "0x18a7bd76": {
        "type": "function",
        "signature": "function remove_liquidity_imbalance(uint256[4] amounts, uint256 max_burn_amount)",
        "selector": "0x18a7bd76"
    },
    "0xee11f5b6": {
        "type": "function",
        "signature": "function commit_new_parameters(uint256 amplification, uint256 new_fee, uint256 new_admin_fee)",
        "selector": "0xee11f5b6"
    },
    "0x9a8a0592": {
        "type": "function",
        "signature": "function chainId() view returns (uint256)",
        "selector": "0x9a8a0592"
    },
    "0x5285e058": {
        "type": "function",
        "signature": "function crossDomainAdmin() view returns (address)",
        "selector": "0x5285e058"
    },
    "0x49228978": {
        "type": "function",
        "signature": "function deposit(address recipient, address originToken, uint256 amount, uint256 destinationChainId, uint64 relayerFeePct, uint32 quoteTimestamp) payable",
        "selector": "0x49228978"
    },
    "0x57f6dcb8": {
        "type": "function",
        "signature": "function depositQuoteTimeBuffer() view returns (uint32)",
        "selector": "0x57f6dcb8"
    },
    "0x8a7860ce": {
        "type": "function",
        "signature": "function emergencyDeleteRootBundle(uint256 rootBundleId)",
        "selector": "0x8a7860ce"
    },
    "0x5249fef1": {
        "type": "function",
        "signature": "function enabledDepositRoutes(address, uint256) view returns (bool)",
        "selector": "0x5249fef1"
    },
    "0x1b3d5559": {
        "type": "function",
        "signature": "function executeRelayerRefundLeaf(uint32 rootBundleId, tuple(uint256 amountToReturn, uint256 chainId, uint256[] refundAmounts, uint32 leafId, address l2TokenAddress, address[] refundAddresses) relayerRefundLeaf, bytes32[] proof)",
        "selector": "0x1b3d5559"
    },
    "0xbe3576ee": {
        "type": "function",
        "signature": "function executeSlowRelayLeaf(address depositor, address recipient, address destinationToken, uint256 amount, uint256 originChainId, uint64 realizedLpFeePct, uint64 relayerFeePct, uint32 depositId, uint32 rootBundleId, bytes32[] proof)",
        "selector": "0xbe3576ee"
    },
    "0x89a153cc": {
        "type": "function",
        "signature": "function fillRelay(address depositor, address recipient, address destinationToken, uint256 amount, uint256 maxTokensToSend, uint256 repaymentChainId, uint256 originChainId, uint64 realizedLpFeePct, uint64 relayerFeePct, uint32 depositId)",
        "selector": "0x89a153cc"
    },
    "0xffc351a3": {
        "type": "function",
        "signature": "function fillRelayWithUpdatedFee(address depositor, address recipient, address destinationToken, uint256 amount, uint256 maxTokensToSend, uint256 repaymentChainId, uint256 originChainId, uint64 realizedLpFeePct, uint64 relayerFeePct, uint64 newRelayerFeePct, uint32 depositId, bytes depositorSignature)",
        "selector": "0xffc351a3"
    },
    "0x29cb924d": {
        "type": "function",
        "signature": "function getCurrentTime() view returns (uint256)",
        "selector": "0x29cb924d"
    },
    "0xe1904402": {
        "type": "function",
        "signature": "function hubPool() view returns (address)",
        "selector": "0xe1904402"
    },
    "0xac9650d8": {
        "type": "function",
        "signature": "function multicall(bytes[] data) payable returns (bytes[] results)",
        "selector": "0xac9650d8"
    },
    "0xa1244c67": {
        "type": "function",
        "signature": "function numberOfDeposits() view returns (uint32)",
        "selector": "0xa1244c67"
    },
    "0xf06850f6": {
        "type": "function",
        "signature": "function relayFills(bytes32) view returns (uint256)",
        "selector": "0xf06850f6"
    },
    "0x493a4f84": {
        "type": "function",
        "signature": "function relayRootBundle(bytes32 relayerRefundRoot, bytes32 slowRelayRoot)",
        "selector": "0x493a4f84"
    },
    "0xee2a53f8": {
        "type": "function",
        "signature": "function rootBundles(uint256) view returns (bytes32 slowRelayRoot, bytes32 relayerRefundRoot)",
        "selector": "0xee2a53f8"
    },
    "0xde7eba78": {
        "type": "function",
        "signature": "function setCrossDomainAdmin(address newCrossDomainAdmin)",
        "selector": "0xde7eba78"
    },
    "0x22f8e566": {
        "type": "function",
        "signature": "function setCurrentTime(uint256 time)",
        "selector": "0x22f8e566"
    },
    "0x2752042e": {
        "type": "function",
        "signature": "function setDepositQuoteTimeBuffer(uint32 newDepositQuoteTimeBuffer)",
        "selector": "0x2752042e"
    },
    "0x272751c7": {
        "type": "function",
        "signature": "function setEnableRoute(address originToken, uint256 destinationChainId, bool enabled)",
        "selector": "0x272751c7"
    },
    "0x1dfb2d02": {
        "type": "function",
        "signature": "function setHubPool(address newHubPool)",
        "selector": "0x1dfb2d02"
    },
    "0xe282d5b9": {
        "type": "function",
        "signature": "function speedUpDeposit(address depositor, uint64 newRelayerFeePct, uint32 depositId, bytes depositorSignature)",
        "selector": "0xe282d5b9"
    },
    "0x1c39c38d": {
        "type": "function",
        "signature": "function timerAddress() view returns (address)",
        "selector": "0x1c39c38d"
    },
    "0x17fcb39b": {
        "type": "function",
        "signature": "function wrappedNativeToken() view returns (address)",
        "selector": "0x17fcb39b"
    },
    "0x1249c58b": {
        "type": "function",
        "signature": "function mint() payable",
        "selector": "0x1249c58b"
    },
    "0x4e4d9fea": {
        "type": "function",
        "signature": "function repayBorrow() payable",
        "selector": "0x4e4d9fea"
    },
    "0xaae40a2a": {
        "type": "function",
        "signature": "function liquidateBorrow(address borrower, address cTokenCollateral) payable",
        "selector": "0xaae40a2a"
    },
    "0xe5974619": {
        "type": "function",
        "signature": "function repayBorrowBehalf(address borrower) payable",
        "selector": "0xe5974619"
    },
    "0x3ad06d16": {
        "type": "function",
        "signature": "function upgradeTo(uint256 version, address implementation)",
        "selector": "0x3ad06d16"
    },
    "0x6fde8202": {
        "type": "function",
        "signature": "function upgradeabilityOwner() view returns (address)",
        "selector": "0x6fde8202"
    },
    "0xa9c45fcb": {
        "type": "function",
        "signature": "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
        "selector": "0xa9c45fcb"
    },
    "0x9870d7fe": {
        "type": "function",
        "signature": "function addOperator(address newOperator)",
        "selector": "0x9870d7fe"
    },
    "0x9c1c2ee9": {
        "type": "function",
        "signature": "function erc1155safeTransferFrom(address token, address from, address to, uint256 id, uint256 value, bytes data)",
        "selector": "0x9c1c2ee9"
    },
    "0xf709b906": {
        "type": "function",
        "signature": "function erc721safeTransferFrom(address token, address from, address to, uint256 tokenId)",
        "selector": "0xf709b906"
    },
    "0x6d70f7ae": {
        "type": "function",
        "signature": "function isOperator(address account) view returns (bool)",
        "selector": "0x6d70f7ae"
    },
    "0xac8a584a": {
        "type": "function",
        "signature": "function removeOperator(address operator)",
        "selector": "0xac8a584a"
    },
    "0x3883e119": {
        "type": "function",
        "signature": "function calc_token_amount(uint256[3] amounts, bool deposit) view returns (uint256 out)",
        "selector": "0x3883e119"
    },
    "0x4515cef3": {
        "type": "function",
        "signature": "function add_liquidity(uint256[3] amounts, uint256 min_mint_amount)",
        "selector": "0x4515cef3"
    },
    "0xecb586a5": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _amount, uint256[3] min_amounts)",
        "selector": "0xecb586a5"
    },
    "0x9fdaea0c": {
        "type": "function",
        "signature": "function remove_liquidity_imbalance(uint256[3] amounts, uint256 max_burn_amount)",
        "selector": "0x9fdaea0c"
    },
    "0xad5c4648": {
        "type": "function",
        "signature": "function WETH() view returns (address)",
        "selector": "0xad5c4648"
    },
    "0x7fc82484": {
        "type": "function",
        "signature": "function buyAndRedeem(uint256 vaultId, uint256 amount, uint256[] specificIds, address[] path, address to) payable",
        "selector": "0x7fc82484"
    },
    "0x4447d888": {
        "type": "function",
        "signature": "function buyAndRedeemWETH(uint256 vaultId, uint256 amount, uint256[] specificIds, uint256 maxWethIn, address[] path, address to)",
        "selector": "0x4447d888"
    },
    "0x57e836dc": {
        "type": "function",
        "signature": "function buyAndSwap1155(uint256 vaultId, uint256[] idsIn, uint256[] amounts, uint256[] specificIds, address[] path, address to) payable",
        "selector": "0x57e836dc"
    },
    "0x42c4ccaa": {
        "type": "function",
        "signature": "function buyAndSwap1155WETH(uint256 vaultId, uint256[] idsIn, uint256[] amounts, uint256[] specificIds, uint256 maxWethIn, address[] path, address to) payable",
        "selector": "0x42c4ccaa"
    },
    "0x58fbdd0a": {
        "type": "function",
        "signature": "function buyAndSwap721(uint256 vaultId, uint256[] idsIn, uint256[] specificIds, address[] path, address to) payable",
        "selector": "0x58fbdd0a"
    },
    "0x5d8117a6": {
        "type": "function",
        "signature": "function buyAndSwap721WETH(uint256 vaultId, uint256[] idsIn, uint256[] specificIds, uint256 maxWethIn, address[] path, address to)",
        "selector": "0x5d8117a6"
    },
    "0x9bf1401c": {
        "type": "function",
        "signature": "function lpStaking() view returns (address)",
        "selector": "0x9bf1401c"
    },
    "0xab3a4121": {
        "type": "function",
        "signature": "function mintAndSell1155(uint256 vaultId, uint256[] ids, uint256[] amounts, uint256 minWethOut, address[] path, address to)",
        "selector": "0xab3a4121"
    },
    "0xa0271617": {
        "type": "function",
        "signature": "function mintAndSell1155WETH(uint256 vaultId, uint256[] ids, uint256[] amounts, uint256 minWethOut, address[] path, address to)",
        "selector": "0xa0271617"
    },
    "0x0956642b": {
        "type": "function",
        "signature": "function mintAndSell721(uint256 vaultId, uint256[] ids, uint256 minWethOut, address[] path, address to)",
        "selector": "0x0956642b"
    },
    "0x929bf3d3": {
        "type": "function",
        "signature": "function mintAndSell721WETH(uint256 vaultId, uint256[] ids, uint256 minWethOut, address[] path, address to)",
        "selector": "0x929bf3d3"
    },
    "0x5ee50f88": {
        "type": "function",
        "signature": "function nftxFactory() view returns (address)",
        "selector": "0x5ee50f88"
    },
    "0xbc197c81": {
        "type": "function",
        "signature": "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) pure returns (bytes4)",
        "selector": "0xbc197c81"
    },
    "0xf23a6e61": {
        "type": "function",
        "signature": "function onERC1155Received(address, address, uint256, uint256, bytes) pure returns (bytes4)",
        "selector": "0xf23a6e61"
    },
    "0x6d13582c": {
        "type": "function",
        "signature": "function sushiRouter() view returns (address)",
        "selector": "0x6d13582c"
    },
    "0x74a28f79": {
        "type": "function",
        "signature": "function batchExec(address[] tos, bytes[] datas) payable",
        "selector": "0x74a28f79"
    },
    "0x94da7864": {
        "type": "function",
        "signature": "function execs(address[] tos, bytes[] datas) payable",
        "selector": "0x94da7864"
    },
    "0xba52c1b5": {
        "type": "error",
        "signature": "error BAKCAlreadyPaired()",
        "selector": "0xba52c1b5"
    },
    "0xde72b61e": {
        "type": "error",
        "signature": "error BAKCNotOwnedOrPaired()",
        "selector": "0xde72b61e"
    },
    "0x5cd83192": {
        "type": "error",
        "signature": "error CallerNotOwner()",
        "selector": "0x5cd83192"
    },
    "0x50e75a80": {
        "type": "error",
        "signature": "error DepositMoreThanOneAPE()",
        "selector": "0x50e75a80"
    },
    "0x8b853e25": {
        "type": "error",
        "signature": "error EndNotWholeHour()",
        "selector": "0x8b853e25"
    },
    "0xf03ac374": {
        "type": "error",
        "signature": "error ExceededCapAmount()",
        "selector": "0xf03ac374"
    },
    "0x9acaefc7": {
        "type": "error",
        "signature": "error ExceededStakedAmount()",
        "selector": "0x9acaefc7"
    },
    "0x0afa7ee8": {
        "type": "error",
        "signature": "error InvalidPoolId()",
        "selector": "0x0afa7ee8"
    },
    "0xa3fdbb52": {
        "type": "error",
        "signature": "error MainTokenNotOwnedOrPaired()",
        "selector": "0xa3fdbb52"
    },
    "0x4a2f3865": {
        "type": "error",
        "signature": "error NeitherTokenInPairOwnedByCaller()",
        "selector": "0x4a2f3865"
    },
    "0x2c8348bb": {
        "type": "error",
        "signature": "error NotOwnerOfBAKC()",
        "selector": "0x2c8348bb"
    },
    "0x2b19ae75": {
        "type": "error",
        "signature": "error NotOwnerOfMain()",
        "selector": "0x2b19ae75"
    },
    "0xccc819da": {
        "type": "error",
        "signature": "error ProvidedTokensNotPaired()",
        "selector": "0xccc819da"
    },
    "0xe373a085": {
        "type": "error",
        "signature": "error SplitPairCantPartiallyWithdraw()",
        "selector": "0xe373a085"
    },
    "0xd67e3109": {
        "type": "error",
        "signature": "error StartMustBeGreaterThanEnd()",
        "selector": "0xd67e3109"
    },
    "0x9424dcd9": {
        "type": "error",
        "signature": "error StartMustEqualLastEnd()",
        "selector": "0x9424dcd9"
    },
    "0xf7985df1": {
        "type": "error",
        "signature": "error StartNotWholeHour()",
        "selector": "0xf7985df1"
    },
    "0x4614cb02": {
        "type": "error",
        "signature": "error UncommitWrongParameters()",
        "selector": "0x4614cb02"
    },
    "0xbb628f20": {
        "type": "function",
        "signature": "function addTimeRange(uint256 _poolId, uint256 _amount, uint256 _startTimestamp, uint256 _endTimeStamp, uint256 _capPerPosition)",
        "selector": "0xbb628f20"
    },
    "0x05ece226": {
        "type": "function",
        "signature": "function addressPosition(address) view returns (uint256 stakedAmount, int256 rewardsDebt)",
        "selector": "0x05ece226"
    },
    "0xac7ad9ba": {
        "type": "function",
        "signature": "function apeCoin() view returns (address)",
        "selector": "0xac7ad9ba"
    },
    "0xb4f95752": {
        "type": "function",
        "signature": "function bakcToMain(uint256, uint256) view returns (uint248 tokenId, bool isPaired)",
        "selector": "0xb4f95752"
    },
    "0x2ee2de66": {
        "type": "function",
        "signature": "function claimApeCoin(address _recipient)",
        "selector": "0x2ee2de66"
    },
    "0x07f5fa4a": {
        "type": "function",
        "signature": "function claimBAKC(tuple(uint128 mainTokenId, uint128 bakcTokenId)[] _baycPairs, tuple(uint128 mainTokenId, uint128 bakcTokenId)[] _maycPairs, address _recipient)",
        "selector": "0x07f5fa4a"
    },
    "0xb682e859": {
        "type": "function",
        "signature": "function claimBAYC(uint256[] _nfts, address _recipient)",
        "selector": "0xb682e859"
    },
    "0x57a26300": {
        "type": "function",
        "signature": "function claimMAYC(uint256[] _nfts, address _recipient)",
        "selector": "0x57a26300"
    },
    "0x8279e760": {
        "type": "function",
        "signature": "function claimSelfApeCoin()",
        "selector": "0x8279e760"
    },
    "0xe0347e4f": {
        "type": "function",
        "signature": "function claimSelfBAKC(tuple(uint128 mainTokenId, uint128 bakcTokenId)[] _baycPairs, tuple(uint128 mainTokenId, uint128 bakcTokenId)[] _maycPairs)",
        "selector": "0xe0347e4f"
    },
    "0x20a325d0": {
        "type": "function",
        "signature": "function claimSelfBAYC(uint256[] _nfts)",
        "selector": "0x20a325d0"
    },
    "0x381b4682": {
        "type": "function",
        "signature": "function claimSelfMAYC(uint256[] _nfts)",
        "selector": "0x381b4682"
    },
    "0xbd5023a9": {
        "type": "function",
        "signature": "function depositApeCoin(uint256 _amount, address _recipient)",
        "selector": "0xbd5023a9"
    },
    "0xd346cbd9": {
        "type": "function",
        "signature": "function depositBAKC(tuple(uint32 mainTokenId, uint32 bakcTokenId, uint184 amount)[] _baycPairs, tuple(uint32 mainTokenId, uint32 bakcTokenId, uint184 amount)[] _maycPairs)",
        "selector": "0xd346cbd9"
    },
    "0x46583a05": {
        "type": "function",
        "signature": "function depositBAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts)",
        "selector": "0x46583a05"
    },
    "0x8ecbffa7": {
        "type": "function",
        "signature": "function depositMAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts)",
        "selector": "0x8ecbffa7"
    },
    "0x9dcaafb4": {
        "type": "function",
        "signature": "function depositSelfApeCoin(uint256 _amount)",
        "selector": "0x9dcaafb4"
    },
    "0x04238994": {
        "type": "function",
        "signature": "function getAllStakes(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair)[])",
        "selector": "0x04238994"
    },
    "0xd9f11fb2": {
        "type": "function",
        "signature": "function getApeCoinStake(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair))",
        "selector": "0xd9f11fb2"
    },
    "0x00191b44": {
        "type": "function",
        "signature": "function getBakcStakes(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair)[])",
        "selector": "0x00191b44"
    },
    "0x9860037e": {
        "type": "function",
        "signature": "function getBaycStakes(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair)[])",
        "selector": "0x9860037e"
    },
    "0xf4c6f602": {
        "type": "function",
        "signature": "function getMaycStakes(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair)[])",
        "selector": "0xf4c6f602"
    },
    "0x770dade5": {
        "type": "function",
        "signature": "function getPoolsUI() view returns (tuple(uint256 poolId, uint256 stakedAmount, tuple(uint48 startTimestampHour, uint48 endTimestampHour, uint96 rewardsPerHour, uint96 capPerPosition) currentTimeRange), tuple(uint256 poolId, uint256 stakedAmount, tuple(uint48 startTimestampHour, uint48 endTimestampHour, uint96 rewardsPerHour, uint96 capPerPosition) currentTimeRange), tuple(uint256 poolId, uint256 stakedAmount, tuple(uint48 startTimestampHour, uint48 endTimestampHour, uint96 rewardsPerHour, uint96 capPerPosition) currentTimeRange), tuple(uint256 poolId, uint256 stakedAmount, tuple(uint48 startTimestampHour, uint48 endTimestampHour, uint96 rewardsPerHour, uint96 capPerPosition) currentTimeRange))",
        "selector": "0x770dade5"
    },
    "0x0ed368f1": {
        "type": "function",
        "signature": "function getSplitStakes(address _address) view returns (tuple(uint256 poolId, uint256 tokenId, uint256 deposited, uint256 unclaimed, uint256 rewards24hr, tuple(uint256 mainTokenId, uint256 mainTypePoolId) pair)[])",
        "selector": "0x0ed368f1"
    },
    "0x09e833c6": {
        "type": "function",
        "signature": "function getTimeRangeBy(uint256 _poolId, uint256 _index) view returns (tuple(uint48 startTimestampHour, uint48 endTimestampHour, uint96 rewardsPerHour, uint96 capPerPosition))",
        "selector": "0x09e833c6"
    },
    "0x304f88c0": {
        "type": "function",
        "signature": "function mainToBakc(uint256, uint256) view returns (uint248 tokenId, bool isPaired)",
        "selector": "0x304f88c0"
    },
    "0x0bb4d82a": {
        "type": "function",
        "signature": "function nftContracts(uint256) view returns (address)",
        "selector": "0x0bb4d82a"
    },
    "0x98ada4a2": {
        "type": "function",
        "signature": "function nftPosition(uint256, uint256) view returns (uint256 stakedAmount, int256 rewardsDebt)",
        "selector": "0x98ada4a2"
    },
    "0x2c018f91": {
        "type": "function",
        "signature": "function pendingRewards(uint256 _poolId, address _address, uint256 _tokenId) view returns (uint256)",
        "selector": "0x2c018f91"
    },
    "0xac4afa38": {
        "type": "function",
        "signature": "function pools(uint256) view returns (uint48 lastRewardedTimestampHour, uint16 lastRewardsRangeIndex, uint96 stakedAmount, uint96 accumulatedRewardsPerShare)",
        "selector": "0xac4afa38"
    },
    "0xd363dc17": {
        "type": "function",
        "signature": "function removeLastTimeRange(uint256 _poolId)",
        "selector": "0xd363dc17"
    },
    "0xd7464ee9": {
        "type": "function",
        "signature": "function rewardsBy(uint256 _poolId, uint256 _from, uint256 _to) view returns (uint256, uint256)",
        "selector": "0xd7464ee9"
    },
    "0xf5679189": {
        "type": "function",
        "signature": "function stakedTotal(address _address) view returns (uint256)",
        "selector": "0xf5679189"
    },
    "0x51eb05a6": {
        "type": "function",
        "signature": "function updatePool(uint256 _poolId)",
        "selector": "0x51eb05a6"
    },
    "0xe4e81847": {
        "type": "function",
        "signature": "function withdrawApeCoin(uint256 _amount, address _recipient)",
        "selector": "0xe4e81847"
    },
    "0x26fb2249": {
        "type": "function",
        "signature": "function withdrawBAKC(tuple(uint32 mainTokenId, uint32 bakcTokenId, uint184 amount, bool isUncommit)[] _baycPairs, tuple(uint32 mainTokenId, uint32 bakcTokenId, uint184 amount, bool isUncommit)[] _maycPairs)",
        "selector": "0x26fb2249"
    },
    "0xaceb3629": {
        "type": "function",
        "signature": "function withdrawBAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts, address _recipient)",
        "selector": "0xaceb3629"
    },
    "0xed23c906": {
        "type": "function",
        "signature": "function withdrawMAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts, address _recipient)",
        "selector": "0xed23c906"
    },
    "0x7f60d338": {
        "type": "function",
        "signature": "function withdrawSelfApeCoin(uint256 _amount)",
        "selector": "0x7f60d338"
    },
    "0xfe31446c": {
        "type": "function",
        "signature": "function withdrawSelfBAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts)",
        "selector": "0xfe31446c"
    },
    "0xc63389c3": {
        "type": "function",
        "signature": "function withdrawSelfMAYC(tuple(uint32 tokenId, uint224 amount)[] _nfts)",
        "selector": "0xc63389c3"
    },
    "0xcbd2ec65": {
        "type": "function",
        "signature": "function cancelAllOrdersForSender(uint256 minNonce)",
        "selector": "0xcbd2ec65"
    },
    "0x9e53a69a": {
        "type": "function",
        "signature": "function cancelMultipleMakerOrders(uint256[] orderNonces)",
        "selector": "0x9e53a69a"
    },
    "0x0f747d74": {
        "type": "function",
        "signature": "function currencyManager() view returns (address)",
        "selector": "0x0f747d74"
    },
    "0x483abb9f": {
        "type": "function",
        "signature": "function executionManager() view returns (address)",
        "selector": "0x483abb9f"
    },
    "0x31e27e27": {
        "type": "function",
        "signature": "function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) view returns (bool)",
        "selector": "0x31e27e27"
    },
    "0x38e29209": {
        "type": "function",
        "signature": "function matchAskWithTakerBid(tuple(bool isOrderAsk, address taker, uint256 price, uint256 tokenId, uint256 minPercentageToAsk, bytes params) takerBid, tuple(bool isOrderAsk, address signer, address collection, uint256 price, uint256 tokenId, uint256 amount, address strategy, address currency, uint256 nonce, uint256 startTime, uint256 endTime, uint256 minPercentageToAsk, bytes params, uint8 v, bytes32 r, bytes32 s) makerAsk)",
        "selector": "0x38e29209"
    },
    "0xb4e4b296": {
        "type": "function",
        "signature": "function matchAskWithTakerBidUsingETHAndWETH(tuple(bool isOrderAsk, address taker, uint256 price, uint256 tokenId, uint256 minPercentageToAsk, bytes params) takerBid, tuple(bool isOrderAsk, address signer, address collection, uint256 price, uint256 tokenId, uint256 amount, address strategy, address currency, uint256 nonce, uint256 startTime, uint256 endTime, uint256 minPercentageToAsk, bytes params, uint8 v, bytes32 r, bytes32 s) makerAsk) payable",
        "selector": "0xb4e4b296"
    },
    "0x3b6d032e": {
        "type": "function",
        "signature": "function matchBidWithTakerAsk(tuple(bool isOrderAsk, address taker, uint256 price, uint256 tokenId, uint256 minPercentageToAsk, bytes params) takerAsk, tuple(bool isOrderAsk, address signer, address collection, uint256 price, uint256 tokenId, uint256 amount, address strategy, address currency, uint256 nonce, uint256 startTime, uint256 endTime, uint256 minPercentageToAsk, bytes params, uint8 v, bytes32 r, bytes32 s) makerBid)",
        "selector": "0x3b6d032e"
    },
    "0x64df049e": {
        "type": "function",
        "signature": "function protocolFeeRecipient() view returns (address)",
        "selector": "0x64df049e"
    },
    "0x87e4401f": {
        "type": "function",
        "signature": "function royaltyFeeManager() view returns (address)",
        "selector": "0x87e4401f"
    },
    "0x5e14f68e": {
        "type": "function",
        "signature": "function transferSelectorNFT() view returns (address)",
        "selector": "0x5e14f68e"
    },
    "0x5ce052d7": {
        "type": "function",
        "signature": "function updateCurrencyManager(address _currencyManager)",
        "selector": "0x5ce052d7"
    },
    "0xd4ff41dc": {
        "type": "function",
        "signature": "function updateExecutionManager(address _executionManager)",
        "selector": "0xd4ff41dc"
    },
    "0x1df47f80": {
        "type": "function",
        "signature": "function updateProtocolFeeRecipient(address _protocolFeeRecipient)",
        "selector": "0x1df47f80"
    },
    "0xc5498769": {
        "type": "function",
        "signature": "function updateRoyaltyFeeManager(address _royaltyFeeManager)",
        "selector": "0xc5498769"
    },
    "0xf75ff53f": {
        "type": "function",
        "signature": "function updateTransferSelectorNFT(address _transferSelectorNFT)",
        "selector": "0xf75ff53f"
    },
    "0x4266581e": {
        "type": "function",
        "signature": "function userMinOrderNonce(address) view returns (uint256)",
        "selector": "0x4266581e"
    },
    "0x9ca37a0b": {
        "type": "function",
        "signature": "function ZapIn(address _FromTokenContractAddress, address _pairAddress, uint256 _amount, uint256 _minPoolTokens, address _swapTarget, bytes swapData, address affiliate, bool transferResidual, bool shouldSellEntireBalance) payable returns (uint256)",
        "selector": "0x9ca37a0b"
    },
    "0x1781261f": {
        "type": "function",
        "signature": "function affiliateBalance(address, address) view returns (uint256)",
        "selector": "0x1781261f"
    },
    "0x4f51e294": {
        "type": "function",
        "signature": "function affiliates(address) view returns (bool)",
        "selector": "0x4f51e294"
    },
    "0x0dc9de85": {
        "type": "function",
        "signature": "function affilliateWithdraw(address[] tokens)",
        "selector": "0x0dc9de85"
    },
    "0x9779d1a6": {
        "type": "function",
        "signature": "function approvedTargets(address) view returns (bool)",
        "selector": "0x9779d1a6"
    },
    "0xd408f657": {
        "type": "function",
        "signature": "function feeWhitelist(address) view returns (bool)",
        "selector": "0xd408f657"
    },
    "0x5de0398e": {
        "type": "function",
        "signature": "function goodwill() view returns (uint16)",
        "selector": "0x5de0398e"
    },
    "0x9735a634": {
        "type": "function",
        "signature": "function setApprovedTargets(address[] targets, bool[] isApproved)",
        "selector": "0x9735a634"
    },
    "0x3ff428c7": {
        "type": "function",
        "signature": "function set_affiliate(address _affiliate, bool _status)",
        "selector": "0x3ff428c7"
    },
    "0xfbec27bf": {
        "type": "function",
        "signature": "function set_feeWhitelist(address zapAddress, bool status)",
        "selector": "0xfbec27bf"
    },
    "0x01e980d4": {
        "type": "function",
        "signature": "function set_new_affiliateSplit(uint256 _new_affiliateSplit)",
        "selector": "0x01e980d4"
    },
    "0x550bfa56": {
        "type": "function",
        "signature": "function set_new_goodwill(uint256 _new_goodwill)",
        "selector": "0x550bfa56"
    },
    "0x75f12b21": {
        "type": "function",
        "signature": "function stopped() view returns (bool)",
        "selector": "0x75f12b21"
    },
    "0x1385d24c": {
        "type": "function",
        "signature": "function toggleContractActive()",
        "selector": "0x1385d24c"
    },
    "0x18b135e3": {
        "type": "function",
        "signature": "function totalAffiliateBalance(address) view returns (uint256)",
        "selector": "0x18b135e3"
    },
    "0x5ecb16cd": {
        "type": "function",
        "signature": "function withdrawTokens(address[] tokens)",
        "selector": "0x5ecb16cd"
    },
    "0x56f36dbf": {
        "type": "function",
        "signature": "function PROXY_GOVERNANCE_TAG() view returns (string)",
        "selector": "0x56f36dbf"
    },
    "0xf7b456d0": {
        "type": "function",
        "signature": "function UPGRADE_ACTIVATION_DELAY() view returns (uint256)",
        "selector": "0xf7b456d0"
    },
    "0x5e3a97e7": {
        "type": "function",
        "signature": "function addImplementation(address newImplementation, bytes data, bool finalize)",
        "selector": "0x5e3a97e7"
    },
    "0x439fab91": {
        "type": "function",
        "signature": "function initialize(bytes) pure",
        "selector": "0x439fab91"
    },
    "0xe907fa3c": {
        "type": "function",
        "signature": "function isNotFinalized() view returns (bool notFinal)",
        "selector": "0xe907fa3c"
    },
    "0x6684b1d6": {
        "type": "function",
        "signature": "function proxyAcceptGovernance()",
        "selector": "0x6684b1d6"
    },
    "0xf9bcdde4": {
        "type": "function",
        "signature": "function proxyCancelNomination()",
        "selector": "0xf9bcdde4"
    },
    "0xb449ea5d": {
        "type": "function",
        "signature": "function proxyIsGovernor(address testGovernor) view returns (bool)",
        "selector": "0xb449ea5d"
    },
    "0x8757653f": {
        "type": "function",
        "signature": "function proxyNominateNewGovernor(address newGovernor)",
        "selector": "0x8757653f"
    },
    "0x12f16e6d": {
        "type": "function",
        "signature": "function proxyRemoveGovernor(address governorForRemoval)",
        "selector": "0x12f16e6d"
    },
    "0x22175a32": {
        "type": "function",
        "signature": "function removeImplementation(address newImplementation)",
        "selector": "0x22175a32"
    },
    "0x7147855d": {
        "type": "function",
        "signature": "function upgradeTo(address newImplementation, bytes data, bool finalize) payable",
        "selector": "0x7147855d"
    },
    "0x3e941010": {
        "type": "function",
        "signature": "function _addReserves(uint256 addAmount) returns (uint256)",
        "selector": "0x3e941010"
    },
    "0x555bcc40": {
        "type": "function",
        "signature": "function _setImplementation(address implementation_, bool allowResign, bytes becomeImplementationData)",
        "selector": "0x555bcc40"
    },
    "0x0933c1ed": {
        "type": "function",
        "signature": "function delegateToImplementation(bytes data) returns (bytes)",
        "selector": "0x0933c1ed"
    },
    "0x4487152f": {
        "type": "function",
        "signature": "function delegateToViewImplementation(bytes data) view returns (bytes)",
        "selector": "0x4487152f"
    },
    "0x4aa4a4fc": {
        "type": "function",
        "signature": "function WETH9() view returns (address)",
        "selector": "0x4aa4a4fc"
    },
    "0x571ac8b0": {
        "type": "function",
        "signature": "function approveMax(address token) payable",
        "selector": "0x571ac8b0"
    },
    "0xcab372ce": {
        "type": "function",
        "signature": "function approveMaxMinusOne(address token) payable",
        "selector": "0xcab372ce"
    },
    "0x639d71a9": {
        "type": "function",
        "signature": "function approveZeroThenMax(address token) payable",
        "selector": "0x639d71a9"
    },
    "0xab3fdd50": {
        "type": "function",
        "signature": "function approveZeroThenMaxMinusOne(address token) payable",
        "selector": "0xab3fdd50"
    },
    "0xb3a2af13": {
        "type": "function",
        "signature": "function callPositionManager(bytes data) payable returns (bytes result)",
        "selector": "0xb3a2af13"
    },
    "0xefdeed8e": {
        "type": "function",
        "signature": "function checkOracleSlippage(bytes[] paths, uint128[] amounts, uint24 maximumTickDivergence, uint32 secondsAgo) view",
        "selector": "0xefdeed8e"
    },
    "0xf25801a7": {
        "type": "function",
        "signature": "function checkOracleSlippage(bytes path, uint24 maximumTickDivergence, uint32 secondsAgo) view",
        "selector": "0xf25801a7"
    },
    "0xb858183f": {
        "type": "function",
        "signature": "function exactInput(tuple(bytes path, address recipient, uint256 amountIn, uint256 amountOutMinimum) params) payable returns (uint256 amountOut)",
        "selector": "0xb858183f"
    },
    "0x04e45aaf": {
        "type": "function",
        "signature": "function exactInputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountOut)",
        "selector": "0x04e45aaf"
    },
    "0x09b81346": {
        "type": "function",
        "signature": "function exactOutput(tuple(bytes path, address recipient, uint256 amountOut, uint256 amountInMaximum) params) payable returns (uint256 amountIn)",
        "selector": "0x09b81346"
    },
    "0x5023b4df": {
        "type": "function",
        "signature": "function exactOutputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountIn)",
        "selector": "0x5023b4df"
    },
    "0xc45a0155": {
        "type": "function",
        "signature": "function factory() view returns (address)",
        "selector": "0xc45a0155"
    },
    "0x68e0d4e1": {
        "type": "function",
        "signature": "function factoryV2() view returns (address)",
        "selector": "0x68e0d4e1"
    },
    "0xdee00f35": {
        "type": "function",
        "signature": "function getApprovalType(address token, uint256 amount) returns (uint8)",
        "selector": "0xdee00f35"
    },
    "0xf100b205": {
        "type": "function",
        "signature": "function increaseLiquidity(tuple(address token0, address token1, uint256 tokenId, uint256 amount0Min, uint256 amount1Min) params) payable returns (bytes result)",
        "selector": "0xf100b205"
    },
    "0x11ed56c9": {
        "type": "function",
        "signature": "function mint(tuple(address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint256 amount0Min, uint256 amount1Min, address recipient) params) payable returns (bytes result)",
        "selector": "0x11ed56c9"
    },
    "0x1f0464d1": {
        "type": "function",
        "signature": "function multicall(bytes32 previousBlockhash, bytes[] data) payable returns (bytes[])",
        "selector": "0x1f0464d1"
    },
    "0x5ae401dc": {
        "type": "function",
        "signature": "function multicall(uint256 deadline, bytes[] data) payable returns (bytes[])",
        "selector": "0x5ae401dc"
    },
    "0x791b98bc": {
        "type": "function",
        "signature": "function positionManager() view returns (address)",
        "selector": "0x791b98bc"
    },
    "0xf2d5d56b": {
        "type": "function",
        "signature": "function pull(address token, uint256 value) payable",
        "selector": "0xf2d5d56b"
    },
    "0x12210e8a": {
        "type": "function",
        "signature": "function refundETH() payable",
        "selector": "0x12210e8a"
    },
    "0xf3995c67": {
        "type": "function",
        "signature": "function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable",
        "selector": "0xf3995c67"
    },
    "0x4659a494": {
        "type": "function",
        "signature": "function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable",
        "selector": "0x4659a494"
    },
    "0xa4a78f0c": {
        "type": "function",
        "signature": "function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable",
        "selector": "0xa4a78f0c"
    },
    "0xc2e3140a": {
        "type": "function",
        "signature": "function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable",
        "selector": "0xc2e3140a"
    },
    "0x472b43f3": {
        "type": "function",
        "signature": "function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) payable returns (uint256 amountOut)",
        "selector": "0x472b43f3"
    },
    "0x42712a67": {
        "type": "function",
        "signature": "function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to) payable returns (uint256 amountIn)",
        "selector": "0x42712a67"
    },
    "0xdf2ab5bb": {
        "type": "function",
        "signature": "function sweepToken(address token, uint256 amountMinimum, address recipient) payable",
        "selector": "0xdf2ab5bb"
    },
    "0xe90a182f": {
        "type": "function",
        "signature": "function sweepToken(address token, uint256 amountMinimum) payable",
        "selector": "0xe90a182f"
    },
    "0x3068c554": {
        "type": "function",
        "signature": "function sweepTokenWithFee(address token, uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable",
        "selector": "0x3068c554"
    },
    "0xe0e189a0": {
        "type": "function",
        "signature": "function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable",
        "selector": "0xe0e189a0"
    },
    "0x49404b7c": {
        "type": "function",
        "signature": "function unwrapWETH9(uint256 amountMinimum, address recipient) payable",
        "selector": "0x49404b7c"
    },
    "0x49616997": {
        "type": "function",
        "signature": "function unwrapWETH9(uint256 amountMinimum) payable",
        "selector": "0x49616997"
    },
    "0x9b2c0a37": {
        "type": "function",
        "signature": "function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable",
        "selector": "0x9b2c0a37"
    },
    "0xd4ef38de": {
        "type": "function",
        "signature": "function unwrapWETH9WithFee(uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable",
        "selector": "0xd4ef38de"
    },
    "0x1c58db4f": {
        "type": "function",
        "signature": "function wrapETH(uint256 value) payable",
        "selector": "0x1c58db4f"
    },
    "0x451ee4a1": {
        "type": "function",
        "signature": "function adjustment() view returns (bool add, uint256 rate, uint256 target, uint256 buffer, uint256 lastBlock)",
        "selector": "0x451ee4a1"
    },
    "0xcd1234b3": {
        "type": "function",
        "signature": "function bondInfo(address) view returns (uint256 payout, uint256 vesting, uint256 lastBlock, uint256 truePricePaid)",
        "selector": "0xcd1234b3"
    },
    "0xd7ccfb0b": {
        "type": "function",
        "signature": "function bondPrice() view returns (uint256 price_)",
        "selector": "0xd7ccfb0b"
    },
    "0x3f0fb92f": {
        "type": "function",
        "signature": "function changeOlympusTreasury(address _olympusTreasury)",
        "selector": "0x3f0fb92f"
    },
    "0x759076e5": {
        "type": "function",
        "signature": "function currentDebt() view returns (uint256)",
        "selector": "0x759076e5"
    },
    "0x4799afda": {
        "type": "function",
        "signature": "function currentOlympusFee() view returns (uint256 currentFee_)",
        "selector": "0x4799afda"
    },
    "0xe392a262": {
        "type": "function",
        "signature": "function debtDecay() view returns (uint256 decay_)",
        "selector": "0xe392a262"
    },
    "0xcea55f57": {
        "type": "function",
        "signature": "function debtRatio() view returns (uint256 debtRatio_)",
        "selector": "0xcea55f57"
    },
    "0x8dbdbe6d": {
        "type": "function",
        "signature": "function deposit(uint256 _amount, uint256 _maxPrice, address _depositor) returns (uint256)",
        "selector": "0x8dbdbe6d"
    },
    "0xa50603b2": {
        "type": "function",
        "signature": "function initializeBond(uint256 _controlVariable, uint256 _vestingTerm, uint256 _minimumPrice, uint256 _maxPayout, uint256 _maxDebt, uint256 _initialDebt)",
        "selector": "0xa50603b2"
    },
    "0xf5c2ab5b": {
        "type": "function",
        "signature": "function lastDecay() view returns (uint256)",
        "selector": "0xf5c2ab5b"
    },
    "0xe0176de8": {
        "type": "function",
        "signature": "function maxPayout() view returns (uint256)",
        "selector": "0xe0176de8"
    },
    "0xa9bc6b71": {
        "type": "function",
        "signature": "function paySubsidy() returns (uint256 payoutSinceLastSubsidy_)",
        "selector": "0xa9bc6b71"
    },
    "0x7927ebf8": {
        "type": "function",
        "signature": "function payoutFor(uint256 _value) view returns (uint256 _payout, uint256 _fee)",
        "selector": "0x7927ebf8"
    },
    "0x01b88ee8": {
        "type": "function",
        "signature": "function pendingPayoutFor(address _depositor) view returns (uint256 pendingPayout_)",
        "selector": "0x01b88ee8"
    },
    "0x507930ec": {
        "type": "function",
        "signature": "function percentVestedFor(address _depositor) view returns (uint256 percentVested_)",
        "selector": "0x507930ec"
    },
    "0x0505c8c9": {
        "type": "function",
        "signature": "function policy() view returns (address)",
        "selector": "0x0505c8c9"
    },
    "0x95a2251f": {
        "type": "function",
        "signature": "function redeem(address _depositor) returns (uint256)",
        "selector": "0x95a2251f"
    },
    "0x1a3d0068": {
        "type": "function",
        "signature": "function setAdjustment(bool _addition, uint256 _increment, uint256 _target, uint256 _buffer)",
        "selector": "0x1a3d0068"
    },
    "0x1e321a0f": {
        "type": "function",
        "signature": "function setBondTerms(uint8 _parameter, uint256 _input)",
        "selector": "0x1e321a0f"
    },
    "0xd5025625": {
        "type": "function",
        "signature": "function terms() view returns (uint256 controlVariable, uint256 vestingTerm, uint256 minimumPrice, uint256 maxPayout, uint256 maxDebt)",
        "selector": "0xd5025625"
    },
    "0xfc7b9c18": {
        "type": "function",
        "signature": "function totalDebt() view returns (uint256)",
        "selector": "0xfc7b9c18"
    },
    "0x2bab6bde": {
        "type": "function",
        "signature": "function totalPayoutGiven() view returns (uint256)",
        "selector": "0x2bab6bde"
    },
    "0x7cbe044c": {
        "type": "function",
        "signature": "function totalPrincipalBonded() view returns (uint256)",
        "selector": "0x7cbe044c"
    },
    "0x3bfdd7de": {
        "type": "function",
        "signature": "function transferManagment(address _newOwner)",
        "selector": "0x3bfdd7de"
    },
    "0x0a748489": {
        "type": "function",
        "signature": "function trueBondPrice() view returns (uint256 price_)",
        "selector": "0x0a748489"
    },
    "0x02e371de": {
        "type": "function",
        "signature": "function COMPONENT_1() view returns (address)",
        "selector": "0x02e371de"
    },
    "0xb7dec1b7": {
        "type": "function",
        "signature": "function GENESIS() view returns (address)",
        "selector": "0xb7dec1b7"
    },
    "0x51464e29": {
        "type": "function",
        "signature": "function PSILOCYBIN() view returns (address)",
        "selector": "0x51464e29"
    },
    "0x7b4382cd": {
        "type": "function",
        "signature": "function TOKEN_CONTRACTS(uint256) view returns (address)",
        "selector": "0x7b4382cd"
    },
    "0xbed08e0b": {
        "type": "function",
        "signature": "function batchStake(uint256[] _ids, uint8 _tokenType)",
        "selector": "0xbed08e0b"
    },
    "0x6fd6da6f": {
        "type": "function",
        "signature": "function batchTimeSinceStaked(uint8 _tokenType, uint256[] _ids) view returns (uint256[])",
        "selector": "0x6fd6da6f"
    },
    "0x1b38e212": {
        "type": "function",
        "signature": "function batchUnstake(uint256[] _ids, uint8 _tokenType)",
        "selector": "0x1b38e212"
    },
    "0x4432c4e4": {
        "type": "function",
        "signature": "function delegatedBatchUnstake(uint256[] _ids, uint8 _tokenType)",
        "selector": "0x4432c4e4"
    },
    "0xef216af3": {
        "type": "function",
        "signature": "function delegatedUnstake(uint256 _id, uint8 _tokenType)",
        "selector": "0xef216af3"
    },
    "0xa7433cf5": {
        "type": "function",
        "signature": "function getStakedTokens(address _owner, uint8 _tokenType) view returns (uint256[])",
        "selector": "0xa7433cf5"
    },
    "0x3e28391d": {
        "type": "function",
        "signature": "function isDelegated(address _a) view returns (bool)",
        "selector": "0x3e28391d"
    },
    "0x86fbad9c": {
        "type": "function",
        "signature": "function isStaked(address _owner, uint8 _tokenType, uint256 _id) view returns (bool)",
        "selector": "0x86fbad9c"
    },
    "0x4cb2c889": {
        "type": "function",
        "signature": "function setDelegated(address _a, bool _bool)",
        "selector": "0x4cb2c889"
    },
    "0x77d03e74": {
        "type": "function",
        "signature": "function stakedBalance(address _owner, uint8 _tokenType) view returns (uint256)",
        "selector": "0x77d03e74"
    },
    "0x92f69aee": {
        "type": "function",
        "signature": "function timeSinceStaked(uint8 _tokenType, uint256 _id) view returns (uint256)",
        "selector": "0x92f69aee"
    },
    "0xf376d0de": {
        "type": "function",
        "signature": "function tokenInfo(uint8, uint256) view returns (address owner, uint256 timeStaked)",
        "selector": "0xf376d0de"
    },
    "0xbc9699f1": {
        "type": "function",
        "signature": "function unstake(uint256 _id, uint8 _tokenType)",
        "selector": "0xbc9699f1"
    },
    "0x42f1181e": {
        "type": "function",
        "signature": "function addAuthorizedAddress(address target)",
        "selector": "0x42f1181e"
    },
    "0x494503d4": {
        "type": "function",
        "signature": "function authorities(uint256) view returns (address)",
        "selector": "0x494503d4"
    },
    "0x70712939": {
        "type": "function",
        "signature": "function removeAuthorizedAddress(address target)",
        "selector": "0x70712939"
    },
    "0xb9181611": {
        "type": "function",
        "signature": "function authorized(address) view returns (bool)",
        "selector": "0xb9181611"
    },
    "0xd39de6e9": {
        "type": "function",
        "signature": "function getAuthorizedAddresses() view returns (address[])",
        "selector": "0xd39de6e9"
    },
    "0x74c1d7d3": {
        "type": "function",
        "signature": "function _best(address, address) view returns (uint256)",
        "selector": "0x74c1d7d3"
    },
    "0x91be90c8": {
        "type": "function",
        "signature": "function _dust(address) view returns (uint256)",
        "selector": "0x91be90c8"
    },
    "0xa78d4316": {
        "type": "function",
        "signature": "function _near(uint256) view returns (uint256)",
        "selector": "0xa78d4316"
    },
    "0xc2d526aa": {
        "type": "function",
        "signature": "function _rank(uint256) view returns (uint256 next, uint256 prev, uint256 delb)",
        "selector": "0xc2d526aa"
    },
    "0x677170e1": {
        "type": "function",
        "signature": "function _span(address, address) view returns (uint256)",
        "selector": "0x677170e1"
    },
    "0xbf7e214f": {
        "type": "function",
        "signature": "function authority() view returns (address)",
        "selector": "0xbf7e214f"
    },
    "0x779997c3": {
        "type": "function",
        "signature": "function bump(bytes32 id_)",
        "selector": "0x779997c3"
    },
    "0xd6febde8": {
        "type": "function",
        "signature": "function buy(uint256 id, uint256 amount) returns (bool)",
        "selector": "0xd6febde8"
    },
    "0x8185402b": {
        "type": "function",
        "signature": "function buyAllAmount(address buy_gem, uint256 buy_amt, address pay_gem, uint256 max_fill_amount) returns (uint256 fill_amt)",
        "selector": "0x8185402b"
    },
    "0xf582d293": {
        "type": "function",
        "signature": "function buyEnabled() view returns (bool)",
        "selector": "0xf582d293"
    },
    "0x40e58ee5": {
        "type": "function",
        "signature": "function cancel(uint256 id) returns (bool success)",
        "selector": "0x40e58ee5"
    },
    "0x6377ebca": {
        "type": "function",
        "signature": "function close_time() view returns (uint64)",
        "selector": "0x6377ebca"
    },
    "0x467f0b7b": {
        "type": "function",
        "signature": "function del_rank(uint256 id) returns (bool)",
        "selector": "0x467f0b7b"
    },
    "0x56ad8764": {
        "type": "function",
        "signature": "function dustId() view returns (uint256)",
        "selector": "0x56ad8764"
    },
    "0x0374fc6f": {
        "type": "function",
        "signature": "function getBestOffer(address sell_gem, address buy_gem) view returns (uint256)",
        "selector": "0x0374fc6f"
    },
    "0x911550f4": {
        "type": "function",
        "signature": "function getBetterOffer(uint256 id) view returns (uint256)",
        "selector": "0x911550f4"
    },
    "0x144a2752": {
        "type": "function",
        "signature": "function getBuyAmount(address buy_gem, address pay_gem, uint256 pay_amt) view returns (uint256 fill_amt)",
        "selector": "0x144a2752"
    },
    "0x8af82a2e": {
        "type": "function",
        "signature": "function getFirstUnsortedOffer() view returns (uint256)",
        "selector": "0x8af82a2e"
    },
    "0x511fa487": {
        "type": "function",
        "signature": "function getMinSell(address pay_gem) view returns (uint256)",
        "selector": "0x511fa487"
    },
    "0x61f54a79": {
        "type": "function",
        "signature": "function getNextUnsortedOffer(uint256 id) view returns (uint256)",
        "selector": "0x61f54a79"
    },
    "0x4579268a": {
        "type": "function",
        "signature": "function getOffer(uint256 id) view returns (uint256, address, uint256, address)",
        "selector": "0x4579268a"
    },
    "0x7ca9429a": {
        "type": "function",
        "signature": "function getOfferCount(address sell_gem, address buy_gem) view returns (uint256)",
        "selector": "0x7ca9429a"
    },
    "0xc41a360a": {
        "type": "function",
        "signature": "function getOwner(uint256 id) view returns (address owner)",
        "selector": "0xc41a360a"
    },
    "0xff1fd974": {
        "type": "function",
        "signature": "function getPayAmount(address pay_gem, address buy_gem, uint256 buy_amt) view returns (uint256 fill_amt)",
        "selector": "0xff1fd974"
    },
    "0x557ed1ba": {
        "type": "function",
        "signature": "function getTime() view returns (uint64)",
        "selector": "0x557ed1ba"
    },
    "0x943911bc": {
        "type": "function",
        "signature": "function getWorseOffer(uint256 id) view returns (uint256)",
        "selector": "0x943911bc"
    },
    "0x1d834a1b": {
        "type": "function",
        "signature": "function insert(uint256 id, uint256 pos) returns (bool)",
        "selector": "0x1d834a1b"
    },
    "0x82afd23b": {
        "type": "function",
        "signature": "function isActive(uint256 id) view returns (bool active)",
        "selector": "0x82afd23b"
    },
    "0xc2b6b58c": {
        "type": "function",
        "signature": "function isClosed() view returns (bool closed)",
        "selector": "0xc2b6b58c"
    },
    "0xd2b420ce": {
        "type": "function",
        "signature": "function isOfferSorted(uint256 id) view returns (bool)",
        "selector": "0xd2b420ce"
    },
    "0xb4f9b6c8": {
        "type": "function",
        "signature": "function kill(bytes32 id)",
        "selector": "0xb4f9b6c8"
    },
    "0x232cae0b": {
        "type": "function",
        "signature": "function last_offer_id() view returns (uint256)",
        "selector": "0x232cae0b"
    },
    "0x093f5198": {
        "type": "function",
        "signature": "function make(address pay_gem, address buy_gem, uint128 pay_amt, uint128 buy_amt) returns (bytes32)",
        "selector": "0x093f5198"
    },
    "0x01492a0b": {
        "type": "function",
        "signature": "function matchingEnabled() view returns (bool)",
        "selector": "0x01492a0b"
    },
    "0x1b33d412": {
        "type": "function",
        "signature": "function offer(uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, uint256 pos) returns (uint256)",
        "selector": "0x1b33d412"
    },
    "0xe1a6f014": {
        "type": "function",
        "signature": "function offer(uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, uint256 pos, bool rounding) returns (uint256)",
        "selector": "0xe1a6f014"
    },
    "0xf09ea2a6": {
        "type": "function",
        "signature": "function offer(uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem) returns (uint256)",
        "selector": "0xf09ea2a6"
    },
    "0x8a72ea6a": {
        "type": "function",
        "signature": "function offers(uint256) view returns (uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, address owner, uint64 timestamp)",
        "selector": "0x8a72ea6a"
    },
    "0x0621b4f6": {
        "type": "function",
        "signature": "function sellAllAmount(address pay_gem, uint256 pay_amt, address buy_gem, uint256 min_fill_amount) returns (uint256 fill_amt)",
        "selector": "0x0621b4f6"
    },
    "0x7a9e5e4b": {
        "type": "function",
        "signature": "function setAuthority(address authority_)",
        "selector": "0x7a9e5e4b"
    },
    "0xd6f15469": {
        "type": "function",
        "signature": "function setBuyEnabled(bool buyEnabled_) returns (bool)",
        "selector": "0xd6f15469"
    },
    "0x2aed1905": {
        "type": "function",
        "signature": "function setMatchingEnabled(bool matchingEnabled_) returns (bool)",
        "selector": "0x2aed1905"
    },
    "0xbf7c734e": {
        "type": "function",
        "signature": "function setMinSell(address pay_gem, uint256 dust) returns (bool)",
        "selector": "0xbf7c734e"
    },
    "0x07da68f5": {
        "type": "function",
        "signature": "function stop()",
        "selector": "0x07da68f5"
    },
    "0x49606455": {
        "type": "function",
        "signature": "function take(bytes32 id, uint128 maxTakeAmount)",
        "selector": "0x49606455"
    },
    "0xe8e33700": {
        "type": "function",
        "signature": "function addLiquidity(address tokenA, address tokenB, uint256 amountADesired, uint256 amountBDesired, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB, uint256 liquidity)",
        "selector": "0xe8e33700"
    },
    "0xf305d719": {
        "type": "function",
        "signature": "function addLiquidityETH(address token, uint256 amountTokenDesired, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity)",
        "selector": "0xf305d719"
    },
    "0x85f8c259": {
        "type": "function",
        "signature": "function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn)",
        "selector": "0x85f8c259"
    },
    "0x054d50d4": {
        "type": "function",
        "signature": "function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut)",
        "selector": "0x054d50d4"
    },
    "0x1f00ca74": {
        "type": "function",
        "signature": "function getAmountsIn(uint256 amountOut, address[] path) view returns (uint256[] amounts)",
        "selector": "0x1f00ca74"
    },
    "0xd06ca61f": {
        "type": "function",
        "signature": "function getAmountsOut(uint256 amountIn, address[] path) view returns (uint256[] amounts)",
        "selector": "0xd06ca61f"
    },
    "0xad615dec": {
        "type": "function",
        "signature": "function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB)",
        "selector": "0xad615dec"
    },
    "0xbaa2abde": {
        "type": "function",
        "signature": "function removeLiquidity(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB)",
        "selector": "0xbaa2abde"
    },
    "0x02751cec": {
        "type": "function",
        "signature": "function removeLiquidityETH(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountToken, uint256 amountETH)",
        "selector": "0x02751cec"
    },
    "0xaf2979eb": {
        "type": "function",
        "signature": "function removeLiquidityETHSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountETH)",
        "selector": "0xaf2979eb"
    },
    "0xded9382a": {
        "type": "function",
        "signature": "function removeLiquidityETHWithPermit(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountToken, uint256 amountETH)",
        "selector": "0xded9382a"
    },
    "0x5b0d5984": {
        "type": "function",
        "signature": "function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountETH)",
        "selector": "0x5b0d5984"
    },
    "0x2195995c": {
        "type": "function",
        "signature": "function removeLiquidityWithPermit(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountA, uint256 amountB)",
        "selector": "0x2195995c"
    },
    "0xfb3bdb41": {
        "type": "function",
        "signature": "function swapETHForExactTokens(uint256 amountOut, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)",
        "selector": "0xfb3bdb41"
    },
    "0x7ff36ab5": {
        "type": "function",
        "signature": "function swapExactETHForTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)",
        "selector": "0x7ff36ab5"
    },
    "0xb6f9de95": {
        "type": "function",
        "signature": "function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable",
        "selector": "0xb6f9de95"
    },
    "0x18cbafe5": {
        "type": "function",
        "signature": "function swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
        "selector": "0x18cbafe5"
    },
    "0x791ac947": {
        "type": "function",
        "signature": "function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)",
        "selector": "0x791ac947"
    },
    "0x38ed1739": {
        "type": "function",
        "signature": "function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
        "selector": "0x38ed1739"
    },
    "0x5c11d795": {
        "type": "function",
        "signature": "function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)",
        "selector": "0x5c11d795"
    },
    "0x4a25d94a": {
        "type": "function",
        "signature": "function swapTokensForExactETH(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
        "selector": "0x4a25d94a"
    },
    "0x8803dbee": {
        "type": "function",
        "signature": "function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)",
        "selector": "0x8803dbee"
    },
    "0x7234d8f2": {
        "type": "function",
        "signature": "function KIND_AUCTION() view returns (uint8)",
        "selector": "0x7234d8f2"
    },
    "0xe1784a02": {
        "type": "function",
        "signature": "function KIND_BUY() view returns (uint8)",
        "selector": "0xe1784a02"
    },
    "0x25593ac2": {
        "type": "function",
        "signature": "function KIND_SELL() view returns (uint8)",
        "selector": "0x25593ac2"
    },
    "0x7ae1ace0": {
        "type": "function",
        "signature": "function OP_ACCEPT_AUCTION() view returns (uint8)",
        "selector": "0x7ae1ace0"
    },
    "0x11f0794c": {
        "type": "function",
        "signature": "function OP_ACCEPT_BUY() view returns (uint8)",
        "selector": "0x11f0794c"
    },
    "0x81787a85": {
        "type": "function",
        "signature": "function OP_BID() view returns (uint8)",
        "selector": "0x81787a85"
    },
    "0xeb374261": {
        "type": "function",
        "signature": "function OP_BUY() view returns (uint8)",
        "selector": "0xeb374261"
    },
    "0x9e57feb5": {
        "type": "function",
        "signature": "function OP_CANCEL_BUY() view returns (uint8)",
        "selector": "0x9e57feb5"
    },
    "0x6acc65db": {
        "type": "function",
        "signature": "function OP_COMPLETE_AUCTION() view returns (uint8)",
        "selector": "0x6acc65db"
    },
    "0xb50a2a55": {
        "type": "function",
        "signature": "function OP_COMPLETE_BUY() view returns (uint8)",
        "selector": "0xb50a2a55"
    },
    "0x8f18439e": {
        "type": "function",
        "signature": "function OP_COMPLETE_SELL() view returns (uint8)",
        "selector": "0x8f18439e"
    },
    "0xf0954160": {
        "type": "function",
        "signature": "function OP_MAX() view returns (uint8)",
        "selector": "0xf0954160"
    },
    "0x90c2b10e": {
        "type": "function",
        "signature": "function OP_MIN() view returns (uint8)",
        "selector": "0x90c2b10e"
    },
    "0x1bb03ca9": {
        "type": "function",
        "signature": "function OP_REJECT_BUY() view returns (uint8)",
        "selector": "0x1bb03ca9"
    },
    "0x0873c6ec": {
        "type": "function",
        "signature": "function RATE_BASE() view returns (uint256)",
        "selector": "0x0873c6ec"
    },
    "0x5a4e5a15": {
        "type": "function",
        "signature": "function STATUS_CANCELLED() view returns (uint8)",
        "selector": "0x5a4e5a15"
    },
    "0x740db280": {
        "type": "function",
        "signature": "function STATUS_DONE() view returns (uint8)",
        "selector": "0x740db280"
    },
    "0x24f8515b": {
        "type": "function",
        "signature": "function STATUS_OPEN() view returns (uint8)",
        "selector": "0x24f8515b"
    },
    "0xf0d250ba": {
        "type": "function",
        "signature": "function TOKEN_1155() view returns (uint8)",
        "selector": "0xf0d250ba"
    },
    "0xc477be20": {
        "type": "function",
        "signature": "function TOKEN_721() view returns (uint8)",
        "selector": "0xc477be20"
    },
    "0x853ca41a": {
        "type": "function",
        "signature": "function TOKEN_MINT() view returns (uint8)",
        "selector": "0x853ca41a"
    },
    "0xc1c30e80": {
        "type": "function",
        "signature": "function cancelBuys(uint256[] ids)",
        "selector": "0xc1c30e80"
    },
    "0x3ed9ffb7": {
        "type": "function",
        "signature": "function couponSpent(uint256) view returns (bool)",
        "selector": "0x3ed9ffb7"
    },
    "0xe7d4a999": {
        "type": "function",
        "signature": "function emergencyCancelAuction(uint256 id, bool noBundle)",
        "selector": "0xe7d4a999"
    },
    "0xf5116bc9": {
        "type": "function",
        "signature": "function hasInv(uint256 id) view returns (bool)",
        "selector": "0xf5116bc9"
    },
    "0xac5e2cb1": {
        "type": "function",
        "signature": "function hasSignedIntention(uint8 op) pure returns (bool)",
        "selector": "0xac5e2cb1"
    },
    "0x80bc688f": {
        "type": "function",
        "signature": "function inCaseMoneyGetsStuck(address to, address currency, uint256 amount)",
        "selector": "0x80bc688f"
    },
    "0xcd78ba01": {
        "type": "function",
        "signature": "function inventories(uint256) view returns (address seller, address buyer, address currency, uint256 price, uint256 netPrice, uint256 deadline, uint8 kind, uint8 status)",
        "selector": "0xcd78ba01"
    },
    "0x5fd34298": {
        "type": "function",
        "signature": "function inventoryTokenCounts(uint256) view returns (uint256)",
        "selector": "0x5fd34298"
    },
    "0xb4533aad": {
        "type": "function",
        "signature": "function inventoryTokens(uint256, uint256) view returns (address token, uint256 tokenId, uint256 amount, uint8 kind, bytes mintData)",
        "selector": "0xb4533aad"
    },
    "0x8704f2a3": {
        "type": "function",
        "signature": "function isAuction(uint256 id) view returns (bool)",
        "selector": "0x8704f2a3"
    },
    "0x0ad48628": {
        "type": "function",
        "signature": "function isAuctionOpen(uint256 id) view returns (bool)",
        "selector": "0x0ad48628"
    },
    "0xf4a33e0d": {
        "type": "function",
        "signature": "function isBundleApproved(uint256 invId, address owner) view returns (bool)",
        "selector": "0xf4a33e0d"
    },
    "0xa80d33fb": {
        "type": "function",
        "signature": "function isBuy(uint256 id) view returns (bool)",
        "selector": "0xa80d33fb"
    },
    "0xbdf52b45": {
        "type": "function",
        "signature": "function isBuyOpen(uint256 id) view returns (bool)",
        "selector": "0xbdf52b45"
    },
    "0xd9548e53": {
        "type": "function",
        "signature": "function isExpired(uint256 id) view returns (bool)",
        "selector": "0xd9548e53"
    },
    "0x1b01e72c": {
        "type": "function",
        "signature": "function isSell(uint256 id) view returns (bool)",
        "selector": "0x1b01e72c"
    },
    "0x781dc70a": {
        "type": "function",
        "signature": "function isSignatureValid(bytes signature, bytes32 hash, address signer) pure returns (bool)",
        "selector": "0x781dc70a"
    },
    "0xee98ce91": {
        "type": "function",
        "signature": "function isStatusOpen(uint256 id) view returns (bool)",
        "selector": "0xee98ce91"
    },
    "0x2bcd27df": {
        "type": "function",
        "signature": "function marketSigners(address) view returns (bool)",
        "selector": "0x2bcd27df"
    },
    "0x54134876": {
        "type": "function",
        "signature": "function minAuctionDuration() view returns (uint256)",
        "selector": "0x54134876"
    },
    "0x708d4d35": {
        "type": "function",
        "signature": "function minAuctionIncrement() view returns (uint256)",
        "selector": "0x708d4d35"
    },
    "0xba847759": {
        "type": "function",
        "signature": "function run(tuple(address user, tuple(address token, uint256 tokenId, uint256 amount, uint8 kind, bytes mintData)[] bundle, address currency, uint256 price, uint256 deadline, bytes32 salt, uint8 kind) intent, tuple(bytes32 intentionHash, address signer, uint256 txDeadline, bytes32 salt, uint256 id, uint8 opcode, address caller, address currency, uint256 price, uint256 incentiveRate, tuple(uint256[] coupons, uint256 feeRate, uint256 royaltyRate, uint256 buyerCashbackRate, address feeAddress, address royaltyAddress) settlement, tuple(address token, uint256 tokenId, uint256 amount, uint8 kind, bytes mintData)[] bundle, uint256 deadline) detail, bytes sigIntent, bytes sigDetail) payable",
        "selector": "0xba847759"
    },
    "0xafd76a0b": {
        "type": "function",
        "signature": "function send(address to, tuple(address token, uint256 tokenId)[] tokens)",
        "selector": "0xafd76a0b"
    },
    "0xe91274f3": {
        "type": "function",
        "signature": "function swap(tuple(bytes32 salt, address creator, uint256 deadline, tuple(address token, uint256 tokenId)[] has, tuple(address token, uint256 tokenId)[] wants) req, bytes signature)",
        "selector": "0xe91274f3"
    },
    "0x015af8ee": {
        "type": "function",
        "signature": "function updateSettings(uint256 minAuctionIncrement_, uint256 minAuctionDuration_)",
        "selector": "0x015af8ee"
    },
    "0xf460590b": {
        "type": "function",
        "signature": "function updateSigner(address addr, bool remove)",
        "selector": "0xf460590b"
    },
    "0x3fc8cef3": {
        "type": "function",
        "signature": "function weth() view returns (address)",
        "selector": "0x3fc8cef3"
    },
    "0x9120491c": {
        "type": "function",
        "signature": "function donate(tuple(address token, uint256 amount, address dest)[] _donations) payable",
        "selector": "0x9120491c"
    },
    "0xaf933b57": {
        "type": "function",
        "signature": "function withdrawEther(address _dest)",
        "selector": "0xaf933b57"
    },
    "0x3aeac4e1": {
        "type": "function",
        "signature": "function withdrawToken(address _tokenAddress, address _dest)",
        "selector": "0x3aeac4e1"
    },
    "0x1d572320": {
        "type": "function",
        "signature": "function ZapIn(address _toWhomToIssue, address _FromTokenContractAddress, address _ToUnipoolToken0, address _ToUnipoolToken1, uint256 _amount, uint256 _minPoolTokens) payable returns (uint256)",
        "selector": "0x1d572320"
    },
    "0xb2bdfa7b": {
        "type": "function",
        "signature": "function _owner() view returns (address)",
        "selector": "0xb2bdfa7b"
    },
    "0x8d7e41a8": {
        "type": "function",
        "signature": "function calculateSwapInAmount(uint256 reserveIn, uint256 userIn) pure returns (uint256)",
        "selector": "0x8d7e41a8"
    },
    "0x3f975d5f": {
        "type": "function",
        "signature": "function canSwapFromV1(address _fromToken, address _toToken, uint256 fromAmount, uint256 toAmount) view returns (bool)",
        "selector": "0x3f975d5f"
    },
    "0xf27cf320": {
        "type": "function",
        "signature": "function canSwapFromV2(address _fromToken, address _toToken) view returns (bool)",
        "selector": "0xf27cf320"
    },
    "0x551196d5": {
        "type": "function",
        "signature": "function inCaseTokengetsStuck(address _TokenAddress)",
        "selector": "0x551196d5"
    },
    "0xb10e1dbc": {
        "type": "function",
        "signature": "function set_new_goodwill(uint16 _new_goodwill)",
        "selector": "0xb10e1dbc"
    },
    "0x3ccfd60b": {
        "type": "function",
        "signature": "function withdraw()",
        "selector": "0x3ccfd60b"
    },
    "0x01a12fd3": {
        "type": "function",
        "signature": "function removeAlerter(address alerter)",
        "selector": "0x01a12fd3"
    },
    "0x238dafe0": {
        "type": "function",
        "signature": "function enabled() view returns (bool)",
        "selector": "0x238dafe0"
    },
    "0x27a099d8": {
        "type": "function",
        "signature": "function getOperators() view returns (address[])",
        "selector": "0x27a099d8"
    },
    "0x29589f61": {
        "type": "function",
        "signature": "function tradeWithHint(address src, uint256 srcAmount, address dest, address destAddress, uint256 maxDestAmount, uint256 minConversionRate, address walletId, bytes hint) payable returns (uint256)",
        "selector": "0x29589f61"
    },
    "0x3bba21dc": {
        "type": "function",
        "signature": "function swapTokenToEther(address token, uint256 srcAmount, uint256 minConversionRate) returns (uint256)",
        "selector": "0x3bba21dc"
    },
    "0x3ccdbb28": {
        "type": "function",
        "signature": "function withdrawToken(address token, uint256 amount, address sendTo)",
        "selector": "0x3ccdbb28"
    },
    "0x3de39c11": {
        "type": "function",
        "signature": "function maxGasPrice() view returns (uint256)",
        "selector": "0x3de39c11"
    },
    "0x408ee7fe": {
        "type": "function",
        "signature": "function addAlerter(address newAlerter)",
        "selector": "0x408ee7fe"
    },
    "0x4f61ff8b": {
        "type": "function",
        "signature": "function kyberNetworkContract() view returns (address)",
        "selector": "0x4f61ff8b"
    },
    "0x6432679f": {
        "type": "function",
        "signature": "function getUserCapInWei(address user) view returns (uint256)",
        "selector": "0x6432679f"
    },
    "0x7409e2eb": {
        "type": "function",
        "signature": "function swapTokenToToken(address src, uint256 srcAmount, address dest, uint256 minConversionRate) returns (uint256)",
        "selector": "0x7409e2eb"
    },
    "0x75829def": {
        "type": "function",
        "signature": "function transferAdmin(address newAdmin)",
        "selector": "0x75829def"
    },
    "0x77f50f97": {
        "type": "function",
        "signature": "function claimAdmin()",
        "selector": "0x77f50f97"
    },
    "0x7a2a0456": {
        "type": "function",
        "signature": "function swapEtherToToken(address token, uint256 minConversionRate) payable returns (uint256)",
        "selector": "0x7a2a0456"
    },
    "0x7acc8678": {
        "type": "function",
        "signature": "function transferAdminQuickly(address newAdmin)",
        "selector": "0x7acc8678"
    },
    "0x7c423f54": {
        "type": "function",
        "signature": "function getAlerters() view returns (address[])",
        "selector": "0x7c423f54"
    },
    "0x809a9e55": {
        "type": "function",
        "signature": "function getExpectedRate(address src, address dest, uint256 srcQty) view returns (uint256 expectedRate, uint256 slippageRate)",
        "selector": "0x809a9e55"
    },
    "0x8eaaeecf": {
        "type": "function",
        "signature": "function getUserCapInTokenWei(address user, address token) view returns (uint256)",
        "selector": "0x8eaaeecf"
    },
    "0xabd188a8": {
        "type": "function",
        "signature": "function setKyberNetworkContract(address _kyberNetworkContract)",
        "selector": "0xabd188a8"
    },
    "0xb64a097e": {
        "type": "function",
        "signature": "function info(bytes32 field) view returns (uint256)",
        "selector": "0xb64a097e"
    },
    "0xcb3c28c7": {
        "type": "function",
        "signature": "function trade(address src, uint256 srcAmount, address dest, address destAddress, uint256 maxDestAmount, uint256 minConversionRate, address walletId) payable returns (uint256)",
        "selector": "0xcb3c28c7"
    },
    "0xce56c454": {
        "type": "function",
        "signature": "function withdrawEther(uint256 amount, address sendTo)",
        "selector": "0xce56c454"
    },
    "0xa461b3c8": {
        "type": "function",
        "signature": "function initialize(string _name, string _symbol, address[4] _coins, uint256[4] _rate_multipliers, uint256 _A, uint256 _fee)",
        "selector": "0xa461b3c8"
    },
    "0x4903b0d1": {
        "type": "function",
        "signature": "function balances(uint256 arg0) view returns (uint256)",
        "selector": "0x4903b0d1"
    },
    "0x14f05979": {
        "type": "function",
        "signature": "function get_balances() view returns (uint256[2])",
        "selector": "0x14f05979"
    },
    "0x76a2f0f0": {
        "type": "function",
        "signature": "function A_precise() view returns (uint256)",
        "selector": "0x76a2f0f0"
    },
    "0xed8e84f3": {
        "type": "function",
        "signature": "function calc_token_amount(uint256[2] _amounts, bool _is_deposit) view returns (uint256)",
        "selector": "0xed8e84f3"
    },
    "0x0c3e4b54": {
        "type": "function",
        "signature": "function add_liquidity(uint256[2] _amounts, uint256 _min_mint_amount, address _receiver) returns (uint256)",
        "selector": "0x0c3e4b54"
    },
    "0xddc1f59d": {
        "type": "function",
        "signature": "function exchange(int128 i, int128 j, uint256 _dx, uint256 _min_dy, address _receiver) returns (uint256)",
        "selector": "0xddc1f59d"
    },
    "0x5b36389c": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _amount, uint256[2] min_amounts)",
        "selector": "0x5b36389c"
    },
    "0x3eb1719f": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _burn_amount, uint256[2] _min_amounts, address _receiver) returns (uint256[2])",
        "selector": "0x3eb1719f"
    },
    "0x52d2cfdd": {
        "type": "function",
        "signature": "function remove_liquidity_imbalance(uint256[2] _amounts, uint256 _max_burn_amount, address _receiver) returns (uint256)",
        "selector": "0x52d2cfdd"
    },
    "0xcc2b27d7": {
        "type": "function",
        "signature": "function calc_withdraw_one_coin(uint256 _burn_amount, int128 i) view returns (uint256)",
        "selector": "0xcc2b27d7"
    },
    "0x1a4d01d2": {
        "type": "function",
        "signature": "function remove_liquidity_one_coin(uint256 _burn_amount, int128 i, uint256 _min_received) returns (uint256)",
        "selector": "0x1a4d01d2"
    },
    "0x081579a5": {
        "type": "function",
        "signature": "function remove_liquidity_one_coin(uint256 _burn_amount, int128 i, uint256 _min_received, address _receiver) returns (uint256)",
        "selector": "0x081579a5"
    },
    "0x3c157e64": {
        "type": "function",
        "signature": "function ramp_A(uint256 _future_A, uint256 _future_time)",
        "selector": "0x3c157e64"
    },
    "0x551a6588": {
        "type": "function",
        "signature": "function stop_ramp_A()",
        "selector": "0x551a6588"
    },
    "0xc6610657": {
        "type": "function",
        "signature": "function coins(uint256 i) view returns (address)",
        "selector": "0xc6610657"
    },
    "0xe2e7d264": {
        "type": "function",
        "signature": "function admin_balances(uint256 i) view returns (uint256)",
        "selector": "0xe2e7d264"
    },
    "0x5409491a": {
        "type": "function",
        "signature": "function initial_A() view returns (uint256)",
        "selector": "0x5409491a"
    },
    "0x2081066c": {
        "type": "function",
        "signature": "function initial_A_time() view returns (uint256)",
        "selector": "0x2081066c"
    },
    "0x14052288": {
        "type": "function",
        "signature": "function future_A_time() view returns (uint256)",
        "selector": "0x14052288"
    },
    "0xb1373929": {
        "type": "function",
        "signature": "function gamma() view returns (uint256)",
        "selector": "0xb1373929"
    },
    "0x5b41b908": {
        "type": "function",
        "signature": "function exchange(uint256 i, uint256 j, uint256 dx, uint256 min_dy) payable returns (uint256)",
        "selector": "0x5b41b908"
    },
    "0x394747c5": {
        "type": "function",
        "signature": "function exchange(uint256 i, uint256 j, uint256 dx, uint256 min_dy, bool use_eth) payable returns (uint256)",
        "selector": "0x394747c5"
    },
    "0x65b2489b": {
        "type": "function",
        "signature": "function exchange_underlying(uint256 i, uint256 j, uint256 dx, uint256 min_dy) payable returns (uint256)",
        "selector": "0x65b2489b"
    },
    "0x556d6e9f": {
        "type": "function",
        "signature": "function get_dy(uint256 i, uint256 j, uint256 dx) view returns (uint256)",
        "selector": "0x556d6e9f"
    },
    "0xee22be23": {
        "type": "function",
        "signature": "function add_liquidity(uint256[2] amounts, uint256 min_mint_amount, bool use_eth) payable returns (uint256)",
        "selector": "0xee22be23"
    },
    "0x269b5581": {
        "type": "function",
        "signature": "function remove_liquidity(uint256 _amount, uint256[2] min_amounts, bool use_eth)",
        "selector": "0x269b5581"
    },
    "0x8d8ea727": {
        "type": "function",
        "signature": "function calc_token_amount(uint256[2] amounts) view returns (uint256)",
        "selector": "0x8d8ea727"
    },
    "0x4fb08c5e": {
        "type": "function",
        "signature": "function calc_withdraw_one_coin(uint256 token_amount, uint256 i) view returns (uint256)",
        "selector": "0x4fb08c5e"
    },
    "0xf1dc3cc9": {
        "type": "function",
        "signature": "function remove_liquidity_one_coin(uint256 token_amount, uint256 i, uint256 min_amount) returns (uint256)",
        "selector": "0xf1dc3cc9"
    },
    "0x8f15b6b5": {
        "type": "function",
        "signature": "function remove_liquidity_one_coin(uint256 token_amount, uint256 i, uint256 min_amount, bool use_eth) returns (uint256)",
        "selector": "0x8f15b6b5"
    },
    "0xc93f49e8": {
        "type": "function",
        "signature": "function claim_admin_fees()",
        "selector": "0xc93f49e8"
    },
    "0x5e248072": {
        "type": "function",
        "signature": "function ramp_A_gamma(uint256 future_A, uint256 future_gamma, uint256 future_time)",
        "selector": "0x5e248072"
    },
    "0x244c7c2e": {
        "type": "function",
        "signature": "function stop_ramp_A_gamma()",
        "selector": "0x244c7c2e"
    },
    "0xa43c3351": {
        "type": "function",
        "signature": "function commit_new_parameters(uint256 _new_mid_fee, uint256 _new_out_fee, uint256 _new_admin_fee, uint256 _new_fee_gamma, uint256 _new_allowed_extra_profit, uint256 _new_adjustment_step, uint256 _new_ma_half_time)",
        "selector": "0xa43c3351"
    },
    "0x7242e524": {
        "type": "function",
        "signature": "function set_admin_fee_receiver(address _admin_fee_receiver)",
        "selector": "0x7242e524"
    },
    "0x54f0f7d5": {
        "type": "function",
        "signature": "function lp_price() view returns (uint256)",
        "selector": "0x54f0f7d5"
    },
    "0xb9e8c9fd": {
        "type": "function",
        "signature": "function price_scale() view returns (uint256)",
        "selector": "0xb9e8c9fd"
    },
    "0x86fc88d3": {
        "type": "function",
        "signature": "function price_oracle() view returns (uint256)",
        "selector": "0x86fc88d3"
    },
    "0xc146bf94": {
        "type": "function",
        "signature": "function last_prices() view returns (uint256)",
        "selector": "0xc146bf94"
    },
    "0x6112c747": {
        "type": "function",
        "signature": "function last_prices_timestamp() view returns (uint256)",
        "selector": "0x6112c747"
    },
    "0x204fe3d5": {
        "type": "function",
        "signature": "function initial_A_gamma() view returns (uint256)",
        "selector": "0x204fe3d5"
    },
    "0xf30cfad5": {
        "type": "function",
        "signature": "function future_A_gamma() view returns (uint256)",
        "selector": "0xf30cfad5"
    },
    "0xe89876ff": {
        "type": "function",
        "signature": "function initial_A_gamma_time() view returns (uint256)",
        "selector": "0xe89876ff"
    },
    "0xf9ed9597": {
        "type": "function",
        "signature": "function future_A_gamma_time() view returns (uint256)",
        "selector": "0xf9ed9597"
    },
    "0x49fe9e77": {
        "type": "function",
        "signature": "function allowed_extra_profit() view returns (uint256)",
        "selector": "0x49fe9e77"
    },
    "0x727ced57": {
        "type": "function",
        "signature": "function future_allowed_extra_profit() view returns (uint256)",
        "selector": "0x727ced57"
    },
    "0x72d4f0e2": {
        "type": "function",
        "signature": "function fee_gamma() view returns (uint256)",
        "selector": "0x72d4f0e2"
    },
    "0xd7c3dcbe": {
        "type": "function",
        "signature": "function future_fee_gamma() view returns (uint256)",
        "selector": "0xd7c3dcbe"
    },
    "0x083812e5": {
        "type": "function",
        "signature": "function adjustment_step() view returns (uint256)",
        "selector": "0x083812e5"
    },
    "0x4ea12c7d": {
        "type": "function",
        "signature": "function future_adjustment_step() view returns (uint256)",
        "selector": "0x4ea12c7d"
    },
    "0x662b6274": {
        "type": "function",
        "signature": "function ma_half_time() view returns (uint256)",
        "selector": "0x662b6274"
    },
    "0x0c5e23d4": {
        "type": "function",
        "signature": "function future_ma_half_time() view returns (uint256)",
        "selector": "0x0c5e23d4"
    },
    "0x92526c0c": {
        "type": "function",
        "signature": "function mid_fee() view returns (uint256)",
        "selector": "0x92526c0c"
    },
    "0xee8de675": {
        "type": "function",
        "signature": "function out_fee() view returns (uint256)",
        "selector": "0xee8de675"
    },
    "0x7cf9aedc": {
        "type": "function",
        "signature": "function future_mid_fee() view returns (uint256)",
        "selector": "0x7cf9aedc"
    },
    "0x7d1b060c": {
        "type": "function",
        "signature": "function future_out_fee() view returns (uint256)",
        "selector": "0x7d1b060c"
    },
    "0x0f529ba2": {
        "type": "function",
        "signature": "function D() view returns (uint256)",
        "selector": "0x0f529ba2"
    },
    "0x7ba1a74d": {
        "type": "function",
        "signature": "function xcp_profit() view returns (uint256)",
        "selector": "0x7ba1a74d"
    },
    "0x0b7b594b": {
        "type": "function",
        "signature": "function xcp_profit_a() view returns (uint256)",
        "selector": "0x0b7b594b"
    },
    "0x0c46b72a": {
        "type": "function",
        "signature": "function virtual_price() view returns (uint256)",
        "selector": "0x0c46b72a"
    },
    "0x9c868ac0": {
        "type": "function",
        "signature": "function is_killed() view returns (bool)",
        "selector": "0x9c868ac0"
    },
    "0x2a426896": {
        "type": "function",
        "signature": "function kill_deadline() view returns (uint256)",
        "selector": "0x2a426896"
    },
    "0x6e42e4d2": {
        "type": "function",
        "signature": "function admin_fee_receiver() view returns (address)",
        "selector": "0x6e42e4d2"
    },
    "0xb5268389": {
        "type": "function",
        "signature": "function adapterRemoved(string) view returns (bool)",
        "selector": "0xb5268389"
    },
    "0xb84f5d1e": {
        "type": "function",
        "signature": "function adapters(string) view returns (address addr, bytes4 selector, bytes data)",
        "selector": "0xb84f5d1e"
    },
    "0xc92aecc4": {
        "type": "function",
        "signature": "function chi() view returns (address)",
        "selector": "0xc92aecc4"
    },
    "0x558b7dd1": {
        "type": "function",
        "signature": "function pauseSwaps()",
        "selector": "0x558b7dd1"
    },
    "0x3ef11fd7": {
        "type": "function",
        "signature": "function removeAdapter(string aggregatorId)",
        "selector": "0x3ef11fd7"
    },
    "0x459a39fb": {
        "type": "function",
        "signature": "function setAdapter(string aggregatorId, address addr, bytes4 selector, bytes data)",
        "selector": "0x459a39fb"
    },
    "0x5f575529": {
        "type": "function",
        "signature": "function swap(string aggregatorId, address tokenFrom, uint256 amount, bytes data) payable",
        "selector": "0x5f575529"
    },
    "0x6b68764c": {
        "type": "function",
        "signature": "function swapUsingGasToken(string aggregatorId, address tokenFrom, uint256 amount, bytes data) payable",
        "selector": "0x6b68764c"
    },
    "0x9804a380": {
        "type": "function",
        "signature": "function unpauseSwaps()",
        "selector": "0x9804a380"
    },
    "0x1766486d": {
        "type": "function",
        "signature": "function timeLockedUpgrades(bytes32) view returns (uint256)",
        "selector": "0x1766486d"
    },
    "0x709a385e": {
        "type": "function",
        "signature": "function batchTransfer(address[] _tokens, uint256[] _quantities, address _from, address _to)",
        "selector": "0x709a385e"
    },
    "0x78446bc1": {
        "type": "function",
        "signature": "function timeLockPeriod() view returns (uint256)",
        "selector": "0x78446bc1"
    },
    "0x9303b16f": {
        "type": "function",
        "signature": "function setTimeLockPeriod(uint256 _timeLockPeriod)",
        "selector": "0x9303b16f"
    },
    "0xa6c4e467": {
        "type": "function",
        "signature": "function transfer(address _token, uint256 _quantity, address _from, address _to)",
        "selector": "0xa6c4e467"
    },
    "0x01e33667": {
        "type": "function",
        "signature": "function withdrawToken(address token, address to, uint256 tokenAmount) returns (bool)",
        "selector": "0x01e33667"
    },
    "0x72e98a79": {
        "type": "function",
        "signature": "function transferBZxOwnership(address newBZxContractAddress)",
        "selector": "0x72e98a79"
    },
    "0xe4a72b13": {
        "type": "function",
        "signature": "function bZxContractAddress() view returns (address)",
        "selector": "0xe4a72b13"
    },
    "0xe5994905": {
        "type": "function",
        "signature": "function transferTokenFrom(address token, address from, address to, uint256 tokenAmount) returns (bool)",
        "selector": "0xe5994905"
    },
    "0xfb0f97a8": {
        "type": "function",
        "signature": "function depositToken(address token, address from, uint256 tokenAmount) returns (bool)",
        "selector": "0xfb0f97a8"
    },
    "0x0a19b14a": {
        "type": "function",
        "signature": "function trade(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s, uint256 amount)",
        "selector": "0x0a19b14a"
    },
    "0x0b927666": {
        "type": "function",
        "signature": "function order(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce)",
        "selector": "0x0b927666"
    },
    "0x19774d43": {
        "type": "function",
        "signature": "function orderFills(address, bytes32) view returns (uint256)",
        "selector": "0x19774d43"
    },
    "0x278b8c0e": {
        "type": "function",
        "signature": "function cancelOrder(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce, uint8 v, bytes32 r, bytes32 s)",
        "selector": "0x278b8c0e"
    },
    "0x46be96c3": {
        "type": "function",
        "signature": "function amountFilled(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s) view returns (uint256)",
        "selector": "0x46be96c3"
    },
    "0x54d03b5c": {
        "type": "function",
        "signature": "function changeFeeMake(uint256 feeMake_)",
        "selector": "0x54d03b5c"
    },
    "0x57786394": {
        "type": "function",
        "signature": "function feeMake() view returns (uint256)",
        "selector": "0x57786394"
    },
    "0x5e1d7ae4": {
        "type": "function",
        "signature": "function changeFeeRebate(uint256 feeRebate_)",
        "selector": "0x5e1d7ae4"
    },
    "0x6c86888b": {
        "type": "function",
        "signature": "function testTrade(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s, uint256 amount, address sender) view returns (bool)",
        "selector": "0x6c86888b"
    },
    "0x71ffcb16": {
        "type": "function",
        "signature": "function changeFeeAccount(address feeAccount_)",
        "selector": "0x71ffcb16"
    },
    "0x731c2f81": {
        "type": "function",
        "signature": "function feeRebate() view returns (uint256)",
        "selector": "0x731c2f81"
    },
    "0x8823a9c0": {
        "type": "function",
        "signature": "function changeFeeTake(uint256 feeTake_)",
        "selector": "0x8823a9c0"
    },
    "0x9e281a98": {
        "type": "function",
        "signature": "function withdrawToken(address token, uint256 amount)",
        "selector": "0x9e281a98"
    },
    "0xbb5f4629": {
        "type": "function",
        "signature": "function orders(address, bytes32) view returns (bool)",
        "selector": "0xbb5f4629"
    },
    "0xc281309e": {
        "type": "function",
        "signature": "function feeTake() view returns (uint256)",
        "selector": "0xc281309e"
    },
    "0xe8f6bc2e": {
        "type": "function",
        "signature": "function changeAccountLevelsAddr(address accountLevelsAddr_)",
        "selector": "0xe8f6bc2e"
    },
    "0xf3412942": {
        "type": "function",
        "signature": "function accountLevelsAddr() view returns (address)",
        "selector": "0xf3412942"
    },
    "0xfb6e155f": {
        "type": "function",
        "signature": "function availableVolume(address tokenGet, uint256 amountGet, address tokenGive, uint256 amountGive, uint256 expires, uint256 nonce, address user, uint8 v, bytes32 r, bytes32 s) view returns (uint256)",
        "selector": "0xfb6e155f"
    },
    "0x6d98ebe3": {
        "type": "function",
        "signature": "function STARKWARE_CONTRACT() view returns (address)",
        "selector": "0x6d98ebe3"
    },
    "0x27cc37b0": {
        "type": "function",
        "signature": "function deposit(uint256 depositAmount, uint256 starkKey, uint256 positionId, bytes signature)",
        "selector": "0x27cc37b0"
    },
    "0x9f2c365a": {
        "type": "function",
        "signature": "function depositERC20(address tokenFrom, uint256 tokenFromAmount, uint256 starkKey, uint256 positionId, address exchangeProxy, bytes exchangeProxyData, bytes signature) returns (uint256)",
        "selector": "0x9f2c365a"
    },
    "0xe1e1a91a": {
        "type": "function",
        "signature": "function depositEth(uint256 starkKey, uint256 positionId, address exchangeProxy, bytes exchangeProxyData, bytes signature) payable returns (uint256)",
        "selector": "0xe1e1a91a"
    },
    "0x572b6c05": {
        "type": "function",
        "signature": "function isTrustedForwarder(address forwarder) view returns (bool)",
        "selector": "0x572b6c05"
    },
    "0x1bf33004": {
        "type": "function",
        "signature": "function acceptSwap(uint256 swapId)",
        "selector": "0x1bf33004"
    },
    "0x54d6a2b7": {
        "type": "function",
        "signature": "function cancelSwap(uint256 swapId)",
        "selector": "0x54d6a2b7"
    },
    "0xdbd6dd5f": {
        "type": "function",
        "signature": "function initiateSwap(uint256 swapId, address[] nftAddresses, uint256[] nftIds) payable",
        "selector": "0xdbd6dd5f"
    },
    "0x55a36d56": {
        "type": "function",
        "signature": "function proposeSwap(address secondUser, address[] nftAddresses, uint256[] nftIds) payable",
        "selector": "0x55a36d56"
    },
    "0x7ea5482a": {
        "type": "function",
        "signature": "function setAppFee(uint256 newFee)",
        "selector": "0x7ea5482a"
    },
    "0x1247ae58": {
        "type": "function",
        "signature": "function filled_subtrees() view returns (uint256[])",
        "selector": "0x1247ae58"
    },
    "0x1f79a1e9": {
        "type": "function",
        "signature": "function nullifierHashes(uint256) view returns (bool)",
        "selector": "0x1f79a1e9"
    },
    "0x2d9ed8d5": {
        "type": "function",
        "signature": "function transferValue() view returns (uint256)",
        "selector": "0x2d9ed8d5"
    },
    "0x393fe1cd": {
        "type": "function",
        "signature": "function roots() view returns (uint256[])",
        "selector": "0x393fe1cd"
    },
    "0x49ce8997": {
        "type": "function",
        "signature": "function commitments(uint256) view returns (bool)",
        "selector": "0x49ce8997"
    },
    "0x4cd212eb": {
        "type": "function",
        "signature": "function zeros() view returns (uint256[])",
        "selector": "0x4cd212eb"
    },
    "0x551c4fd2": {
        "type": "function",
        "signature": "function withdraw(uint256[2] a, uint256[2][2] b, uint256[2] c, uint256[4] input)",
        "selector": "0x551c4fd2"
    },
    "0x5777bf50": {
        "type": "function",
        "signature": "function isDepositsEnabled() view returns (bool)",
        "selector": "0x5777bf50"
    },
    "0x5a129efe": {
        "type": "function",
        "signature": "function isSpent(uint256 nullifier) view returns (bool)",
        "selector": "0x5a129efe"
    },
    "0x5bb93995": {
        "type": "function",
        "signature": "function hashLeftRight(uint256 left, uint256 right) pure returns (uint256 mimc_hash)",
        "selector": "0x5bb93995"
    },
    "0x65576fab": {
        "type": "function",
        "signature": "function next_index() view returns (uint32)",
        "selector": "0x65576fab"
    },
    "0x8b145d6d": {
        "type": "function",
        "signature": "function current_root() view returns (uint256)",
        "selector": "0x8b145d6d"
    },
    "0xa6232a93": {
        "type": "function",
        "signature": "function isKnownRoot(uint256 root) view returns (bool)",
        "selector": "0xa6232a93"
    },
    "0xd907813c": {
        "type": "function",
        "signature": "function toggleDeposits()",
        "selector": "0xd907813c"
    },
    "0x9ad26744": {
        "type": "function",
        "signature": "function removeAuthorizedAddressAtIndex(address target, uint256 index)",
        "selector": "0x9ad26744"
    },
    "0xae25532e": {
        "type": "function",
        "signature": "function getProxyId() pure returns (bytes4)",
        "selector": "0xae25532e"
    },
    "0x6f6941b9": {
        "type": "function",
        "signature": "function cDAI() view returns (address)",
        "selector": "0x6f6941b9"
    },
    "0x10d95969": {
        "type": "function",
        "signature": "function crvapr() view returns (uint256)",
        "selector": "0x10d95969"
    },
    "0x7165485d": {
        "type": "function",
        "signature": "function curve() view returns (address)",
        "selector": "0x7165485d"
    },
    "0x4f39059c": {
        "type": "function",
        "signature": "function curveToken() view returns (address)",
        "selector": "0x4f39059c"
    },
    "0x458e3234": {
        "type": "function",
        "signature": "function set_new_TOKEN(address _new_TOKEN)",
        "selector": "0x458e3234"
    },
    "0x855fed81": {
        "type": "function",
        "signature": "function set_new_cDAI(address _new_cDAI)",
        "selector": "0x855fed81"
    },
    "0x89a642a9": {
        "type": "function",
        "signature": "function set_new_curveToken(address _new_set_new_curveToken)",
        "selector": "0x89a642a9"
    },
    "0xc532a774": {
        "type": "function",
        "signature": "function calc_withdraw_one_coin(uint256 _burn_amount, int128 i, bool _previous) view returns (uint256)",
        "selector": "0xc532a774"
    },
    "0x1ed86f19": {
        "type": "function",
        "signature": "function addModule(address module)",
        "selector": "0x1ed86f19"
    },
    "0x5cf1cd2b": {
        "type": "function",
        "signature": "function batchNotifyFor(address[] accounts)",
        "selector": "0x5cf1cd2b"
    },
    "0xec954594": {
        "type": "function",
        "signature": "function inchToken() view returns (address)",
        "selector": "0xec954594"
    },
    "0x899f5898": {
        "type": "function",
        "signature": "function notify()",
        "selector": "0x899f5898"
    },
    "0x132b4fc8": {
        "type": "function",
        "signature": "function notifyFor(address account)",
        "selector": "0x132b4fc8"
    },
    "0xa0632461": {
        "type": "function",
        "signature": "function removeModule(address module)",
        "selector": "0xa0632461"
    },
    "0xa694fc3a": {
        "type": "function",
        "signature": "function stake(uint256 amount)",
        "selector": "0xa694fc3a"
    },
    "0x131b9c04": {
        "type": "function",
        "signature": "function getEarnings(address tokenAddress) view returns (uint256)",
        "selector": "0x131b9c04"
    },
    "0x1e99d569": {
        "type": "function",
        "signature": "function nextStreamId() view returns (uint256)",
        "selector": "0x1e99d569"
    },
    "0x2b8a119d": {
        "type": "function",
        "signature": "function getCompoundingStream(uint256 streamId) view returns (address sender, address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 remainingBalance, uint256 ratePerSecond, uint256 exchangeRateInitial, uint256 senderSharePercentage, uint256 recipientSharePercentage)",
        "selector": "0x2b8a119d"
    },
    "0x3656eec2": {
        "type": "function",
        "signature": "function balanceOf(uint256 streamId, address who) view returns (uint256 balance)",
        "selector": "0x3656eec2"
    },
    "0x6db9241b": {
        "type": "function",
        "signature": "function cancelStream(uint256 streamId) returns (bool)",
        "selector": "0x6db9241b"
    },
    "0x7a9b2c6c": {
        "type": "function",
        "signature": "function withdrawFromStream(uint256 streamId, uint256 amount) returns (bool)",
        "selector": "0x7a9b2c6c"
    },
    "0x8129fc1c": {
        "type": "function",
        "signature": "function initialize()",
        "selector": "0x8129fc1c"
    },
    "0x8195aeaa": {
        "type": "function",
        "signature": "function createCompoundingStream(address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 senderSharePercentage, uint256 recipientSharePercentage) returns (uint256)",
        "selector": "0x8195aeaa"
    },
    "0x894e9a0d": {
        "type": "function",
        "signature": "function getStream(uint256 streamId) view returns (address sender, address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 remainingBalance, uint256 ratePerSecond)",
        "selector": "0x894e9a0d"
    },
    "0x8c9a3252": {
        "type": "function",
        "signature": "function interestOf(uint256 streamId, uint256 amount) returns (uint256 senderInterest, uint256 recipientInterest, uint256 sablierInterest)",
        "selector": "0x8c9a3252"
    },
    "0x9012c4a8": {
        "type": "function",
        "signature": "function updateFee(uint256 feePercentage)",
        "selector": "0x9012c4a8"
    },
    "0xa734d51b": {
        "type": "function",
        "signature": "function isCompoundingStream(uint256 streamId) view returns (bool)",
        "selector": "0xa734d51b"
    },
    "0xa82ccd4d": {
        "type": "function",
        "signature": "function deltaOf(uint256 streamId) view returns (uint256 delta)",
        "selector": "0xa82ccd4d"
    },
    "0xc1eb9ee0": {
        "type": "function",
        "signature": "function takeEarnings(address tokenAddress, uint256 amount)",
        "selector": "0xc1eb9ee0"
    },
    "0xc4d66de8": {
        "type": "function",
        "signature": "function initialize(address _adapter)",
        "selector": "0xc4d66de8"
    },
    "0xcc1b4bf6": {
        "type": "function",
        "signature": "function createStream(address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime) returns (uint256)",
        "selector": "0xcc1b4bf6"
    },
    "0xd2cba55c": {
        "type": "function",
        "signature": "function cTokenManager() view returns (address)",
        "selector": "0xd2cba55c"
    },
    "0x945bcec9": {
        "type": "function",
        "signature": "function batchSwap(uint8 kind, tuple(bytes32 poolId, uint256 assetInIndex, uint256 assetOutIndex, uint256 amount, bytes userData)[] swaps, address[] assets, tuple(address sender, bool fromInternalBalance, address recipient, bool toInternalBalance) funds, int256[] limits, uint256 deadline) payable returns (int256[] assetDeltas)",
        "selector": "0x945bcec9"
    },
    "0x7d3aeb96": {
        "type": "function",
        "signature": "function deregisterTokens(bytes32 poolId, address[] tokens)",
        "selector": "0x7d3aeb96"
    },
    "0x8bdb3913": {
        "type": "function",
        "signature": "function exitPool(bytes32 poolId, address sender, address recipient, tuple(address[] assets, uint256[] minAmountsOut, bytes userData, bool toInternalBalance) request)",
        "selector": "0x8bdb3913"
    },
    "0x5c38449e": {
        "type": "function",
        "signature": "function flashLoan(address recipient, address[] tokens, uint256[] amounts, bytes userData)",
        "selector": "0x5c38449e"
    },
    "0x851c1bb3": {
        "type": "function",
        "signature": "function getActionId(bytes4 selector) view returns (bytes32)",
        "selector": "0x851c1bb3"
    },
    "0xaaabadc5": {
        "type": "function",
        "signature": "function getAuthorizer() view returns (address)",
        "selector": "0xaaabadc5"
    },
    "0xed24911d": {
        "type": "function",
        "signature": "function getDomainSeparator() view returns (bytes32)",
        "selector": "0xed24911d"
    },
    "0x0f5a6efa": {
        "type": "function",
        "signature": "function getInternalBalance(address user, address[] tokens) view returns (uint256[] balances)",
        "selector": "0x0f5a6efa"
    },
    "0x90193b7c": {
        "type": "function",
        "signature": "function getNextNonce(address user) view returns (uint256)",
        "selector": "0x90193b7c"
    },
    "0x1c0de051": {
        "type": "function",
        "signature": "function getPausedState() view returns (bool paused, uint256 pauseWindowEndTime, uint256 bufferPeriodEndTime)",
        "selector": "0x1c0de051"
    },
    "0xf6c00927": {
        "type": "function",
        "signature": "function getPool(bytes32 poolId) view returns (address, uint8)",
        "selector": "0xf6c00927"
    },
    "0xb05f8e48": {
        "type": "function",
        "signature": "function getPoolTokenInfo(bytes32 poolId, address token) view returns (uint256 cash, uint256 managed, uint256 lastChangeBlock, address assetManager)",
        "selector": "0xb05f8e48"
    },
    "0xf94d4668": {
        "type": "function",
        "signature": "function getPoolTokens(bytes32 poolId) view returns (address[] tokens, uint256[] balances, uint256 lastChangeBlock)",
        "selector": "0xf94d4668"
    },
    "0xd2946c2b": {
        "type": "function",
        "signature": "function getProtocolFeesCollector() view returns (address)",
        "selector": "0xd2946c2b"
    },
    "0xfec90d72": {
        "type": "function",
        "signature": "function hasApprovedRelayer(address user, address relayer) view returns (bool)",
        "selector": "0xfec90d72"
    },
    "0xb95cac28": {
        "type": "function",
        "signature": "function joinPool(bytes32 poolId, address sender, address recipient, tuple(address[] assets, uint256[] maxAmountsIn, bytes userData, bool fromInternalBalance) request) payable",
        "selector": "0xb95cac28"
    },
    "0xe6c46092": {
        "type": "function",
        "signature": "function managePoolBalance(tuple(uint8 kind, bytes32 poolId, address token, uint256 amount)[] ops)",
        "selector": "0xe6c46092"
    },
    "0x0e8e3e84": {
        "type": "function",
        "signature": "function manageUserBalance(tuple(uint8 kind, address asset, uint256 amount, address sender, address recipient)[] ops) payable",
        "selector": "0x0e8e3e84"
    },
    "0xf84d066e": {
        "type": "function",
        "signature": "function queryBatchSwap(uint8 kind, tuple(bytes32 poolId, uint256 assetInIndex, uint256 assetOutIndex, uint256 amount, bytes userData)[] swaps, address[] assets, tuple(address sender, bool fromInternalBalance, address recipient, bool toInternalBalance) funds) returns (int256[])",
        "selector": "0xf84d066e"
    },
    "0x09b2760f": {
        "type": "function",
        "signature": "function registerPool(uint8 specialization) returns (bytes32)",
        "selector": "0x09b2760f"
    },
    "0x66a9c7d2": {
        "type": "function",
        "signature": "function registerTokens(bytes32 poolId, address[] tokens, address[] assetManagers)",
        "selector": "0x66a9c7d2"
    },
    "0x058a628f": {
        "type": "function",
        "signature": "function setAuthorizer(address newAuthorizer)",
        "selector": "0x058a628f"
    },
    "0x16c38b3c": {
        "type": "function",
        "signature": "function setPaused(bool paused)",
        "selector": "0x16c38b3c"
    },
    "0xfa6e671d": {
        "type": "function",
        "signature": "function setRelayerApproval(address sender, address relayer, bool approved)",
        "selector": "0xfa6e671d"
    },
    "0x52bbbe29": {
        "type": "function",
        "signature": "function swap(tuple(bytes32 poolId, uint8 kind, address assetIn, address assetOut, uint256 amount, bytes userData) singleSwap, tuple(address sender, bool fromInternalBalance, address recipient, bool toInternalBalance) funds, uint256 limit, uint256 deadline) payable returns (uint256 amountCalculated)",
        "selector": "0x52bbbe29"
    },
    "0xccd34cd5": {
        "type": "function",
        "signature": "function PRECISION_FACTOR() view returns (uint256)",
        "selector": "0xccd34cd5"
    },
    "0x097aad10": {
        "type": "function",
        "signature": "function calculatePendingRewards(address user) view returns (uint256)",
        "selector": "0x097aad10"
    },
    "0x6de26e38": {
        "type": "function",
        "signature": "function calculateSharePriceInLOOKS() view returns (uint256)",
        "selector": "0x6de26e38"
    },
    "0xab5e32af": {
        "type": "function",
        "signature": "function calculateSharesValueInLOOKS(address user) view returns (uint256)",
        "selector": "0xab5e32af"
    },
    "0xcb4aec61": {
        "type": "function",
        "signature": "function currentRewardPerBlock() view returns (uint256)",
        "selector": "0xcb4aec61"
    },
    "0x9a408321": {
        "type": "function",
        "signature": "function deposit(uint256 amount, bool claimRewardToken)",
        "selector": "0x9a408321"
    },
    "0x4641257d": {
        "type": "function",
        "signature": "function harvest()",
        "selector": "0x4641257d"
    },
    "0x40d2abae": {
        "type": "function",
        "signature": "function lastRewardAdjustment() view returns (uint256)",
        "selector": "0x40d2abae"
    },
    "0xa9f8d181": {
        "type": "function",
        "signature": "function lastRewardBlock() view returns (uint256)",
        "selector": "0xa9f8d181"
    },
    "0xa218141b": {
        "type": "function",
        "signature": "function lastUpdateBlock() view returns (uint256)",
        "selector": "0xa218141b"
    },
    "0x36db9fb2": {
        "type": "function",
        "signature": "function looksRareToken() view returns (address)",
        "selector": "0x36db9fb2"
    },
    "0x442da82f": {
        "type": "function",
        "signature": "function periodEndBlock() view returns (uint256)",
        "selector": "0x442da82f"
    },
    "0xdf136d65": {
        "type": "function",
        "signature": "function rewardPerTokenStored() view returns (uint256)",
        "selector": "0xdf136d65"
    },
    "0xf7c618c1": {
        "type": "function",
        "signature": "function rewardToken() view returns (address)",
        "selector": "0xf7c618c1"
    },
    "0x18a6bc32": {
        "type": "function",
        "signature": "function tokenDistributor() view returns (address)",
        "selector": "0x18a6bc32"
    },
    "0x3a98ef39": {
        "type": "function",
        "signature": "function totalShares() view returns (uint256)",
        "selector": "0x3a98ef39"
    },
    "0x97e50818": {
        "type": "function",
        "signature": "function updateRewards(uint256 reward, uint256 rewardDurationInBlocks)",
        "selector": "0x97e50818"
    },
    "0x1959a002": {
        "type": "function",
        "signature": "function userInfo(address) view returns (uint256 shares, uint256 userRewardPerTokenPaid, uint256 rewards)",
        "selector": "0x1959a002"
    },
    "0x38d07436": {
        "type": "function",
        "signature": "function withdraw(uint256 shares, bool claimRewardToken)",
        "selector": "0x38d07436"
    },
    "0x1c1c6fe5": {
        "type": "function",
        "signature": "function withdrawAll(bool claimRewardToken)",
        "selector": "0x1c1c6fe5"
    },
    "0xc7977be7": {
        "type": "function",
        "signature": "function EIP712_DOMAIN_TYPEHASH() view returns (bytes32)",
        "selector": "0xc7977be7"
    },
    "0x07502cc1": {
        "type": "function",
        "signature": "function SettleAggregateOrder(tuple(uint256 expiry, address taker_address, address[] maker_addresses, uint256[] maker_nonces, address[][] taker_tokens, address[][] maker_tokens, uint256[][] taker_amounts, uint256[][] maker_amounts, address receiver) order, bytes takerSig, tuple(uint8 signatureType, bytes signatureBytes)[] makerSigs) payable returns (bool)",
        "selector": "0x07502cc1"
    },
    "0x3f6e8a8e": {
        "type": "function",
        "signature": "function hashAggregateOrder(tuple(uint256 expiry, address taker_address, address[] maker_addresses, uint256[] maker_nonces, address[][] taker_tokens, address[][] maker_tokens, uint256[][] taker_amounts, uint256[][] maker_amounts, address receiver) order) view returns (bytes32)",
        "selector": "0x3f6e8a8e"
    },
    "0xf453f4e3": {
        "type": "function",
        "signature": "function hashPartialOrder(tuple(uint256 expiry, address taker_address, address maker_address, uint256 maker_nonce, address[] taker_tokens, address[] maker_tokens, uint256[] taker_amounts, uint256[] maker_amounts, address receiver) order) view returns (bytes32)",
        "selector": "0xf453f4e3"
    },
    "0xea7faa61": {
        "type": "function",
        "signature": "function registerAllowedOrderSigner(address signer, bool allowed)",
        "selector": "0xea7faa61"
    },
    "0x5b730ecd": {
        "type": "function",
        "signature": "function validateMakerSignature(address maker_address, bytes32 hash, tuple(uint8 signatureType, bytes signatureBytes) signature) view",
        "selector": "0x5b730ecd"
    },
    "0x42966c68": {
        "type": "function",
        "signature": "function burn(uint256 _value)",
        "selector": "0x42966c68"
    },
    "0xfc6f7865": {
        "type": "function",
        "signature": "function collect(tuple(uint256 tokenId, address recipient, uint128 amount0Max, uint128 amount1Max) params) payable returns (uint256 amount0, uint256 amount1)",
        "selector": "0xfc6f7865"
    },
    "0x13ead562": {
        "type": "function",
        "signature": "function createAndInitializePoolIfNecessary(address token0, address token1, uint24 fee, uint160 sqrtPriceX96) payable returns (address pool)",
        "selector": "0x13ead562"
    },
    "0x0c49ccbe": {
        "type": "function",
        "signature": "function decreaseLiquidity(tuple(uint256 tokenId, uint128 liquidity, uint256 amount0Min, uint256 amount1Min, uint256 deadline) params) payable returns (uint256 amount0, uint256 amount1)",
        "selector": "0x0c49ccbe"
    },
    "0x219f5d17": {
        "type": "function",
        "signature": "function increaseLiquidity(tuple(uint256 tokenId, uint256 amount0Desired, uint256 amount1Desired, uint256 amount0Min, uint256 amount1Min, uint256 deadline) params) payable returns (uint128 liquidity, uint256 amount0, uint256 amount1)",
        "selector": "0x219f5d17"
    },
    "0x88316456": {
        "type": "function",
        "signature": "function mint(tuple(address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint256 amount0Desired, uint256 amount1Desired, uint256 amount0Min, uint256 amount1Min, address recipient, uint256 deadline) params) payable returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)",
        "selector": "0x88316456"
    },
    "0x7ac2ff7b": {
        "type": "function",
        "signature": "function permit(address spender, uint256 tokenId, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable",
        "selector": "0x7ac2ff7b"
    },
    "0x99fbab88": {
        "type": "function",
        "signature": "function positions(uint256 tokenId) view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)",
        "selector": "0x99fbab88"
    },
    "0xd3487997": {
        "type": "function",
        "signature": "function uniswapV3MintCallback(uint256 amount0Owed, uint256 amount1Owed, bytes data)",
        "selector": "0xd3487997"
    },
    "0x4817a286": {
        "type": "function",
        "signature": "function batchSwapWithFee(uint8 kind, tuple(bytes32 poolId, uint256 assetInIndex, uint256 assetOutIndex, uint256 amount, bytes userData)[] swaps, address[] tokens, tuple(address sender, bool fromInternalBalance, address recipient, bool toInternalBalance) funds, int256[] limits, uint256 deadline, tuple(address account, address token, uint256 amount, bytes32 balance) feeTransfer) returns (int256[] tokenDeltas)",
        "selector": "0x4817a286"
    },
    "0x7d10d11f": {
        "type": "function",
        "signature": "function transferFromAccounts(tuple(address account, address token, uint256 amount, bytes32 balance)[] transfers)",
        "selector": "0x7d10d11f"
    },
    "0x93e4eaa9": {
        "type": "function",
        "signature": "function RUNE() view returns (address)",
        "selector": "0x93e4eaa9"
    },
    "0x1fece7b4": {
        "type": "function",
        "signature": "function deposit(address vault, address asset, uint256 amount, string memo) payable",
        "selector": "0x1fece7b4"
    },
    "0x44bc937b": {
        "type": "function",
        "signature": "function depositWithExpiry(address vault, address asset, uint256 amount, string memo, uint256 expiration) payable",
        "selector": "0x44bc937b"
    },
    "0x2923e82e": {
        "type": "function",
        "signature": "function returnVaultAssets(address router, address asgard, tuple(address asset, uint256 amount)[] coins, string memo) payable",
        "selector": "0x2923e82e"
    },
    "0x1b738b32": {
        "type": "function",
        "signature": "function transferAllowance(address router, address newVault, address asset, uint256 amount, string memo)",
        "selector": "0x1b738b32"
    },
    "0x574da717": {
        "type": "function",
        "signature": "function transferOut(address to, address asset, uint256 amount, string memo) payable",
        "selector": "0x574da717"
    },
    "0x4039fd4b": {
        "type": "function",
        "signature": "function transferOutAndCall(address aggregator, address finalToken, address to, uint256 amountOutMin, string memo) payable",
        "selector": "0x4039fd4b"
    },
    "0x03b6a673": {
        "type": "function",
        "signature": "function vaultAllowance(address vault, address token) view returns (uint256 amount)",
        "selector": "0x03b6a673"
    },
    "0x0a5ea466": {
        "type": "function",
        "signature": "function claimTokens(address token, address who, address dest, uint256 amount)",
        "selector": "0x0a5ea466"
    },
    "0xb1746b86": {
        "type": "function",
        "signature": "function burnGasToken(uint256 gasSpent)",
        "selector": "0xb1746b86"
    },
    "0xc91d59fe": {
        "type": "function",
        "signature": "function gasToken() view returns (address)",
        "selector": "0xc91d59fe"
    },
    "0xccf1af31": {
        "type": "function",
        "signature": "function gasTokenOwner() view returns (address)",
        "selector": "0xccf1af31"
    },
    "0xc04b8d59": {
        "type": "function",
        "signature": "function exactInput(tuple(bytes path, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum) params) payable returns (uint256 amountOut)",
        "selector": "0xc04b8d59"
    },
    "0x414bf389": {
        "type": "function",
        "signature": "function exactInputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountOut)",
        "selector": "0x414bf389"
    },
    "0xf28c0498": {
        "type": "function",
        "signature": "function exactOutput(tuple(bytes path, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum) params) payable returns (uint256 amountIn)",
        "selector": "0xf28c0498"
    },
    "0xdb3e2198": {
        "type": "function",
        "signature": "function exactOutputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountIn)",
        "selector": "0xdb3e2198"
    },
    "0x6f5ffb7e": {
        "type": "error",
        "signature": "error ContractLocked()",
        "selector": "0x6f5ffb7e"
    },
    "0x1231ae40": {
        "type": "error",
        "signature": "error ETHNotAccepted()",
        "selector": "0x1231ae40"
    },
    "0x2c4029e9": {
        "type": "error",
        "signature": "error ExecutionFailed(uint256 commandIndex, bytes message)",
        "selector": "0x2c4029e9"
    },
    "0xe7002877": {
        "type": "error",
        "signature": "error FromAddressIsNotOwner()",
        "selector": "0xe7002877"
    },
    "0x6a12f104": {
        "type": "error",
        "signature": "error InsufficientETH()",
        "selector": "0x6a12f104"
    },
    "0x675cae38": {
        "type": "error",
        "signature": "error InsufficientToken()",
        "selector": "0x675cae38"
    },
    "0xdeaa01e6": {
        "type": "error",
        "signature": "error InvalidBips()",
        "selector": "0xdeaa01e6"
    },
    "0xd76a1e9e": {
        "type": "error",
        "signature": "error InvalidCommandType(uint256 commandType)",
        "selector": "0xd76a1e9e"
    },
    "0x483a6929": {
        "type": "error",
        "signature": "error InvalidOwnerERC1155()",
        "selector": "0x483a6929"
    },
    "0x7dbe7e89": {
        "type": "error",
        "signature": "error InvalidOwnerERC721()",
        "selector": "0x7dbe7e89"
    },
    "0x20db8267": {
        "type": "error",
        "signature": "error InvalidPath()",
        "selector": "0x20db8267"
    },
    "0x7b9c8916": {
        "type": "error",
        "signature": "error InvalidReserves()",
        "selector": "0x7b9c8916"
    },
    "0xcc94a63a": {
        "type": "error",
        "signature": "error NoSlice()",
        "selector": "0xcc94a63a"
    },
    "0x3b99b53d": {
        "type": "error",
        "signature": "error SliceOutOfBounds()",
        "selector": "0x3b99b53d"
    },
    "0x47aaf07a": {
        "type": "error",
        "signature": "error SliceOverflow()",
        "selector": "0x47aaf07a"
    },
    "0xa78aa27f": {
        "type": "error",
        "signature": "error ToAddressOutOfBounds()",
        "selector": "0xa78aa27f"
    },
    "0x77146e62": {
        "type": "error",
        "signature": "error ToAddressOverflow()",
        "selector": "0x77146e62"
    },
    "0xd9096a3e": {
        "type": "error",
        "signature": "error ToUint24OutOfBounds()",
        "selector": "0xd9096a3e"
    },
    "0x855859b4": {
        "type": "error",
        "signature": "error ToUint24Overflow()",
        "selector": "0x855859b4"
    },
    "0x5bf6f916": {
        "type": "error",
        "signature": "error TransactionDeadlinePassed()",
        "selector": "0x5bf6f916"
    },
    "0x7d529919": {
        "type": "error",
        "signature": "error UnableToClaim()",
        "selector": "0x7d529919"
    },
    "0xc4bd89a9": {
        "type": "error",
        "signature": "error UnsafeCast()",
        "selector": "0xc4bd89a9"
    },
    "0xae52ad0c": {
        "type": "error",
        "signature": "error V2InvalidPath()",
        "selector": "0xae52ad0c"
    },
    "0x849eaf98": {
        "type": "error",
        "signature": "error V2TooLittleReceived()",
        "selector": "0x849eaf98"
    },
    "0x8ab0bc16": {
        "type": "error",
        "signature": "error V2TooMuchRequested()",
        "selector": "0x8ab0bc16"
    },
    "0xd4e0248e": {
        "type": "error",
        "signature": "error V3InvalidAmountOut()",
        "selector": "0xd4e0248e"
    },
    "0x32b13d91": {
        "type": "error",
        "signature": "error V3InvalidCaller()",
        "selector": "0x32b13d91"
    },
    "0x316cf0eb": {
        "type": "error",
        "signature": "error V3InvalidSwap()",
        "selector": "0x316cf0eb"
    },
    "0x39d35496": {
        "type": "error",
        "signature": "error V3TooLittleReceived()",
        "selector": "0x39d35496"
    },
    "0x739dbe52": {
        "type": "error",
        "signature": "error V3TooMuchRequested()",
        "selector": "0x739dbe52"
    },
    "0x709a1cc2": {
        "type": "function",
        "signature": "function collectRewards(bytes looksRareClaim)",
        "selector": "0x709a1cc2"
    },
    "0x24856bc3": {
        "type": "function",
        "signature": "function execute(bytes commands, bytes[] inputs) payable",
        "selector": "0x24856bc3"
    },
    "0x3593564c": {
        "type": "function",
        "signature": "function execute(bytes commands, bytes[] inputs, uint256 deadline) payable",
        "selector": "0x3593564c"
    },
    "0xbca8c7b5": {
        "type": "function",
        "signature": "function executeCall(address target, bytes callData) returns (bytes resultData)",
        "selector": "0xbca8c7b5"
    },
    "0xa217fddf": {
        "type": "function",
        "signature": "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
        "selector": "0xa217fddf"
    },
    "0x8e325979": {
        "type": "function",
        "signature": "function DELEGATION_CALLER() view returns (bytes32)",
        "selector": "0x8e325979"
    },
    "0x2c436e5b": {
        "type": "function",
        "signature": "function delegateType() view returns (uint256)",
        "selector": "0x2c436e5b"
    },
    "0x3672c911": {
        "type": "function",
        "signature": "function executeAuctionComplete(address, address buyer, bytes data) returns (bool)",
        "selector": "0x3672c911"
    },
    "0xf477e4fd": {
        "type": "function",
        "signature": "function executeAuctionRefund(address seller, address, bytes data) returns (bool)",
        "selector": "0xf477e4fd"
    },
    "0xc23725f9": {
        "type": "function",
        "signature": "function executeBid(address seller, address previousBidder, address, bytes data) returns (bool)",
        "selector": "0xc23725f9"
    },
    "0x16721626": {
        "type": "function",
        "signature": "function executeBuy(address seller, address buyer, bytes data) returns (bool)",
        "selector": "0x16721626"
    },
    "0xbc553f0f": {
        "type": "function",
        "signature": "function executeSell(address seller, address buyer, bytes data) returns (bool)",
        "selector": "0xbc553f0f"
    },
    "0x248a9ca3": {
        "type": "function",
        "signature": "function getRoleAdmin(bytes32 role) view returns (bytes32)",
        "selector": "0x248a9ca3"
    },
    "0x2f2ff15d": {
        "type": "function",
        "signature": "function grantRole(bytes32 role, address account)",
        "selector": "0x2f2ff15d"
    },
    "0x91d14854": {
        "type": "function",
        "signature": "function hasRole(bytes32 role, address account) view returns (bool)",
        "selector": "0x91d14854"
    },
    "0x36568abe": {
        "type": "function",
        "signature": "function renounceRole(bytes32 role, address account)",
        "selector": "0x36568abe"
    },
    "0xd547741f": {
        "type": "function",
        "signature": "function revokeRole(bytes32 role, address account)",
        "selector": "0xd547741f"
    },
    "0x3cbf4f8a": {
        "type": "function",
        "signature": "function transferBatch(tuple(address token, uint256 tokenId)[] pairs, address to)",
        "selector": "0x3cbf4f8a"
    },
    "0xb238b533": {
        "type": "function",
        "signature": "function addNativeLiquidity() payable",
        "selector": "0xb238b533"
    },
    "0xedd9587b": {
        "type": "function",
        "signature": "function addSupportedToken(address tokenAddress, uint256 minCapLimit, uint256 maxCapLimit)",
        "selector": "0xedd9587b"
    },
    "0x14fe72aa": {
        "type": "function",
        "signature": "function addTokenLiquidity(address tokenAddress, uint256 amount)",
        "selector": "0x14fe72aa"
    },
    "0xa0be06f9": {
        "type": "function",
        "signature": "function adminFee() view returns (uint256)",
        "selector": "0xa0be06f9"
    },
    "0xfcc4d59a": {
        "type": "function",
        "signature": "function adminFeeAccumulatedByToken(address) view returns (uint256)",
        "selector": "0xfcc4d59a"
    },
    "0x583bbc40": {
        "type": "function",
        "signature": "function baseGas() view returns (uint256)",
        "selector": "0x583bbc40"
    },
    "0xb6632cb3": {
        "type": "function",
        "signature": "function changeAdminFee(uint256 newAdminFee)",
        "selector": "0xb6632cb3"
    },
    "0x2cd271e7": {
        "type": "function",
        "signature": "function changePauser(address newPauser)",
        "selector": "0x2cd271e7"
    },
    "0x85a25597": {
        "type": "function",
        "signature": "function checkHashStatus(address tokenAddress, uint256 amount, address receiver, bytes depositHash) view returns (bytes32 hashSendTransaction, bool status)",
        "selector": "0x85a25597"
    },
    "0x13fe24e1": {
        "type": "function",
        "signature": "function depositErc20(address tokenAddress, address receiver, uint256 amount, uint256 toChainId)",
        "selector": "0x13fe24e1"
    },
    "0x02279b4a": {
        "type": "function",
        "signature": "function depositNative(address receiver, uint256 toChainId) payable",
        "selector": "0x02279b4a"
    },
    "0xe06179fe": {
        "type": "function",
        "signature": "function gasFeeAccumulatedByToken(address) view returns (uint256)",
        "selector": "0xe06179fe"
    },
    "0x2a905ccc": {
        "type": "function",
        "signature": "function getAdminFee() view returns (uint256)",
        "selector": "0x2a905ccc"
    },
    "0xab1635b7": {
        "type": "function",
        "signature": "function getExecutorManager() view returns (address)",
        "selector": "0xab1635b7"
    },
    "0xea526de7": {
        "type": "function",
        "signature": "function getLiquidity(address liquidityProviderAddress, address tokenAddress) view returns (uint256)",
        "selector": "0xea526de7"
    },
    "0x7008b548": {
        "type": "function",
        "signature": "function getPauser() view returns (address)",
        "selector": "0x7008b548"
    },
    "0xb187bd26": {
        "type": "function",
        "signature": "function isPaused() view returns (bool)",
        "selector": "0xb187bd26"
    },
    "0x6a8a3b96": {
        "type": "function",
        "signature": "function isPauser() view returns (bool)",
        "selector": "0x6a8a3b96"
    },
    "0xfc07ec25": {
        "type": "function",
        "signature": "function permitAndDepositErc20(address tokenAddress, address receiver, uint256 amount, uint256 toChainId, tuple(uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s) permitOptions)",
        "selector": "0xfc07ec25"
    },
    "0x6125ca02": {
        "type": "function",
        "signature": "function permitEIP2612AndDepositErc20(address tokenAddress, address receiver, uint256 amount, uint256 toChainId, tuple(uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s) permitOptions)",
        "selector": "0x6125ca02"
    },
    "0x760d098a": {
        "type": "function",
        "signature": "function processedHash(bytes32) view returns (bool)",
        "selector": "0x760d098a"
    },
    "0xf72780ef": {
        "type": "function",
        "signature": "function removeNativeLiquidity(uint256 amount)",
        "selector": "0xf72780ef"
    },
    "0x76319190": {
        "type": "function",
        "signature": "function removeSupportedToken(address tokenAddress)",
        "selector": "0x76319190"
    },
    "0x84d93612": {
        "type": "function",
        "signature": "function removeTokenLiquidity(address tokenAddress, uint256 amount)",
        "selector": "0x84d93612"
    },
    "0x8909bb83": {
        "type": "function",
        "signature": "function sendFundsToUser(address tokenAddress, uint256 amount, address receiver, bytes depositHash, uint256 tokenGasPrice)",
        "selector": "0x8909bb83"
    },
    "0xccb844e1": {
        "type": "function",
        "signature": "function setBaseGas(uint128 gas)",
        "selector": "0xccb844e1"
    },
    "0xef0d4572": {
        "type": "function",
        "signature": "function setExecutorManager(address _executorManagerAddress)",
        "selector": "0xef0d4572"
    },
    "0x8b56d0b7": {
        "type": "function",
        "signature": "function setTokenTransferOverhead(address tokenAddress, uint256 gasOverhead)",
        "selector": "0x8b56d0b7"
    },
    "0xda742228": {
        "type": "function",
        "signature": "function setTrustedForwarder(address forwarderAddress)",
        "selector": "0xda742228"
    },
    "0xba8dbea2": {
        "type": "function",
        "signature": "function tokensInfo(address) view returns (uint256 transferOverhead, bool supportedToken, uint256 minCap, uint256 maxCap, uint256 liquidity)",
        "selector": "0xba8dbea2"
    },
    "0x7da0a877": {
        "type": "function",
        "signature": "function trustedForwarder() view returns (address)",
        "selector": "0x7da0a877"
    },
    "0x56e3866d": {
        "type": "function",
        "signature": "function updateTokenCap(address tokenAddress, uint256 minCapLimit, uint256 maxCapLimit)",
        "selector": "0x56e3866d"
    },
    "0x486ff0cd": {
        "type": "function",
        "signature": "function versionRecipient() view returns (string)",
        "selector": "0x486ff0cd"
    },
    "0xc7e42b1b": {
        "type": "function",
        "signature": "function withdrawErc20(address tokenAddress)",
        "selector": "0xc7e42b1b"
    },
    "0x1ff14860": {
        "type": "function",
        "signature": "function withdrawErc20AdminFee(address tokenAddress, address receiver)",
        "selector": "0x1ff14860"
    },
    "0x1a2b4381": {
        "type": "function",
        "signature": "function withdrawErc20GasFee(address tokenAddress, address receiver)",
        "selector": "0x1a2b4381"
    },
    "0x50431ce4": {
        "type": "function",
        "signature": "function withdrawNative()",
        "selector": "0x50431ce4"
    },
    "0xfa181699": {
        "type": "function",
        "signature": "function withdrawNativeAdminFee(address receiver)",
        "selector": "0xfa181699"
    },
    "0x23868d6c": {
        "type": "function",
        "signature": "function withdrawNativeGasFee(address receiver)",
        "selector": "0x23868d6c"
    },
    "0x3dd7df50": {
        "type": "function",
        "signature": "function LOOKS_RARE_EXCHANGE() view returns (address)",
        "selector": "0x3dd7df50"
    },
    "0x33f2fa9f": {
        "type": "function",
        "signature": "function transferNonFungibleToken(address collection, address from, address to, uint256 tokenId, uint256)",
        "selector": "0x33f2fa9f"
    },
    "0x1878d1f1": {
        "type": "function",
        "signature": "function ETH_TOKEN_ADDRESS() view returns (address)",
        "selector": "0x1878d1f1"
    },
    "0xd337e37b": {
        "type": "function",
        "signature": "function pay(address src, uint256 srcAmount, address dest, address destAddress, uint256 maxDestAmount, uint256 minConversionRate, address walletId, bytes paymentData, bytes hint, address kyberNetworkProxy) payable",
        "selector": "0xd337e37b"
    },
    "0x48d67e1b": {
        "type": "function",
        "signature": "function decayPeriod() view returns (uint256)",
        "selector": "0x48d67e1b"
    },
    "0xeaadf848": {
        "type": "function",
        "signature": "function decayPeriodVote(uint256 vote)",
        "selector": "0xeaadf848"
    },
    "0x7e82a6f3": {
        "type": "function",
        "signature": "function decayPeriodVotes(address user) view returns (uint256)",
        "selector": "0x7e82a6f3"
    },
    "0x3049105d": {
        "type": "function",
        "signature": "function deposit(uint256[2] maxAmounts, uint256[2] minAmounts) payable returns (uint256 fairSupply, uint256[2] receivedAmounts)",
        "selector": "0x3049105d"
    },
    "0x9ea5ce0a": {
        "type": "function",
        "signature": "function depositFor(uint256[2] maxAmounts, uint256[2] minAmounts, address target) payable returns (uint256 fairSupply, uint256[2] receivedAmounts)",
        "selector": "0x9ea5ce0a"
    },
    "0xf76d13b4": {
        "type": "function",
        "signature": "function discardDecayPeriodVote()",
        "selector": "0xf76d13b4"
    },
    "0x93028d83": {
        "type": "function",
        "signature": "function discardFeeVote()",
        "selector": "0x93028d83"
    },
    "0x6669302a": {
        "type": "function",
        "signature": "function discardSlippageFeeVote()",
        "selector": "0x6669302a"
    },
    "0x11212d66": {
        "type": "function",
        "signature": "function feeVote(uint256 vote)",
        "selector": "0x11212d66"
    },
    "0x9aad141b": {
        "type": "function",
        "signature": "function feeVotes(address user) view returns (uint256)",
        "selector": "0x9aad141b"
    },
    "0xd7d3aab5": {
        "type": "function",
        "signature": "function getBalanceForAddition(address token) view returns (uint256)",
        "selector": "0xd7d3aab5"
    },
    "0xe7ff42c9": {
        "type": "function",
        "signature": "function getBalanceForRemoval(address token) view returns (uint256)",
        "selector": "0xe7ff42c9"
    },
    "0x1e1401f8": {
        "type": "function",
        "signature": "function getReturn(address src, address dst, uint256 amount) view returns (uint256)",
        "selector": "0x1e1401f8"
    },
    "0xd9a0c217": {
        "type": "function",
        "signature": "function mooniswapFactoryGovernance() view returns (address)",
        "selector": "0xd9a0c217"
    },
    "0xc40d4d66": {
        "type": "function",
        "signature": "function setMooniswapFactoryGovernance(address newMooniswapFactoryGovernance)",
        "selector": "0xc40d4d66"
    },
    "0x3732b394": {
        "type": "function",
        "signature": "function slippageFee() view returns (uint256)",
        "selector": "0x3732b394"
    },
    "0x07a80070": {
        "type": "function",
        "signature": "function slippageFeeVote(uint256 vote)",
        "selector": "0x07a80070"
    },
    "0x95cad3c7": {
        "type": "function",
        "signature": "function slippageFeeVotes(address user) view returns (uint256)",
        "selector": "0x95cad3c7"
    },
    "0xd5bcb9b5": {
        "type": "function",
        "signature": "function swap(address src, address dst, uint256 amount, uint256 minReturn, address referral) payable returns (uint256 result)",
        "selector": "0xd5bcb9b5"
    },
    "0xe331d039": {
        "type": "function",
        "signature": "function swapFor(address src, address dst, uint256 amount, uint256 minReturn, address referral, address receiver) payable returns (uint256 result)",
        "selector": "0xe331d039"
    },
    "0x0dfe1681": {
        "type": "function",
        "signature": "function token0() view returns (address)",
        "selector": "0x0dfe1681"
    },
    "0xd21220a7": {
        "type": "function",
        "signature": "function token1() view returns (address)",
        "selector": "0xd21220a7"
    },
    "0x6edc2c09": {
        "type": "function",
        "signature": "function virtualBalancesForAddition(address) view returns (uint216 balance, uint40 time)",
        "selector": "0x6edc2c09"
    },
    "0x5ed9156d": {
        "type": "function",
        "signature": "function virtualBalancesForRemoval(address) view returns (uint216 balance, uint40 time)",
        "selector": "0x5ed9156d"
    },
    "0x0146081f": {
        "type": "function",
        "signature": "function virtualDecayPeriod() view returns (uint104, uint104, uint48)",
        "selector": "0x0146081f"
    },
    "0xf1ea6042": {
        "type": "function",
        "signature": "function virtualFee() view returns (uint104, uint104, uint48)",
        "selector": "0xf1ea6042"
    },
    "0x23e8cae1": {
        "type": "function",
        "signature": "function virtualSlippageFee() view returns (uint104, uint104, uint48)",
        "selector": "0x23e8cae1"
    },
    "0xb1ec4c40": {
        "type": "function",
        "signature": "function volumes(address) view returns (uint128 confirmed, uint128 result)",
        "selector": "0xb1ec4c40"
    },
    "0x5915d806": {
        "type": "function",
        "signature": "function withdraw(uint256 amount, uint256[] minReturns) returns (uint256[2] withdrawnAmounts)",
        "selector": "0x5915d806"
    },
    "0x3c6216a6": {
        "type": "function",
        "signature": "function withdrawFor(uint256 amount, uint256[] minReturns, address target) returns (uint256[2] withdrawnAmounts)",
        "selector": "0x3c6216a6"
    },
    "0xa82719c8": {
        "type": "function",
        "signature": "function bondingCurveAllowed(address) view returns (bool)",
        "selector": "0xa82719c8"
    },
    "0x1fba95e8": {
        "type": "function",
        "signature": "function callAllowed(address) view returns (bool)",
        "selector": "0x1fba95e8"
    },
    "0x9c3c11d2": {
        "type": "function",
        "signature": "function changeProtocolFeeMultiplier(uint256 _protocolFeeMultiplier)",
        "selector": "0x9c3c11d2"
    },
    "0x514f0330": {
        "type": "function",
        "signature": "function changeProtocolFeeRecipient(address _protocolFeeRecipient)",
        "selector": "0x514f0330"
    },
    "0x59722caa": {
        "type": "function",
        "signature": "function createPairERC20(tuple(address token, address nft, address bondingCurve, address assetRecipient, uint8 poolType, uint128 delta, uint96 fee, uint128 spotPrice, uint256[] initialNFTIDs, uint256 initialTokenBalance) params) returns (address pair)",
        "selector": "0x59722caa"
    },
    "0xce9c095d": {
        "type": "function",
        "signature": "function createPairETH(address _nft, address _bondingCurve, address _assetRecipient, uint8 _poolType, uint128 _delta, uint96 _fee, uint128 _spotPrice, uint256[] _initialNFTIDs) payable returns (address pair)",
        "selector": "0xce9c095d"
    },
    "0x1cad5a40": {
        "type": "function",
        "signature": "function depositERC20(address token, address recipient, uint256 amount)",
        "selector": "0x1cad5a40"
    },
    "0x2cdb394b": {
        "type": "function",
        "signature": "function depositNFTs(address _nft, uint256[] ids, address recipient)",
        "selector": "0x2cdb394b"
    },
    "0xa427f1ad": {
        "type": "function",
        "signature": "function enumerableERC20Template() view returns (address)",
        "selector": "0xa427f1ad"
    },
    "0xad2e5770": {
        "type": "function",
        "signature": "function enumerableETHTemplate() view returns (address)",
        "selector": "0xad2e5770"
    },
    "0x08f25a8f": {
        "type": "function",
        "signature": "function isPair(address potentialPair, uint8 variant) view returns (bool)",
        "selector": "0x08f25a8f"
    },
    "0x4c6bc433": {
        "type": "function",
        "signature": "function missingEnumerableERC20Template() view returns (address)",
        "selector": "0x4c6bc433"
    },
    "0x004885ea": {
        "type": "function",
        "signature": "function missingEnumerableETHTemplate() view returns (address)",
        "selector": "0x004885ea"
    },
    "0x1ce4c78b": {
        "type": "function",
        "signature": "function protocolFeeMultiplier() view returns (uint256)",
        "selector": "0x1ce4c78b"
    },
    "0xa93ec68b": {
        "type": "function",
        "signature": "function routerStatus(address) view returns (bool allowed, bool wasEverAllowed)",
        "selector": "0xa93ec68b"
    },
    "0x4bf107c1": {
        "type": "function",
        "signature": "function setBondingCurveAllowed(address bondingCurve, bool isAllowed)",
        "selector": "0x4bf107c1"
    },
    "0xebd0f693": {
        "type": "function",
        "signature": "function setCallAllowed(address target, bool isAllowed)",
        "selector": "0xebd0f693"
    },
    "0x6cc88edb": {
        "type": "function",
        "signature": "function setRouterAllowed(address _router, bool isAllowed)",
        "selector": "0x6cc88edb"
    },
    "0xcc5bc20b": {
        "type": "function",
        "signature": "function withdrawERC20ProtocolFees(address token, uint256 amount)",
        "selector": "0xcc5bc20b"
    },
    "0xb483eddc": {
        "type": "function",
        "signature": "function withdrawETHProtocolFees()",
        "selector": "0xb483eddc"
    },
    "0xdd1fe62c": {
        "type": "function",
        "signature": "function freeReduxTokens(address user, uint256 tokensToFree)",
        "selector": "0xdd1fe62c"
    },
    "0x7fb93127": {
        "type": "function",
        "signature": "function reduxToken() view returns (address)",
        "selector": "0x7fb93127"
    },
    "0xa619486e": {
        "type": "function",
        "signature": "function masterCopy() view returns (address)",
        "selector": "0xa619486e"
    },
    "0x48ccda3c": {
        "type": "function",
        "signature": "function AAVE() view returns (address)",
        "selector": "0x48ccda3c"
    },
    "0x0542975c": {
        "type": "function",
        "signature": "function ADDRESSES_PROVIDER() view returns (address)",
        "selector": "0x0542975c"
    },
    "0xf301e781": {
        "type": "function",
        "signature": "function LEND() view returns (address)",
        "selector": "0xf301e781"
    },
    "0xb4dcfc77": {
        "type": "function",
        "signature": "function LENDING_POOL() view returns (address)",
        "selector": "0xb4dcfc77"
    },
    "0xa56152e8": {
        "type": "function",
        "signature": "function LENDING_POOL_V1() view returns (address)",
        "selector": "0xa56152e8"
    },
    "0x3bcb753f": {
        "type": "function",
        "signature": "function LENDING_POOL_V1_CORE() view returns (address)",
        "selector": "0x3bcb753f"
    },
    "0x4484c213": {
        "type": "function",
        "signature": "function LEND_TO_AAVE_MIGRATOR() view returns (address)",
        "selector": "0x4484c213"
    },
    "0x920f5c84": {
        "type": "function",
        "signature": "function executeOperation(address[] assets, uint256[] amounts, uint256[] premiums, address initiator, bytes params) returns (bool)",
        "selector": "0x920f5c84"
    },
    "0x6321c7e8": {
        "type": "function",
        "signature": "function migrateATokens(address[] v1ATokens, uint256[] aTokensAmounts)",
        "selector": "0x6321c7e8"
    },
    "0x2e0e9fbd": {
        "type": "function",
        "signature": "function relayers(address, uint256) view returns (bool)",
        "selector": "0x2e0e9fbd"
    },
    "0x482879aa": {
        "type": "function",
        "signature": "function sablier() view returns (address)",
        "selector": "0x482879aa"
    },
    "0x52e877d2": {
        "type": "function",
        "signature": "function whitelistRelayer(address relayer, uint256 salaryId)",
        "selector": "0x52e877d2"
    },
    "0x591bc226": {
        "type": "function",
        "signature": "function discardRelayer(address relayer, uint256 salaryId)",
        "selector": "0x591bc226"
    },
    "0x73f4823e": {
        "type": "function",
        "signature": "function createCompoundingSalary(address employee, uint256 salary, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 senderSharePercentage, uint256 recipientSharePercentage) returns (uint256 salaryId)",
        "selector": "0x73f4823e"
    },
    "0x74e861d6": {
        "type": "function",
        "signature": "function getHubAddr() view returns (address)",
        "selector": "0x74e861d6"
    },
    "0x80274db7": {
        "type": "function",
        "signature": "function preRelayedCall(bytes context) returns (bytes32)",
        "selector": "0x80274db7"
    },
    "0x80bfacc2": {
        "type": "function",
        "signature": "function getSalary(uint256 salaryId) view returns (address company, address employee, uint256 salary, address tokenAddress, uint256 startTime, uint256 stopTime, uint256 remainingBalance, uint256 rate)",
        "selector": "0x80bfacc2"
    },
    "0x83947ea0": {
        "type": "function",
        "signature": "function acceptRelayedCall(address relay, address from, bytes encodedFunction, uint256 transactionFee, uint256 gasPrice, uint256 gasLimit, uint256 nonce, bytes approvalData, uint256) view returns (uint256, bytes)",
        "selector": "0x83947ea0"
    },
    "0xad61ccd5": {
        "type": "function",
        "signature": "function relayHubVersion() view returns (string)",
        "selector": "0xad61ccd5"
    },
    "0xc0c53b8b": {
        "type": "function",
        "signature": "function initialize(address ownerAddress, address signerAddress, address sablierAddress)",
        "selector": "0xc0c53b8b"
    },
    "0xc5a66ff9": {
        "type": "function",
        "signature": "function cancelSalary(uint256 salaryId) returns (bool success)",
        "selector": "0xc5a66ff9"
    },
    "0xdc7d9369": {
        "type": "function",
        "signature": "function createSalary(address employee, uint256 salary, address tokenAddress, uint256 startTime, uint256 stopTime) returns (uint256 salaryId)",
        "selector": "0xdc7d9369"
    },
    "0xde8fd678": {
        "type": "function",
        "signature": "function nextSalaryId() view returns (uint256)",
        "selector": "0xde8fd678"
    },
    "0xe06e0e22": {
        "type": "function",
        "signature": "function postRelayedCall(bytes context, bool success, uint256 actualCharge, bytes32 preRetVal)",
        "selector": "0xe06e0e22"
    },
    "0xfea7c53f": {
        "type": "function",
        "signature": "function withdrawFromSalary(uint256 salaryId, uint256 amount) returns (bool success)",
        "selector": "0xfea7c53f"
    },
    "0x0510111e": {
        "type": "function",
        "signature": "function MAXIMUM_COLLATERALIZATION_LIMIT() view returns (uint256)",
        "selector": "0x0510111e"
    },
    "0x30d4d190": {
        "type": "function",
        "signature": "function MINIMUM_COLLATERALIZATION_LIMIT() view returns (uint256)",
        "selector": "0x30d4d190"
    },
    "0x45f867b3": {
        "type": "function",
        "signature": "function PERCENT_RESOLUTION() view returns (uint256)",
        "selector": "0x45f867b3"
    },
    "0x538ba4f9": {
        "type": "function",
        "signature": "function ZERO_ADDRESS() view returns (address)",
        "selector": "0x538ba4f9"
    },
    "0xa005fda3": {
        "type": "function",
        "signature": "function _linkGasOracle() view returns (address)",
        "selector": "0xa005fda3"
    },
    "0x238efcbc": {
        "type": "function",
        "signature": "function acceptGovernance()",
        "selector": "0x238efcbc"
    },
    "0x4aaf7c65": {
        "type": "function",
        "signature": "function collateralizationLimit() view returns (tuple(uint256 x))",
        "selector": "0x4aaf7c65"
    },
    "0x5641ec03": {
        "type": "function",
        "signature": "function emergencyExit() view returns (bool)",
        "selector": "0x5641ec03"
    },
    "0x6b9f96ea": {
        "type": "function",
        "signature": "function flush() returns (uint256)",
        "selector": "0x6b9f96ea"
    },
    "0xf0d787a3": {
        "type": "function",
        "signature": "function flushActivator() view returns (uint256)",
        "selector": "0xf0d787a3"
    },
    "0x9a9af221": {
        "type": "function",
        "signature": "function getCdpLastDeposit(address _account) view returns (uint256)",
        "selector": "0x9a9af221"
    },
    "0xfc00e8a0": {
        "type": "function",
        "signature": "function getCdpTotalCredit(address _account) view returns (uint256)",
        "selector": "0xfc00e8a0"
    },
    "0xaa6e0434": {
        "type": "function",
        "signature": "function getCdpTotalDebt(address _account) view returns (uint256)",
        "selector": "0xaa6e0434"
    },
    "0xa1e401a9": {
        "type": "function",
        "signature": "function getCdpTotalDeposited(address _account) view returns (uint256)",
        "selector": "0xa1e401a9"
    },
    "0x2670fdd8": {
        "type": "function",
        "signature": "function getVaultAdapter(uint256 _vaultId) view returns (address)",
        "selector": "0x2670fdd8"
    },
    "0xaaf16660": {
        "type": "function",
        "signature": "function getVaultTotalDeposited(uint256 _vaultId) view returns (uint256)",
        "selector": "0xaaf16660"
    },
    "0xddc63262": {
        "type": "function",
        "signature": "function harvest(uint256 _vaultId) returns (uint256, uint256)",
        "selector": "0xddc63262"
    },
    "0xb5962917": {
        "type": "function",
        "signature": "function harvestFee() view returns (uint256)",
        "selector": "0xb5962917"
    },
    "0x158ef93e": {
        "type": "function",
        "signature": "function initialized() view returns (bool)",
        "selector": "0x158ef93e"
    },
    "0x415f1240": {
        "type": "function",
        "signature": "function liquidate(uint256 _amount) returns (uint256, uint256)",
        "selector": "0x415f1240"
    },
    "0xce5494bb": {
        "type": "function",
        "signature": "function migrate(address _adapter)",
        "selector": "0xce5494bb"
    },
    "0x3847f038": {
        "type": "function",
        "signature": "function pegMinimum() view returns (uint256)",
        "selector": "0x3847f038"
    },
    "0xf39c38a0": {
        "type": "function",
        "signature": "function pendingGovernance() view returns (address)",
        "selector": "0xf39c38a0"
    },
    "0xfefdc5d1": {
        "type": "function",
        "signature": "function recall(uint256 _vaultId, uint256 _amount) returns (uint256, uint256)",
        "selector": "0xfefdc5d1"
    },
    "0x4c3a8e02": {
        "type": "function",
        "signature": "function recallAll(uint256 _vaultId) returns (uint256, uint256)",
        "selector": "0x4c3a8e02"
    },
    "0xd8aed145": {
        "type": "function",
        "signature": "function repay(uint256 _parentAmount, uint256 _childAmount)",
        "selector": "0xd8aed145"
    },
    "0x9ec5a894": {
        "type": "function",
        "signature": "function rewards() view returns (address)",
        "selector": "0x9ec5a894"
    },
    "0xf58c251c": {
        "type": "function",
        "signature": "function sentinel() view returns (address)",
        "selector": "0xf58c251c"
    },
    "0x53ffa18b": {
        "type": "function",
        "signature": "function setCollateralizationLimit(uint256 _limit)",
        "selector": "0x53ffa18b"
    },
    "0x45ee0755": {
        "type": "function",
        "signature": "function setEmergencyExit(bool _emergencyExit)",
        "selector": "0x45ee0755"
    },
    "0x22c37b75": {
        "type": "function",
        "signature": "function setFlushActivator(uint256 _flushActivator)",
        "selector": "0x22c37b75"
    },
    "0x792b55b6": {
        "type": "function",
        "signature": "function setHarvestFee(uint256 _harvestFee)",
        "selector": "0x792b55b6"
    },
    "0x5a9b5e92": {
        "type": "function",
        "signature": "function setOracleAddress(address Oracle, uint256 peg)",
        "selector": "0x5a9b5e92"
    },
    "0x0abb6035": {
        "type": "function",
        "signature": "function setPendingGovernance(address _pendingGovernance)",
        "selector": "0x0abb6035"
    },
    "0xec38a862": {
        "type": "function",
        "signature": "function setRewards(address _rewards)",
        "selector": "0xec38a862"
    },
    "0x09dac061": {
        "type": "function",
        "signature": "function setSentinel(address _sentinel)",
        "selector": "0x09dac061"
    },
    "0xadb4a9ad": {
        "type": "function",
        "signature": "function setTransmuter(address _transmuter)",
        "selector": "0xadb4a9ad"
    },
    "0xff50abdc": {
        "type": "function",
        "signature": "function totalDeposited() view returns (uint256)",
        "selector": "0xff50abdc"
    },
    "0x7239d2b9": {
        "type": "function",
        "signature": "function transmuter() view returns (address)",
        "selector": "0x7239d2b9"
    },
    "0xa7c6a100": {
        "type": "function",
        "signature": "function vaultCount() view returns (uint256)",
        "selector": "0xa7c6a100"
    },
    "0x1718a68f": {
        "type": "function",
        "signature": "function xtoken() view returns (address)",
        "selector": "0x1718a68f"
    },
    "0xbb038e15": {
        "type": "function",
        "signature": "function cdpManager() view returns (address)",
        "selector": "0xbb038e15"
    },
    "0xe19b8ee3": {
        "type": "function",
        "signature": "function migrate(bytes32 cup) returns (uint256 cdp)",
        "selector": "0xe19b8ee3"
    },
    "0x0b14408f": {
        "type": "function",
        "signature": "function saiJoin() view returns (address)",
        "selector": "0x0b14408f"
    },
    "0xc41780ba": {
        "type": "function",
        "signature": "function swapDaiToSai(uint256 wad)",
        "selector": "0xc41780ba"
    },
    "0xfbabdebd": {
        "type": "function",
        "signature": "function swapSaiToDai(uint256 wad)",
        "selector": "0xfbabdebd"
    },
    "0x34e70cc2": {
        "type": "function",
        "signature": "function tub() view returns (address)",
        "selector": "0x34e70cc2"
    },
    "0x2dbacef3": {
        "type": "function",
        "signature": "function wethJoin() view returns (address)",
        "selector": "0x2dbacef3"
    },
    "0x1652e9fc": {
        "type": "function",
        "signature": "function set_minter(address _minter)",
        "selector": "0x1652e9fc"
    },
    "0x40c10f19": {
        "type": "function",
        "signature": "function mint(address _to, uint256 _value)",
        "selector": "0x40c10f19"
    },
    "0x79cc6790": {
        "type": "function",
        "signature": "function burnFrom(address _to, uint256 _value)",
        "selector": "0x79cc6790"
    }
}