import humanizerInfo from '../../../../consts/humanizer/humanizerInfo.json'
import { AccountOp } from '../../../accountOp/accountOp'
import { HumanizerMeta } from '../../interfaces'
import { compareHumanizerVisualizations } from '../../testHelpers'
import { getAction, getAddressVisualization, getDeadline, getLabel, getToken } from '../../utils'
import traderJoe from './'

const transactions = [
  // exact NATIVE for USDC.e
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 830670960717642935n,
    data: '0xb066ea7c00000000000000000000000000000000000000000000000000000000ae17c7930000000000000000000000000000000000000000000000000000000000000080000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa9604500000000000000000000000000000000000000000000000000000000667037d5000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000300000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8'
  },
  // NATIVE for exact USDC.e
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 285542766666547n,
    data: '0x2075ad2200000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa96045000000000000000000000000000000000000000000000000000000006670469c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8'
  },
  // exact USDC to NATIVE
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 0n,
    data: '0x9ab6156b000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000083035ef2c600000000000000000000000000000000000000000000000000000000000000a00000000000000000000000006969174fd72466430a46e18234d0b530c9fd5f49000000000000000000000000000000000000000000000000000000006670498a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000cb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e000000000000000000000000fd538ca3f58dc309da55b11f007ff53fb4602876000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7'
  },
  // swap tokens for exact NATIVE
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 0n,
    data: '0x3dc8f8ec00000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000000000006f5400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000006969174fd72466430a46e18234d0b530c9fd5f490000000000000000000000000000000000000000000000000000000066704aef000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000cb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c7000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7'
  },
  // exact token for token
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 0n,
    data: '0x2a443fae000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000007995e208612500000000000000000000000000000000000000000000000000000000000000a00000000000000000000000006969174fd72466430a46e18234d0b530c9fd5f490000000000000000000000000000000000000000000000000000000066704c73000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000cb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c700000000000000000000000063a72806098bd3d9520cc43356dd78afe5d386d9'
  },
  // tokens for exact tokens
  {
    to: '0x18556DA13313f3532c54711497A8FedAC273220E',
    value: 0n,
    data: '0x92fe8e7000000000000000000000000000000000000000000000000000005af3107a40000000000000000000000000000000000000000000000000000000000000001d3900000000000000000000000000000000000000000000000000000000000000a00000000000000000000000006969174fd72466430a46e18234d0b530c9fd5f490000000000000000000000000000000000000000000000000000000066704eb0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000cb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c700000000000000000000000063a72806098bd3d9520cc43356dd78afe5d386d9'
  }
]
const accountOp: AccountOp = {
  accountAddr: '0xB674F3fd5F43464dB0448a57529eAF37F04cceA5',
  chainId: 42161n,
  // this may not be defined, in case the user has not picked a key yet
  signingKeyAddr: null,
  signingKeyType: null,
  // this may not be set in case we haven't set it yet
  nonce: null,
  calls: [],
  gasLimit: null,
  signature: null,
  gasFeePayment: null,
  // This is used when we have an account recovery to finalize before executing the AccountOp,
  // And we set this to the recovery finalization AccountOp; could be used in other scenarios too in the future,
  // for example account migration (from v1 QuickAcc to v2)
  accountOpToExecuteBefore: null
  // This is fed into the humanizer to help visualize the accountOp
  // This can contain info like the value of specific share tokens at the time of signing,
  // or any other data that needs to otherwise be retrieved in an async manner and/or needs to be
  // "remembered" at the time of signing in order to visualize history properly
  // humanizerMeta: {}
}

describe('trader joe', () => {
  test('basic', () => {
    const expectedVisualization = [
      [
        getAction('Swap'),
        getToken('0x0000000000000000000000000000000000000000', 830670960717642935n),
        getLabel('for at least'),
        getToken('0xff970a61a04b1ca14834a43f5de4533ebddb5cc8', 2920794003n),
        getLabel('and send it to'),
        getAddressVisualization('0xd8da6bf26964af9d7eed9e03e53415d37aa96045'),
        getDeadline(1718630357n)
      ],
      [
        getAction('Swap up to'),
        getToken('0x0000000000000000000000000000000000000000', 285542766666547n),
        getLabel('for'),
        getToken('0xff970a61a04b1ca14834a43f5de4533ebddb5cc8', 1000000n),
        getLabel('and send it to'),
        getAddressVisualization('0xd8da6bf26964af9d7eed9e03e53415d37aa96045'),
        getDeadline(1718634140n)
      ],
      [
        getAction('Swap'),
        getToken('0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e', 1n),
        getLabel('for at least'),
        getToken('0x0000000000000000000000000000000000000000', 562697269958n),
        getLabel('and send it to'),
        getAddressVisualization('0x6969174FD72466430a46e18234D0b530c9FD5f49'),
        getDeadline(1718634890n)
      ],
      [
        getAction('Swap up to'),
        getToken('0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e', 28500n),
        getLabel('for'),
        getToken('0x0000000000000000000000000000000000000000', 1000000000000000n),
        getLabel('and send it to'),
        getAddressVisualization('0x6969174FD72466430a46e18234D0b530c9FD5f49'),
        getDeadline(1718635247n)
      ],
      [
        getAction('Swap'),
        getToken('0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e', 10000n),
        getLabel('for at least'),
        getToken('0x63a72806098bd3d9520cc43356dd78afe5d386d9', 133684649287973n),
        getLabel('and send it to'),
        getAddressVisualization('0x6969174FD72466430a46e18234D0b530c9FD5f49'),
        getDeadline(1718635635n)
      ],
      [
        getAction('Swap up to'),
        getToken('0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e', 7481n),
        getLabel('for'),
        getToken('0x63a72806098bd3d9520cc43356dd78afe5d386d9', 100000000000000n),
        getLabel('and send it to'),
        getAddressVisualization('0x6969174FD72466430a46e18234D0b530c9FD5f49'),
        getDeadline(1718636208n)
      ]
    ]
    const irCalls = traderJoe(accountOp, transactions, humanizerInfo as HumanizerMeta)

    compareHumanizerVisualizations(irCalls, expectedVisualization)
  })
})
