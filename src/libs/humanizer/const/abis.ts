export const AaveLendingPoolV2 = [
    'function FLASHLOAN_PREMIUM_TOTAL() view returns (uint256)',
    'function LENDINGPOOL_REVISION() view returns (uint256)',
    'function MAX_NUMBER_RESERVES() view returns (uint256)',
    'function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() view returns (uint256)',
    'function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf)',
    'function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)',
    'function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromBefore, uint256 balanceToBefore)',
    'function flashLoan(address receiverAddress, address[] assets, uint256[] amounts, uint256[] modes, address onBehalfOf, bytes params, uint16 referralCode)',
    'function getAddressesProvider() view returns (address)',
    'function getConfiguration(address asset) view returns ((uint256 data))',
    'function getReserveData(address asset) view returns (((uint256 data) configuration, uint128 liquidityIndex, uint128 variableBorrowIndex, uint128 currentLiquidityRate, uint128 currentVariableBorrowRate, uint128 currentStableBorrowRate, uint40 lastUpdateTimestamp, address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress, address interestRateStrategyAddress, uint8 id))',
    'function getReserveNormalizedIncome(address asset) view returns (uint256)',
    'function getReserveNormalizedVariableDebt(address asset) view returns (uint256)',
    'function getReservesList() view returns (address[])',
    'function getUserAccountData(address user) view returns (uint256 totalCollateralETH, uint256 totalDebtETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)',
    'function getUserConfiguration(address user) view returns ((uint256 data))',
    'function initReserve(address asset, address aTokenAddress, address stableDebtAddress, address variableDebtAddress, address interestRateStrategyAddress)',
    'function initialize(address provider)',
    'function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken)',
    'function paused() view returns (bool)',
    'function rebalanceStableBorrowRate(address asset, address user)',
    'function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) returns (uint256)',
    'function setConfiguration(address asset, uint256 configuration)',
    'function setPause(bool val)',
    'function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)',
    'function setUserUseReserveAsCollateral(address asset, bool useAsCollateral)',
    'function swapBorrowRateMode(address asset, uint256 rateMode)',
    'function withdraw(address asset, uint256 amount, address to) returns (uint256)'
  ]

export const AaveWethGatewayV2 = [
    'function authorizeLendingPool(address lendingPool)',
    'function borrowETH(address lendingPool, uint256 amount, uint256 interesRateMode, uint16 referralCode)',
    'function depositETH(address lendingPool, address onBehalfOf, uint16 referralCode) payable',
    'function emergencyEtherTransfer(address to, uint256 amount)',
    'function emergencyTokenTransfer(address token, address to, uint256 amount)',
    'function getWETHAddress() view returns (address)',
    'function owner() view returns (address)',
    'function renounceOwnership()',
    'function repayETH(address lendingPool, uint256 amount, uint256 rateMode, address onBehalfOf) payable',
    'function transferOwnership(address newOwner)',
    'function withdrawETH(address lendingPool, uint256 amount, address to)'
]

export const UniswapUniversalRouter = [
    'function collectRewards(bytes looksRareClaim)',
    'function execute(bytes commands, bytes[] inputs) payable',
    'function execute(bytes commands, bytes[] inputs, uint256 deadline) payable',
    'function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) pure returns (bytes4)',
    'function onERC1155Received(address, address, uint256, uint256, bytes) pure returns (bytes4)',
    'function onERC721Received(address, address, uint256, bytes) pure returns (bytes4)',
    'function supportsInterface(bytes4 interfaceId) pure returns (bool)',
    'function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)'
]

export const UniV2Router = [
    'function WETH() view returns (address)',
    'function addLiquidity(address tokenA, address tokenB, uint256 amountADesired, uint256 amountBDesired, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB, uint256 liquidity)',
    'function addLiquidityETH(address token, uint256 amountTokenDesired, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity)',
    'function factory() view returns (address)',
    'function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn)',
    'function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut)',
    'function getAmountsIn(uint256 amountOut, address[] path) view returns (uint256[] amounts)',
    'function getAmountsOut(uint256 amountIn, address[] path) view returns (uint256[] amounts)',
    'function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB)',
    'function removeLiquidity(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB)',
    'function removeLiquidityETH(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountToken, uint256 amountETH)',
    'function removeLiquidityETHSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountETH)',
    'function removeLiquidityETHWithPermit(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountToken, uint256 amountETH)',
    'function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountETH)',
    'function removeLiquidityWithPermit(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountA, uint256 amountB)',
    'function swapETHForExactTokens(uint256 amountOut, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)',
    'function swapExactETHForTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts)',
    'function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable',
    'function swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)',
    'function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)',
    'function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts)',
    'function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)',
    'function swapTokensForExactETH(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)',
    'function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts)'
  ]



  export const UniV3Router = [
    'function WETH9() view returns (address)',
    'function exactInput((bytes path, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum) params) payable returns (uint256 amountOut)',
    'function exactInputSingle((address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountOut)',
    'function exactOutput((bytes path, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum) params) payable returns (uint256 amountIn)',
    'function exactOutputSingle((address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 deadline, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountIn)',
    'function factory() view returns (address)',
    'function multicall(bytes[] data) payable returns (bytes[] results)',
    'function refundETH() payable',
    'function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
    'function sweepToken(address token, uint256 amountMinimum, address recipient) payable',
    'function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable',
    'function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes _data)',
    'function unwrapWETH9(uint256 amountMinimum, address recipient) payable',
    'function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable'
  ]
  
  export const UniV3Router2 = [
    'function WETH9() view returns (address)',
    'function approveMax(address token) payable',
    'function approveMaxMinusOne(address token) payable',
    'function approveZeroThenMax(address token) payable',
    'function approveZeroThenMaxMinusOne(address token) payable',
    'function callPositionManager(bytes data) payable returns (bytes result)',
    'function checkOracleSlippage(bytes[] paths, uint128[] amounts, uint24 maximumTickDivergence, uint32 secondsAgo) view',
    'function checkOracleSlippage(bytes path, uint24 maximumTickDivergence, uint32 secondsAgo) view',
    'function exactInput((bytes path, address recipient, uint256 amountIn, uint256 amountOutMinimum) params) payable returns (uint256 amountOut)',
    'function exactInputSingle((address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountOut)',
    'function exactOutput((bytes path, address recipient, uint256 amountOut, uint256 amountInMaximum) params) payable returns (uint256 amountIn)',
    'function exactOutputSingle((address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) payable returns (uint256 amountIn)',
    'function factory() view returns (address)',
    'function factoryV2() view returns (address)',
    'function getApprovalType(address token, uint256 amount) returns (uint8)',
    'function increaseLiquidity((address token0, address token1, uint256 tokenId, uint256 amount0Min, uint256 amount1Min) params) payable returns (bytes result)',
    'function mint((address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint256 amount0Min, uint256 amount1Min, address recipient) params) payable returns (bytes result)',
    'function multicall(bytes32 previousBlockhash, bytes[] data) payable returns (bytes[])',
    'function multicall(uint256 deadline, bytes[] data) payable returns (bytes[])',
    'function multicall(bytes[] data) payable returns (bytes[] results)',
    'function positionManager() view returns (address)',
    'function pull(address token, uint256 value) payable',
    'function refundETH() payable',
    'function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitAllowed(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitAllowedIfNecessary(address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable',
    'function selfPermitIfNecessary(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable',
    'function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) payable returns (uint256 amountOut)',
    'function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to) payable returns (uint256 amountIn)',
    'function sweepToken(address token, uint256 amountMinimum, address recipient) payable',
    'function sweepToken(address token, uint256 amountMinimum) payable',
    'function sweepTokenWithFee(address token, uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable',
    'function sweepTokenWithFee(address token, uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable',
    'function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes _data)',
    'function unwrapWETH9(uint256 amountMinimum, address recipient) payable',
    'function unwrapWETH9(uint256 amountMinimum) payable',
    'function unwrapWETH9WithFee(uint256 amountMinimum, address recipient, uint256 feeBips, address feeRecipient) payable',
    'function unwrapWETH9WithFee(uint256 amountMinimum, uint256 feeBips, address feeRecipient) payable',
    'function wrapETH(uint256 value) payable'
  ]


  export const StakingPool = [
    'function ADXToken() view returns (address)',
    'function ADXUSDOracle() view returns (address)',
    'function DOMAIN_SEPARATOR() view returns (bytes32)',
    'function PERMIT_TYPEHASH() view returns (bytes32)',
    'function allowance(address owner, address spender) view returns (uint256 remaining)',
    'function approve(address spender, uint256 amount) returns (bool success)',
    'function balanceOf(address owner) view returns (uint256 balance)',
    'function claim(address tokenOut, address to, uint256 amount)',
    'function commitments(bytes32) view returns (uint256)',
    'function decimals() view returns (uint8)',
    'function enter(uint256 amount)',
    'function enterTo(address recipient, uint256 amount)',
    'function governance() view returns (address)',
    'function guardian() view returns (address)',
    'function leave(uint256 shares, bool skipMint)',
    'function limitLastReset() view returns (uint256)',
    'function limitRemaining() view returns (uint256)',
    'function lockedShares(address) view returns (uint256)',
    'function maxDailyPenaltiesPromilles() view returns (uint256)',
    'function name() view returns (string)',
    'function nonces(address) view returns (uint256)',
    'function penalize(uint256 adxAmount)',
    'function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s)',
    'function rageLeave(uint256 shares, bool skipMint)',
    'function rageReceivedPromilles() view returns (uint256)',
    'function setDailyPenaltyMax(uint256 max)',
    'function setGovernance(address addr)',
    'function setGuardian(address newGuardian)',
    'function setRageReceived(uint256 rageReceived)',
    'function setTimeToUnbond(uint256 time)',
    'function setWhitelistedClaimToken(address token, bool whitelisted)',
    'function shareValue() view returns (uint256)',
    'function symbol() view returns (string)',
    'function timeToUnbond() view returns (uint256)',
    'function totalSupply() view returns (uint256)',
    'function transfer(address to, uint256 amount) returns (bool success)',
    'function transferFrom(address from, address to, uint256 amount) returns (bool success)',
    'function unbondingCommitmentWorth(address owner, uint256 shares, uint256 unlocksAt) view returns (uint256)',
    'function uniswap() view returns (address)',
    'function validator() view returns (address)',
    'function whitelistedClaimTokens(address) view returns (bool)',
    'function withdraw(uint256 shares, uint256 unlocksAt, bool skipMint)'
  ]

 export const RouteProcessor = [
    'function bentoBox() view returns (address)',
    'function owner() view returns (address)',
    'function pause()',
    'function processRoute(address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOutMin, address to, bytes route) payable returns (uint256 amountOut)',
    'function renounceOwnership()',
    'function resume()',
    'function setPriviledge(address user, bool priviledge)',
    'function transferOwnership(address newOwner)',
    'function transferValueAndprocessRoute(address transferValueTo, uint256 amountValueTransfer, address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOutMin, address to, bytes route) payable returns (uint256 amountOut)',
    'function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)'
  ]
  export const ERC20 = [
    'function name() view returns (string)',
    'function approve(address _spender, uint256 _value) returns (bool)',
    'function totalSupply() view returns (uint256)',
    'function transferFrom(address _from, address _to, uint256 _value) returns (bool)',
    'function decimals() view returns (uint8)',
    'function balanceOf(address _owner) view returns (uint256 balance)',
    'function symbol() view returns (string)',
    'function transfer(address _to, uint256 _value) returns (bool)',
    'function allowance(address _owner, address _spender) view returns (uint256)'
  ]
  
 export const ERC721 = [
    'function BAYC_PROVENANCE() view returns (string)',
    'function MAX_APES() view returns (uint256)',
    'function REVEAL_TIMESTAMP() view returns (uint256)',
    'function apePrice() view returns (uint256)',
    'function approve(address to, uint256 tokenId)',
    'function balanceOf(address owner) view returns (uint256)',
    'function baseURI() view returns (string)',
    'function emergencySetStartingIndexBlock()',
    'function flipSaleState()',
    'function getApproved(uint256 tokenId) view returns (address)',
    'function isApprovedForAll(address owner, address operator) view returns (bool)',
    'function maxApePurchase() view returns (uint256)',
    'function mintApe(uint256 numberOfTokens) payable',
    'function name() view returns (string)',
    'function owner() view returns (address)',
    'function ownerOf(uint256 tokenId) view returns (address)',
    'function renounceOwnership()',
    'function reserveApes()',
    'function safeTransferFrom(address from, address to, uint256 tokenId)',
    'function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)',
    'function saleIsActive() view returns (bool)',
    'function setApprovalForAll(address operator, bool approved)',
    'function setBaseURI(string baseURI)',
    'function setProvenanceHash(string provenanceHash)',
    'function setRevealTimestamp(uint256 revealTimeStamp)',
    'function setStartingIndex()',
    'function startingIndex() view returns (uint256)',
    'function startingIndexBlock() view returns (uint256)',
    'function supportsInterface(bytes4 interfaceId) view returns (bool)',
    'function symbol() view returns (string)',
    'function tokenByIndex(uint256 index) view returns (uint256)',
    'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',
    'function tokenURI(uint256 tokenId) view returns (string)',
    'function totalSupply() view returns (uint256)',
    'function transferFrom(address from, address to, uint256 tokenId)',
    'function transferOwnership(address newOwner)',
    'function withdraw()'
  ]

  export const WETH = [
    'function name() view returns (string)',
    'function approve(address guy, uint256 wad) returns (bool)',
    'function totalSupply() view returns (uint256)',
    'function transferFrom(address src, address dst, uint256 wad) returns (bool)',
    'function withdraw(uint256 wad)',
    'function decimals() view returns (uint8)',
    'function balanceOf(address) view returns (uint256)',
    'function symbol() view returns (string)',
    'function transfer(address dst, uint256 wad) returns (bool)',
    'function deposit() payable',
    'function allowance(address, address) view returns (uint256)'
  ]