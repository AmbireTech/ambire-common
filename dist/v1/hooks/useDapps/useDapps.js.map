{"version":3,"file":"useDapps.js","sourceRoot":"","sources":["../../../../v1/hooks/useDapps/useDapps.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react'\nimport url from 'url'\n\nimport { AmbireDappManifest, getWalletDappCatalog } from '../../services/dappCatalog'\nimport { Category, DappManifestData, UseDappsProps, UseDappsReturnType } from './types'\n\nconst CATEGORIES: Array<Category> = [\n  {\n    name: 'all',\n    filter: (f: any) => f\n  },\n  {\n    name: 'integrated',\n    filter: (f: any) => f.connectionType === 'gnosis'\n  },\n  {\n    name: 'walletconnect',\n    filter: (f: any) => f.connectionType === 'walletconnect'\n  },\n  {\n    name: 'custom',\n    filter: (f: any) => !!f.custom\n  },\n  {\n    name: 'favorites',\n    filter: (f: any, faves: object) => Object.keys(faves).indexOf(f.url) !== -1\n  }\n]\n\nconst withCategory = (dapp: DappManifestData) => ({\n  ...dapp,\n  category: dapp.connectionType === 'gnosis' ? 'integrated' : dapp.connectionType\n})\n\nexport default function useDapps({\n  useStorage,\n  fetch,\n  applicationType\n}: UseDappsProps): UseDappsReturnType {\n  const categories = useMemo(() => CATEGORIES, [])\n  const [defaultCatalog, setDefaultCatalog] = useState<Array<AmbireDappManifest>>([])\n  const [isDappMode, setIsDappMode] = useStorage<boolean>({ key: 'isDappMode' })\n  const [sideBarOpen, setSideBarOpen] = useState(false)\n  const [currentDappData, setCurrentDappData] = useStorage<DappManifestData | null>({\n    key: 'currentDappData'\n  })\n  const [customDapps, updateCustomDapps] = useStorage<Array<DappManifestData>>({\n    key: 'customDapps',\n    defaultValue: []\n  })\n\n  const [search, setSearch] = useState<string>('')\n  const [categoryFilter, setCategoryFilter] = useState<Category>(categories[0])\n  const [favorites, setFavorites] = useStorage<{ [key: string]: boolean }>({\n    key: 'dappCatalog-faves',\n    defaultValue: {}\n  })\n\n  const catalog: Array<DappManifestData> = useMemo(\n    () => [...defaultCatalog, ...customDapps].map(withCategory),\n    [customDapps, defaultCatalog]\n  )\n\n  const [filteredCatalog, setFilteredItems] = useState(catalog)\n\n  useEffect(() => {\n    async function getCatalog() {\n      const walletCatalog = await getWalletDappCatalog(fetch)\n      const catalogDapp =\n        walletCatalog.filter((el: AmbireDappManifest) =>\n          el.applicationType.includes(applicationType)\n        ) || []\n\n      setDefaultCatalog(catalogDapp)\n    }\n\n    getCatalog()\n  }, [fetch, applicationType])\n\n  const toggleDappMode = useCallback(() => {\n    setIsDappMode(!isDappMode)\n  }, [isDappMode, setIsDappMode])\n\n  const toggleSideBarOpen = useCallback(() => {\n    setSideBarOpen(!sideBarOpen)\n  }, [sideBarOpen])\n\n  const loadCurrentDappData = useCallback(\n    (data: DappManifestData | null) => {\n      setCurrentDappData(data)\n      setIsDappMode(!!data)\n    },\n    [setCurrentDappData, setIsDappMode]\n  )\n\n  const addCustomDapp = useCallback(\n    (dapp: DappManifestData) => {\n      const exists = customDapps.find((x) => x.id === dapp.id)\n      if (!exists) {\n        updateCustomDapps([...customDapps, { ...dapp, custom: true }])\n      }\n    },\n    [customDapps, updateCustomDapps]\n  )\n\n  const removeCustomDapp = useCallback(\n    (dapp: DappManifestData) => {\n      const index = customDapps.findIndex((x) => x.id === dapp.id)\n      if (index >= 0) {\n        const updated = [...customDapps]\n        updated.splice(index, 1)\n        updateCustomDapps(updated)\n      }\n    },\n    [customDapps, updateCustomDapps]\n  )\n\n  const getDappFromCatalog = useCallback(\n    (dappUrl: string): DappManifestData | undefined => {\n      const dappHost = url.parse(dappUrl).host\n\n      const dapp = catalog.find(({ url: cDappUrl }) => url.parse(cDappUrl).host === dappHost)\n      return dapp\n    },\n    [catalog]\n  )\n\n  const isDappInCatalog = useCallback(\n    (dappUrl: string): boolean => {\n      return !!getDappFromCatalog(dappUrl)\n    },\n    [getDappFromCatalog]\n  )\n\n  const loadDappFromUrl = useCallback(\n    (dappUrl: string): boolean => {\n      const dapp = getDappFromCatalog(dappUrl)\n\n      if (dapp) {\n        loadCurrentDappData(dapp)\n        return true\n      }\n      return false\n    },\n    [getDappFromCatalog, loadCurrentDappData]\n  )\n\n  const toggleFavorite = useCallback(\n    (dapp: DappManifestData) => {\n      const updated = { ...favorites }\n      if (updated[dapp.url]) {\n        delete updated[dapp.url]\n      } else {\n        updated[dapp.url] = true\n      }\n\n      setFavorites(updated)\n    },\n    [favorites, setFavorites]\n  )\n\n  const onCategorySelect = useCallback((category: Category) => {\n    setCategoryFilter(category)\n  }, [])\n\n  const onSearchChange = useCallback((val: string | null) => {\n    setSearch(val || '')\n  }, [])\n\n  // refresh list from filters\n  useEffect(() => {\n    setFilteredItems(\n      [...catalog]\n        .sort((a, b) => Number(!!b.featured) - Number(!!a.featured))\n        .filter((item: any) => {\n          let match = true\n          if (categoryFilter) {\n            match = categoryFilter.filter(item, favorites)\n          }\n          if (search && match) {\n            const matchedName = item.name.toLowerCase().includes(search?.toLowerCase())\n            const matchedDescription = item.description\n              ?.toLowerCase()\n              .includes(search?.toLowerCase())\n            match = matchedName || matchedDescription\n          }\n          return match\n        })\n    )\n  }, [catalog, search, categoryFilter, favorites])\n\n  return {\n    isDappMode,\n    sideBarOpen,\n    currentDappData,\n    toggleDappMode,\n    toggleSideBarOpen,\n    loadCurrentDappData,\n    addCustomDapp,\n    removeCustomDapp,\n    catalog,\n    favorites,\n    toggleFavorite,\n    filteredCatalog,\n    onCategorySelect,\n    search,\n    onSearchChange,\n    categories,\n    categoryFilter,\n    isDappInCatalog,\n    loadDappFromUrl\n  }\n}\n"]}