{"version":3,"file":"networks.js","sourceRoot":"","sources":["../../../src/utils/networks.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonRpcProvider } from 'ethers'\n\nimport { BUNDLER } from '../consts/bundlers'\nimport {\n  ChainlistNetwork,\n  Erc4337settings,\n  Network,\n  NetworkFeature,\n  RelayerNetwork\n} from '../interfaces/network'\n\nconst hardcodedRpcUrls: { [chainId: string]: string } = {\n  '11155111': 'https://eth-sepolia.public.blastapi.io'\n}\n\nconst checkIsRpcUrlWorking = async (rpcUrl: string) => {\n  const provider = new JsonRpcProvider(rpcUrl)\n\n  try {\n    await provider.getBlockNumber()\n  } catch {\n    provider?.destroy()\n    return false\n  }\n\n  provider.destroy()\n\n  return true\n}\n\nconst rollProviderUrlsAndFindWorking = async (\n  rpcUrls: string[],\n  index: number\n): Promise<string | null> => {\n  const isProviderWorking = await checkIsRpcUrlWorking(rpcUrls[index])\n\n  if (isProviderWorking) {\n    return rpcUrls[index]\n  }\n\n  const nextIndex = index + 1\n\n  if (rpcUrls.length > nextIndex) {\n    return rollProviderUrlsAndFindWorking(rpcUrls, nextIndex)\n  }\n\n  return null\n}\n\nconst convertToAmbireNetworkFormat = async (network: ChainlistNetwork): Promise<Network> => {\n  const freeHttpRpcUrls = network.rpc.filter((rpcUrl: string) => {\n    const isHttpOrHttps = rpcUrl.startsWith('http')\n\n    if (!isHttpOrHttps) return false\n\n    const isApiKeyRequired = /${.+}/.test(rpcUrl)\n\n    return !isApiKeyRequired\n  })\n  const workingRpcUrl: string =\n    hardcodedRpcUrls[network.chainId.toString()] ??\n    (await rollProviderUrlsAndFindWorking(freeHttpRpcUrls, 0))\n\n  let platformId = null\n  let nativeAssetId = null\n\n  try {\n    const coingeckoRequest = await fetch(\n      `https://cena.ambire.com/api/v3/platform/${Number(network.chainId)}`\n    ).catch(() => ({\n      error: 'currently, we cannot fetch the coingecko information'\n    }))\n\n    // set the coingecko info\n\n    if (!('error' in coingeckoRequest)) {\n      const coingeckoInfo = await coingeckoRequest.json()\n      if (!coingeckoInfo.error) {\n        platformId = coingeckoInfo.platformId\n        nativeAssetId = coingeckoInfo.nativeAssetId\n      }\n    }\n  } catch (e) {\n    console.error(e)\n    // do nothing\n  }\n\n  return {\n    name: network.name,\n    chainId: BigInt(network.chainId),\n    rpcUrls: [workingRpcUrl ?? network.rpc[0]],\n    explorerUrl: network.explorers[0].url,\n    selectedRpcUrl: workingRpcUrl || '',\n    platformId,\n    nativeAssetId,\n    nativeAssetSymbol: network.nativeCurrency.symbol,\n    nativeAssetName: network.nativeCurrency.name,\n    // Not needed for benzin\n    hasRelayer: false,\n    rpcNoStateOverride: false, // TODO\n    areContractsDeployed: false, // TODO\n    features: [],\n    feeOptions: { is1559: false },\n    flagged: false,\n    hasSingleton: false,\n    iconUrls: [],\n    erc4337: { enabled: false, hasPaymaster: false },\n    isSAEnabled: false,\n    predefined: false,\n    has7702: false\n  }\n}\n\n/**\n * Maps the configuration of a Relayer network to the Ambire network format.\n * Needed, because the structures does NOT fully match, some values need to be\n * transformed or parsed (number to bigint). And finally, because there are\n * default values that need to be set for the so called \"predefined\" networks.\n */\nexport const mapRelayerNetworkConfigToAmbireNetwork = (\n  chainId: bigint,\n  relayerNetwork: RelayerNetwork\n): Network & { predefinedConfigVersion: number; disabledByDefault?: boolean } => {\n  const {\n    name,\n    explorerUrl,\n    selectedRpcUrl,\n    isOptimistic,\n    disableEstimateGas,\n    predefinedConfigVersion,\n    rpcUrls,\n    iconUrls,\n    platformId,\n    has7702,\n    disabledByDefault\n  } = relayerNetwork\n  const {\n    native: {\n      symbol: nativeAssetSymbol,\n      name: nativeAssetName,\n      coingeckoId: nativeAssetId,\n      wrapped: { address: wrappedAddr },\n      oldNativeAssetSymbols\n    },\n    smartAccounts,\n    feeOptions: incomingFeeOptions\n  } = relayerNetwork\n\n  const is7702Enabled = has7702 || false\n  const hasRelayer = smartAccounts?.hasRelayer ?? false\n  const incomingErc4337 = smartAccounts?.erc4337 ?? { enabled: false, hasPaymaster: false }\n\n  const feeOptions = {\n    is1559: incomingFeeOptions.is1559,\n    minBaseFeeEqualToLastBlock: !!incomingFeeOptions.minBaseFeeEqualToLastBlock,\n    ...(typeof incomingFeeOptions.minBaseFee === 'number' && {\n      minBaseFee: BigInt(incomingFeeOptions.minBaseFee)\n    }),\n    ...(typeof incomingFeeOptions.elasticityMultiplier === 'number' && {\n      elasticityMultiplier: BigInt(incomingFeeOptions.elasticityMultiplier)\n    }),\n    ...(typeof incomingFeeOptions.baseFeeMaxChangeDenominator === 'number' && {\n      baseFeeMaxChangeDenominator: BigInt(incomingFeeOptions.baseFeeMaxChangeDenominator)\n    }),\n    ...(typeof incomingFeeOptions.feeIncrease === 'number' && {\n      feeIncrease: BigInt(incomingFeeOptions.feeIncrease)\n    })\n  }\n\n  const erc4337: Erc4337settings = {\n    enabled: incomingErc4337.enabled,\n    hasPaymaster: incomingErc4337.hasPaymaster,\n    ...(typeof incomingErc4337.hasBundlerSupport === 'boolean' && {\n      hasBundlerSupport: incomingErc4337.hasBundlerSupport\n    }),\n    ...(incomingErc4337.bundlers && {\n      bundlers: incomingErc4337.bundlers as BUNDLER[]\n    }),\n    ...(incomingErc4337.defaultBundler && {\n      defaultBundler: incomingErc4337.defaultBundler\n    }),\n    ...(incomingErc4337.increasePreVerGas && {\n      increasePreVerGas: incomingErc4337.increasePreVerGas ?? 0\n    })\n  }\n\n  // Always fallback to these values for the \"predefined\" networks, coming from\n  // the RPC for the custom networks.\n  const rpcNoStateOverride = false\n  const isSAEnabled = !!smartAccounts\n  const areContractsDeployed = !!smartAccounts\n  const features: NetworkFeature[] = []\n  const hasSingleton = true\n\n  // Coming from the RPC, only for the custom networks\n  // const flagged\n  // const blockGasLimit\n  // const force4337\n\n  return {\n    name,\n    iconUrls,\n    explorerUrl,\n    rpcUrls,\n    selectedRpcUrl,\n    isOptimistic,\n    disableEstimateGas,\n    platformId,\n    chainId,\n    nativeAssetSymbol,\n    nativeAssetName,\n    nativeAssetId,\n    hasRelayer,\n    wrappedAddr,\n    oldNativeAssetSymbols,\n    feeOptions,\n    erc4337,\n    rpcNoStateOverride,\n    isSAEnabled,\n    predefined: !disabledByDefault,\n    predefinedConfigVersion,\n    areContractsDeployed,\n    features,\n    hasSingleton,\n    has7702: is7702Enabled,\n    disabledByDefault\n  }\n}\n\nexport { checkIsRpcUrlWorking, convertToAmbireNetworkFormat, rollProviderUrlsAndFindWorking }\n"]}