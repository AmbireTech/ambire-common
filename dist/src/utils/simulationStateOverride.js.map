{"version":3,"file":"simulationStateOverride.js","sourceRoot":"","sources":["../../../src/utils/simulationStateOverride.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAA;AAEhC,OAAO,aAAa,MAAM,6CAA6C,CAAA;AACvE,OAAO,EAAE,oBAAoB,EAAE,MAAM,sBAAsB,CAAA;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAA;AAErD;;;;GAIG;AACH,MAAM,UAAU,6BAA6B,CAAC,WAAmB;IAC/D,OAAO;QACL,CAAC,WAAW,CAAC,EAAE;YACb,IAAI,EAAE,aAAa,CAAC,UAAU;YAC9B,SAAS,EAAE;gBACT,4HAA4H;gBAC5H,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC,EAAE,CAAC,EACrD,oEAAoE;gBACtE,8DAA8D;gBAC9D,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,oBAAoB;aACvC;SACF;KACF,CAAA;AACH,CAAC","sourcesContent":["import { toBeHex } from 'ethers'\n\nimport AmbireAccount from '../../contracts/compiled/AmbireAccount.json'\nimport { EOA_SIMULATION_NONCE } from '../consts/deployless'\nimport { privSlot } from '../libs/proxyDeploy/deploy'\n\n/**\n *\n * @param accountAddr account address\n * @returns the state override object required for transaction simulation and estimation\n */\nexport function getEoaSimulationStateOverride(accountAddr: string) {\n  return {\n    [accountAddr]: {\n      code: AmbireAccount.binRuntime,\n      stateDiff: {\n        // if we use 0x00...01 we get a geth bug: \"invalid argument 2: hex number with leading zero digits\\\" - on some RPC providers\n        [`0x${privSlot(0, 'address', accountAddr, 'bytes32')}`]:\n          '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n        // any number with leading zeros is not supported on some RPCs\n        [toBeHex(1, 32)]: EOA_SIMULATION_NONCE\n      }\n    }\n  }\n}\n"]}