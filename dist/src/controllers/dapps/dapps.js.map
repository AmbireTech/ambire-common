{"version":3,"file":"dapps.js","sourceRoot":"","sources":["../../../../src/controllers/dapps/dapps.ts"],"names":[],"mappings":"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","sourcesContent":["import { Session, SessionProp } from '../../classes/session'\nimport predefinedDapps from '../../consts/dappCatalog.json'\nimport { Dapp } from '../../interfaces/dapp'\nimport { Messenger } from '../../interfaces/messenger'\nimport { Storage } from '../../interfaces/storage'\nimport EventEmitter from '../eventEmitter/eventEmitter'\n\n// The DappsController is responsible for the following tasks:\n// 1. Managing the dApp catalog\n// 2. Handling active sessions between dApps and the wallet\n// 3. Broadcasting events from the wallet to connected dApps via the Session\n\n// The possible events include: accountsChanged, chainChanged, disconnect, lock, unlock, and connect.\n\nexport class DappsController extends EventEmitter {\n  #dapps: Dapp[] = []\n\n  #storage: Storage\n\n  dappSessions: { [key: string]: Session } = {}\n\n  // Holds the initial load promise, so that one can wait until it completes\n  initialLoadPromise: Promise<void>\n\n  constructor(_storage: Storage) {\n    super()\n\n    this.#storage = _storage\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.initialLoadPromise = this.#load()\n  }\n\n  get isReady() {\n    return !!this.dapps\n  }\n\n  get dapps(): Dapp[] {\n    const predefinedDappsParsed = predefinedDapps.map(\n      ({ url, name, icon, description }): Dapp => ({\n        name,\n        description,\n        url,\n        icon,\n        isConnected: false,\n        chainId: 1,\n        favorite: false\n      })\n    )\n\n    return [...this.#dapps, ...predefinedDappsParsed].reduce((acc: Dapp[], curr: Dapp): Dapp[] => {\n      if (!acc.some(({ url }) => url === curr.url)) return [...acc, curr]\n      return acc\n    }, [])\n  }\n\n  set dapps(updatedDapps: Dapp[]) {\n    this.#dapps = updatedDapps\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.#storage.set('dapps', updatedDapps)\n  }\n\n  async #load() {\n    // eslint-disable-next-line prefer-const\n    let [storedDapps, dappSessions] = await Promise.all([\n      this.#storage.get('dapps', []),\n      this.#storage.get('dappSessions', {})\n    ])\n\n    this.#dapps = storedDapps\n    Object.keys(dappSessions).forEach((sessionId) => {\n      const session = new Session(dappSessions[sessionId])\n      this.dappSessions[sessionId] = session\n    })\n    this.emitUpdate()\n  }\n\n  #dappSessionsSet(sessionId: string, session: Session) {\n    this.dappSessions[sessionId] = session\n    this.#storage.set('dappSessions', this.dappSessions)\n  }\n\n  #dappSessionsDelete(sessionId: string) {\n    delete this.dappSessions[sessionId]\n    this.#storage.set('dappSessions', this.dappSessions)\n  }\n\n  #createDappSession = (data: SessionProp) => {\n    const dappSession = new Session(data)\n    this.#dappSessionsSet(dappSession.sessionId, dappSession)\n    this.emitUpdate()\n\n    return dappSession\n  }\n\n  getOrCreateDappSession = (data: SessionProp) => {\n    if (!data.tabId || !data.origin)\n      throw new Error('Invalid props passed to getOrCreateDappSession')\n\n    if (this.dappSessions[`${data.tabId}-${data.origin}`]) {\n      return this.dappSessions[`${data.tabId}-${data.origin}`]\n    }\n\n    return this.#createDappSession(data)\n  }\n\n  setSessionMessenger = (key: string, messenger: Messenger) => {\n    this.dappSessions[key].setMessenger(messenger)\n  }\n\n  setSessionProp = (key: string, props: SessionProp) => {\n    this.dappSessions[key].setProp(props)\n  }\n\n  deleteDappSession = (key: string) => {\n    this.#dappSessionsDelete(key)\n    this.emitUpdate()\n  }\n\n  broadcastDappSessionEvent = (ev: any, data?: any, origin?: string) => {\n    let dappSessions: { key: string; data: Session }[] = []\n    Object.keys(this.dappSessions).forEach((key) => {\n      if (this.dappSessions[key] && this.hasPermission(this.dappSessions[key].origin)) {\n        dappSessions.push({\n          key,\n          data: this.dappSessions[key]\n        })\n      }\n    })\n\n    if (origin) {\n      dappSessions = dappSessions.filter((dappSession) => dappSession.data.origin === origin)\n    }\n\n    dappSessions.forEach((dappSession) => {\n      try {\n        dappSession.data.sendMessage?.(ev, data)\n      } catch (e) {\n        if (this.dappSessions[dappSession.key]) {\n          this.deleteDappSession(dappSession.key)\n        }\n      }\n    })\n    this.emitUpdate()\n  }\n\n  addDapp(dapp: Dapp) {\n    if (!this.isReady) return\n\n    const doesAlreadyExist = this.dapps.find((d) => d.url === dapp.url)\n    if (doesAlreadyExist) {\n      this.updateDapp(dapp.url, {\n        chainId: dapp.chainId,\n        isConnected: dapp.isConnected,\n        favorite: dapp.favorite\n      })\n      return\n    }\n    this.dapps = [...this.dapps, dapp]\n    this.emitUpdate()\n  }\n\n  updateDapp(url: string, dapp: Partial<Dapp>) {\n    if (!this.isReady) return\n\n    this.dapps = this.dapps.map((d) => {\n      if (d.url === url) return { ...d, ...dapp }\n      return d\n    })\n    this.emitUpdate()\n  }\n\n  removeDapp(url: string) {\n    if (!this.isReady) return\n\n    // do not remove predefined dapps\n    if (predefinedDapps.find((d) => d.url === url)) return\n\n    this.dapps = this.dapps.filter((d) => d.url !== url)\n    this.emitUpdate()\n  }\n\n  hasPermission(url: string) {\n    const dapp = this.dapps.find((d) => d.url === url)\n    if (!dapp) return false\n\n    return dapp.isConnected\n  }\n\n  getDapp(url: string) {\n    if (!this.isReady) return\n\n    return this.dapps.find((d) => d.url === url)\n  }\n\n  toJSON() {\n    return {\n      ...this,\n      ...super.toJSON(),\n      dapps: this.dapps,\n      isReady: this.isReady\n    }\n  }\n}\n"]}