{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../../src/controllers/signAccountOp/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { formatUnits, ZeroAddress } from 'ethers'\n\nimport { WARNINGS } from '../../consts/signAccountOp/errorHandling'\nimport { Network } from '../../interfaces/network'\nimport { Warning } from '../../interfaces/signAccountOp'\nimport { SubmittedAccountOp } from '../../libs/accountOp/submittedAccountOp'\nimport { FeePaymentOption } from '../../libs/estimate/interfaces'\nimport { Price, TokenResult } from '../../libs/portfolio'\nimport { getAccountPortfolioTotal, getTotal } from '../../libs/portfolio/helpers'\nimport { AccountState } from '../../libs/portfolio/interfaces'\n\nfunction getFeeSpeedIdentifier(\n  option: FeePaymentOption,\n  accountAddr: string,\n  rbfAccountOp: SubmittedAccountOp | null\n) {\n  // if the token is native and we're paying with EOA, we do not need\n  // a different identifier as the fee speed calculations will be the same\n  // regardless of the EOA address\n  const paidBy =\n    option.token.address === ZeroAddress && option.paidBy !== accountAddr ? 'EOA' : option.paidBy\n\n  return `${paidBy}:${option.token.address}:${option.token.symbol.toLowerCase()}:${\n    option.token.flags.onGasTank ? 'gasTank' : 'feeToken'\n  }${rbfAccountOp ? `rbf-${option.paidBy}` : ''}`\n}\n\nfunction getTokenUsdAmount(token: TokenResult, gasAmount: bigint): string {\n  const isUsd = (price: Price) => price.baseCurrency === 'usd'\n  const usdPrice = token.priceIn.find(isUsd)?.price\n\n  if (!usdPrice) return ''\n\n  const usdPriceFormatted = BigInt(usdPrice * 1e18)\n\n  // 18 it's because we multiply usdPrice * 1e18 and here we need to deduct it\n  return formatUnits(BigInt(gasAmount) * usdPriceFormatted, 18 + token.decimals)\n}\n\nfunction getSignificantBalanceDecreaseWarning(\n  latest: AccountState,\n  pending: AccountState,\n  networkId: Network['id']\n): Warning | null {\n  const latestNetworkData = latest?.[networkId]\n  const pendingNetworkData = pending?.[networkId]\n  const canDetermineIfBalanceWillDecrease =\n    latestNetworkData &&\n    !latestNetworkData.isLoading &&\n    pendingNetworkData &&\n    !pendingNetworkData.isLoading\n\n  if (canDetermineIfBalanceWillDecrease) {\n    const latestTotal = getAccountPortfolioTotal(latest, ['rewards', 'gasTank'], false)\n    const latestOnNetwork = getTotal(latestNetworkData.result?.tokens || []).usd\n    const pendingOnNetwork = getTotal(pendingNetworkData.result?.tokens || []).usd\n    const willBalanceDecreaseByMoreThan10Percent =\n      latestOnNetwork - pendingOnNetwork > latestTotal * 0.1\n\n    if (!willBalanceDecreaseByMoreThan10Percent) return null\n\n    return WARNINGS.significantBalanceDecrease\n  }\n\n  return null\n}\n\nconst getFeeTokenPriceUnavailableWarning = (\n  hasSpeed: boolean,\n  feeTokenHasPrice: boolean\n): Warning | null => {\n  if (!hasSpeed || feeTokenHasPrice) return null\n\n  return WARNINGS.feeTokenPriceUnavailable\n}\n\nexport {\n  getFeeSpeedIdentifier,\n  getTokenUsdAmount,\n  getSignificantBalanceDecreaseWarning,\n  getFeeTokenPriceUnavailableWarning\n}\n"]}