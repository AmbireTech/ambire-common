{"version":3,"file":"signAccountOpTester.js","sourceRoot":"","sources":["../../../../src/controllers/signAccountOp/signAccountOpTester.ts"],"names":[],"mappings":";;;AAYA,mDAAyD;AAEzD,MAAa,6BAA8B,SAAQ,uCAAuB;IACxE,YACE,QAA4B,EAC5B,QAA4B,EAC5B,QAA4B,EAC5B,SAA8B,EAC9B,yBAAoD,EACpD,OAAgB,EAChB,OAAgB,EAChB,QAAqB,EACrB,YAAmC,EACnC,SAAoB,EACpB,wBAAkC,EAClC,cAAuB,EACvB,SAAmB,EACnB,kBAAwC,EACxC,kBAAsC;QAEtC,KAAK,CACH,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,yBAAyB,EACzB,OAAO,EACP,OAAO,EACP,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,wBAAwB,EACxB,cAAc,EACd,SAAS,CACV,CAAA;QAED,uBAAuB;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;QAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;QAEhC,kCAAkC;QAClC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAA;QACpC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAA;IACpC,CAAC;CACF;AA1CD,sEA0CC","sourcesContent":["import { Account } from '../../interfaces/account'\nimport { AccountOpAction } from '../../interfaces/actions'\nimport { ExternalSignerControllers } from '../../interfaces/keystore'\nimport { Network } from '../../interfaces/network'\nimport { RPCProvider } from '../../interfaces/provider'\nimport { AccountOp } from '../../libs/accountOp/accountOp'\nimport { AccountsController } from '../accounts/accounts'\nimport { EstimationController } from '../estimation/estimation'\nimport { GasPriceController } from '../gasPrice/gasPrice'\nimport { KeystoreController } from '../keystore/keystore'\nimport { NetworksController } from '../networks/networks'\nimport { PortfolioController } from '../portfolio/portfolio'\nimport { SignAccountOpController } from './signAccountOp'\n\nexport class SignAccountOpTesterController extends SignAccountOpController {\n  constructor(\n    accounts: AccountsController,\n    networks: NetworksController,\n    keystore: KeystoreController,\n    portfolio: PortfolioController,\n    externalSignerControllers: ExternalSignerControllers,\n    account: Account,\n    network: Network,\n    provider: RPCProvider,\n    fromActionId: AccountOpAction['id'],\n    accountOp: AccountOp,\n    isSignRequestStillActive: Function,\n    shouldSimulate: boolean,\n    traceCall: Function,\n    estimateController: EstimationController,\n    gasPriceController: GasPriceController\n  ) {\n    super(\n      accounts,\n      networks,\n      keystore,\n      portfolio,\n      externalSignerControllers,\n      account,\n      network,\n      provider,\n      fromActionId,\n      accountOp,\n      isSignRequestStillActive,\n      shouldSimulate,\n      traceCall\n    )\n\n    // remove main handlers\n    this.estimation.onUpdate(() => {})\n    this.gasPrice.onUpdate(() => {})\n\n    // assign easy to mock controllers\n    this.estimation = estimateController\n    this.gasPrice = gasPriceController\n  }\n}\n"]}