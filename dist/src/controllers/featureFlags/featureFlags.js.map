{"version":3,"file":"featureFlags.js","sourceRoot":"","sources":["../../../../src/controllers/featureFlags/featureFlags.ts"],"names":[],"mappings":";;;;AAAA,4DAAsE;AACtE,wFAAuD;AAGvD;;;;;GAKG;AACH,MAAa,sBAAuB,SAAQ,sBAAY;IACtD,MAAM,GAAiB,EAAE,GAAG,2BAAY,EAAE,CAAA;IAE1C,SAAS,CAAoB;IAE7B,YAAY,QAA4B;QACtC,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;IAC3B,CAAC;IAED,gEAAgE;IAChE,gBAAgB,CAAC,IAAwB;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IAC1B,CAAC;IAED,cAAc,CAAC,IAA+B,EAAE,KAAc;QAC5D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA;QACzB,IAAI,CAAC,UAAU,EAAE,CAAA;IACnB,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAA;IACpB,CAAC;IAED,MAAM;QACJ,OAAO;YACL,GAAG,IAAI;YACP,GAAG,KAAK,CAAC,MAAM,EAAE;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAA;IACH,CAAC;CACF;AA/BD,wDA+BC","sourcesContent":["import { FeatureFlags, featureFlags } from '../../consts/featureFlags'\nimport EventEmitter from '../eventEmitter/eventEmitter'\nimport { NetworksController } from '../networks/networks'\n\n/**\n * Responsible for managing (enable/disable) feature flags within the app. The\n * long-term vision for this is to support dynamic management, currently it\n * enables or disables features only at runtime. Can be useful for feature\n * toggling, A/B testing, and gradual feature roll-outs.\n */\nexport class FeatureFlagsController extends EventEmitter {\n  #flags: FeatureFlags = { ...featureFlags }\n\n  #networks: NetworksController\n\n  constructor(networks: NetworksController) {\n    super()\n    this.#networks = networks\n  }\n\n  /** Syntactic sugar for checking if a feature flag is enabled */\n  isFeatureEnabled(flag: keyof FeatureFlags) {\n    return this.#flags[flag]\n  }\n\n  setFeatureFlag(flag: keyof typeof featureFlags, value: boolean): void {\n    this.#flags[flag] = value\n    this.emitUpdate()\n  }\n\n  get flags(): FeatureFlags {\n    return this.#flags\n  }\n\n  toJSON() {\n    return {\n      ...this,\n      ...super.toJSON(),\n      flags: this.flags\n    }\n  }\n}\n"]}