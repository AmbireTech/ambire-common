{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../src/controllers/actions/actions.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-floating-promises */\n\nimport { Account } from '../../interfaces/account'\nimport {\n  AccountOpAction,\n  Action,\n  BenzinAction,\n  DappRequestAction,\n  SignMessageAction,\n  SwitchAccountAction\n} from '../../interfaces/actions'\nimport { NotificationManager } from '../../interfaces/notification'\nimport { WindowManager, WindowProps } from '../../interfaces/window'\n// eslint-disable-next-line import/no-cycle\nimport { messageOnNewAction } from '../../libs/actions/actions'\nimport { getDappActionRequestsBanners } from '../../libs/banners/banners'\nimport { ENTRY_POINT_AUTHORIZATION_REQUEST_ID } from '../../libs/userOperation/userOperation'\nimport EventEmitter from '../eventEmitter/eventEmitter'\n// Kind of inevitable, the AccountsController has SelectedAccountController, which has ActionsController\n// eslint-disable-next-line import/no-cycle\nimport { SelectedAccountController } from '../selectedAccount/selectedAccount'\n\n// TODO: Temporarily. Refactor imports across the codebase to ref /interfaces/actions instead.\nexport type {\n  SwitchAccountAction,\n  Action,\n  AccountOpAction,\n  SignMessageAction,\n  BenzinAction,\n  DappRequestAction\n}\n\nexport type ActionPosition = 'first' | 'last'\n\nexport type ActionExecutionType = 'queue' | 'queue-but-open-action-window' | 'open-action-window'\n\n/**\n * The ActionsController is responsible for storing the converted userRequests\n * from the MainController into actions. After adding an action an action-window will be opened with the first action form actionsQueue\n * For most userRequests, there is a corresponding action in the actionsQueue\n * containing the details of the userRequest needed for displaying it to the user.\n * However, some userRequests can be batched together, resulting in a single action created for multiple requests.\n *\n * After being opened, the action-window will remain visible to the user until all actions are resolved or rejected,\n * or until the user forcefully closes the window using the system close icon (X).\n * All pending/unresolved actions can be accessed later from the banners on the Dashboard screen.\n */\nexport class ActionsController extends EventEmitter {\n  #selectedAccount: SelectedAccountController\n\n  #windowManager: WindowManager\n\n  #notificationManager: NotificationManager\n\n  actionWindow: {\n    windowProps: WindowProps\n    openWindowPromise?: Promise<WindowProps>\n    focusWindowPromise?: Promise<void>\n    loaded: boolean\n    pendingMessage: {\n      message: string\n      options?: {\n        timeout?: number\n        type?: 'error' | 'success' | 'info' | 'warning'\n        sticky?: boolean\n      }\n    } | null\n  } = {\n    windowProps: null,\n    loaded: false,\n    pendingMessage: null\n  }\n\n  actionsQueue: Action[] = []\n\n  currentAction: Action | null = null\n\n  #onActionWindowClose: () => void\n\n  get visibleActionsQueue(): Action[] {\n    return this.actionsQueue.filter((a) => {\n      if (a.type === 'accountOp') {\n        return a.accountOp.accountAddr === this.#selectedAccount.account?.addr\n      }\n      if (a.type === 'signMessage') {\n        return a.userRequest.meta.accountAddr === this.#selectedAccount.account?.addr\n      }\n      if (a.type === 'benzin') {\n        return a.userRequest.meta.accountAddr === this.#selectedAccount.account?.addr\n      }\n      if (a.type === 'switchAccount') {\n        return a.userRequest.meta.switchToAccountAddr !== this.#selectedAccount.account?.addr\n      }\n\n      return true\n    })\n  }\n\n  constructor({\n    selectedAccount,\n    windowManager,\n    notificationManager,\n    onActionWindowClose\n  }: {\n    selectedAccount: SelectedAccountController\n    windowManager: WindowManager\n    notificationManager: NotificationManager\n    onActionWindowClose: () => void\n  }) {\n    super()\n\n    this.#selectedAccount = selectedAccount\n    this.#windowManager = windowManager\n    this.#notificationManager = notificationManager\n    this.#onActionWindowClose = onActionWindowClose\n\n    this.#windowManager.event.on('windowRemoved', async (winId: number) => {\n      if (\n        winId === this.actionWindow.windowProps?.id ||\n        (!this.visibleActionsQueue.length && this.currentAction && this.actionWindow.windowProps)\n      ) {\n        this.actionWindow.windowProps = null\n        this.actionWindow.loaded = false\n        this.actionWindow.pendingMessage = null\n        this.currentAction = null\n\n        this.actionsQueue = this.actionsQueue.filter((a) => a.type === 'accountOp')\n        if (this.visibleActionsQueue.length) {\n          await this.#notificationManager.create({\n            title:\n              this.actionsQueue.length > 1\n                ? `${this.actionsQueue.length} transactions queued`\n                : 'Transaction queued',\n            message: 'Queued pending transactions are available on your Dashboard.'\n          })\n        }\n        this.#onActionWindowClose()\n        this.emitUpdate()\n      }\n    })\n\n    this.#windowManager.event.on('windowFocusChange', async (winId: number) => {\n      if (this.actionWindow.windowProps) {\n        if (this.actionWindow.windowProps.id === winId && !this.actionWindow.windowProps.focused) {\n          this.actionWindow.windowProps.focused = true\n          this.emitUpdate()\n        } else if (\n          this.actionWindow.windowProps.id !== winId &&\n          this.actionWindow.windowProps.focused\n        ) {\n          this.actionWindow.windowProps.focused = false\n          this.emitUpdate()\n        }\n      }\n    })\n  }\n\n  addOrUpdateAction(\n    newAction: Action,\n    position: ActionPosition = 'last',\n    executionType: ActionExecutionType = 'open-action-window'\n  ) {\n    // remove the benzin action if a new actions is added\n    this.actionsQueue = this.actionsQueue.filter((a) => a.type !== 'benzin')\n    if (this.currentAction && this.currentAction.type === 'benzin') {\n      this.currentAction = null\n    }\n\n    const actionIndex = this.actionsQueue.findIndex((a) => a.id === newAction.id)\n    if (actionIndex !== -1) {\n      this.actionsQueue[actionIndex] = newAction\n      if (executionType !== 'queue') {\n        let currentAction = null\n        if (executionType === 'open-action-window') {\n          this.sendNewActionMessage(newAction, 'updated')\n          currentAction = this.visibleActionsQueue.find((a) => a.id === newAction.id) || null\n        } else if (executionType === 'queue-but-open-action-window') {\n          this.sendNewActionMessage(newAction, 'queued')\n          currentAction = this.currentAction || this.visibleActionsQueue[0] || null\n        }\n        this.#setCurrentAction(currentAction)\n      } else {\n        this.emitUpdate()\n      }\n      return\n    }\n\n    if (position === 'first') {\n      this.actionsQueue.unshift(newAction)\n    } else {\n      this.actionsQueue.push(newAction)\n    }\n\n    if (executionType !== 'queue') {\n      let currentAction = null\n      if (executionType === 'open-action-window') {\n        currentAction = this.visibleActionsQueue.find((a) => a.id === newAction.id) || null\n      } else if (executionType === 'queue-but-open-action-window') {\n        this.sendNewActionMessage(newAction, 'queued')\n        currentAction = this.currentAction || this.visibleActionsQueue[0] || null\n      }\n      this.#setCurrentAction(currentAction)\n    } else {\n      this.emitUpdate()\n    }\n  }\n\n  removeAction(actionId: Action['id'], shouldOpenNextAction: boolean = true) {\n    this.actionsQueue = this.actionsQueue.filter((a) => a.id !== actionId)\n    if (shouldOpenNextAction) {\n      this.#setCurrentAction(this.visibleActionsQueue[0] || null)\n    }\n  }\n\n  #setCurrentAction(nextAction: Action | null) {\n    if (nextAction && nextAction.id === this.currentAction?.id) {\n      this.openActionWindow()\n      this.emitUpdate()\n      return\n    }\n\n    this.currentAction = nextAction\n\n    if (!this.currentAction) {\n      !!this.actionWindow.windowProps?.id &&\n        this.#windowManager.remove(this.actionWindow.windowProps.id)\n    } else {\n      this.openActionWindow()\n    }\n\n    this.emitUpdate()\n  }\n\n  setCurrentActionById(actionId: Action['id']) {\n    const action = this.visibleActionsQueue.find((a) => a.id.toString() === actionId.toString())\n    if (!action) {\n      const entryPointAction = this.visibleActionsQueue.find(\n        (a) => a.id.toString() === ENTRY_POINT_AUTHORIZATION_REQUEST_ID\n      )\n\n      if (entryPointAction) this.#setCurrentAction(entryPointAction)\n\n      return\n    }\n\n    this.#setCurrentAction(action)\n  }\n\n  setCurrentActionByIndex(actionIndex: number) {\n    const action = this.visibleActionsQueue[actionIndex]\n\n    if (!action) {\n      const entryPointAction = this.visibleActionsQueue.find(\n        (a) => a.id.toString() === ENTRY_POINT_AUTHORIZATION_REQUEST_ID\n      )\n      if (entryPointAction) this.#setCurrentAction(entryPointAction)\n\n      return\n    }\n\n    this.#setCurrentAction(action)\n  }\n\n  sendNewActionMessage(newAction: Action, type: 'queued' | 'updated') {\n    if (this.visibleActionsQueue.length > 1 && newAction.type !== 'benzin') {\n      if (this.actionWindow.loaded) {\n        const message = messageOnNewAction(newAction, type)\n        if (message) this.#windowManager.sendWindowToastMessage(message, { type: 'success' })\n      } else {\n        const message = messageOnNewAction(newAction, type)\n        if (message) this.actionWindow.pendingMessage = { message, options: { type: 'success' } }\n      }\n    }\n  }\n\n  async openActionWindow() {\n    await this.actionWindow.focusWindowPromise\n    await this.actionWindow.openWindowPromise\n    if (this.actionWindow.windowProps) {\n      this.focusActionWindow()\n    } else {\n      try {\n        this.actionWindow.openWindowPromise = this.#windowManager.open().finally(() => {\n          this.actionWindow.openWindowPromise = undefined\n        })\n        this.actionWindow.windowProps = await this.actionWindow.openWindowPromise\n        this.emitUpdate()\n      } catch (err) {\n        console.error('Error opening action window:', err)\n      }\n    }\n  }\n\n  async focusActionWindow() {\n    await this.actionWindow.focusWindowPromise\n    await this.actionWindow.openWindowPromise\n    if (!this.visibleActionsQueue.length || !this.currentAction || !this.actionWindow.windowProps)\n      return\n    try {\n      this.actionWindow.focusWindowPromise = this.#windowManager\n        .focus(this.actionWindow.windowProps)\n        .finally(() => {\n          this.actionWindow.focusWindowPromise = undefined\n        })\n      this.emitUpdate()\n    } catch (err) {\n      console.error('Error focusing action window:', err)\n    }\n  }\n\n  closeActionWindow() {\n    if (!this.actionWindow.windowProps) return\n    this.#windowManager.remove(this.actionWindow.windowProps.id)\n  }\n\n  setWindowLoaded() {\n    if (!this.actionWindow.windowProps) return\n    this.actionWindow.loaded = true\n\n    if (this.actionWindow.pendingMessage) {\n      this.#windowManager.sendWindowToastMessage(\n        this.actionWindow.pendingMessage.message,\n        this.actionWindow.pendingMessage.options\n      )\n      this.actionWindow.pendingMessage = null\n    }\n    this.emitUpdate()\n  }\n\n  removeAccountData(address: Account['addr']) {\n    this.actionsQueue = this.actionsQueue.filter((a) => {\n      if (a.type === 'accountOp') {\n        return a.accountOp.accountAddr !== address\n      }\n      if (a.type === 'signMessage') {\n        return a.userRequest.meta.accountAddr !== address\n      }\n      if (a.type === 'benzin') {\n        return a.userRequest.meta.accountAddr !== address\n      }\n      if (a.type === 'switchAccount') {\n        return a.userRequest.meta.switchToAccountAddr !== address\n      }\n\n      return true\n    })\n\n    this.emitUpdate()\n  }\n\n  get banners() {\n    return getDappActionRequestsBanners(this.visibleActionsQueue)\n  }\n\n  toJSON() {\n    return {\n      ...this,\n      ...super.toJSON(),\n      visibleActionsQueue: this.visibleActionsQueue,\n      banners: this.banners\n    }\n  }\n}\n"]}