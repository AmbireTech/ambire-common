{"version":3,"file":"derivation.js","sourceRoot":"","sources":["../../../src/consts/derivation.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACU,QAAA,kCAAkC,GAAG,0BAA0B,CAAA;AAC5E;;;;GAIG;AACU,QAAA,gCAAgC,GAAG,0BAA0B,CAAA;AAC1E;;;;;;GAMG;AACU,QAAA,kCAAkC,GAAG,wBAAwB,CAAA;AAa7D,QAAA,kBAAkB,GAAuB;IACpD,EAAE,KAAK,EAAE,0CAA0C,EAAE,KAAK,EAAE,0CAAkC,EAAE;IAChG,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,wCAAgC,EAAE;IACvE;QACE,KAAK,EAAE,0CAA0C;QACjD,KAAK,EAAE,0CAAkC;KAC1C;CACF,CAAA;AAED;;;;GAIG;AACU,QAAA,0CAA0C,GAAG,MAAM,CAAA","sourcesContent":["/**\n * BIP44 as everyone implements it (MetaMask, Trezor, Lattice, EthersJS),\n * iterating over the `address_index` path out of the 5 levels in BIP44:\n *   m / purpose' / coin_type' / account' / change / address_index\n */\nexport const BIP44_STANDARD_DERIVATION_TEMPLATE = \"m/44'/60'/0'/0/<account>\"\n/**\n * BIP44 as Ledger (Live) currently implements it. They iterate over the\n * `account'` path out of the 5 levels in BIP44:\n *   m / purpose' / coin_type' / account' / change / address_index\n */\nexport const BIP44_LEDGER_DERIVATION_TEMPLATE = \"m/44'/60'/<account>'/0/0\"\n/**\n * Legacy (but popular) one, which is BIP44-like, but not BIP44 exactly and\n * there is no standard that describes it. Closely related to the BIP44\n * standard, but it does not include the last \"/0\" which is typically used to\n * distinguish between addresses (change addresses). Used previously by\n * Ledger and by other Ethereum wallets like MyEtherWallet (MEW) and MyCrypto.\n */\nexport const LEGACY_POPULAR_DERIVATION_TEMPLATE = \"m/44'/60'/0'/<account>\"\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type HD_PATH_TEMPLATE_TYPE =\n  | typeof BIP44_STANDARD_DERIVATION_TEMPLATE\n  | typeof BIP44_LEDGER_DERIVATION_TEMPLATE\n  | typeof LEGACY_POPULAR_DERIVATION_TEMPLATE\n\nexport interface DerivationOption {\n  label: string\n  value: HD_PATH_TEMPLATE_TYPE\n}\n\nexport const DERIVATION_OPTIONS: DerivationOption[] = [\n  { label: 'BIP44 Standard (MetaMask, Trezor, Grid+)', value: BIP44_STANDARD_DERIVATION_TEMPLATE },\n  { label: 'BIP44 Ledger Live', value: BIP44_LEDGER_DERIVATION_TEMPLATE },\n  {\n    label: 'Legacy (Ledger, MyEtherWallet, MyCrypto)',\n    value: LEGACY_POPULAR_DERIVATION_TEMPLATE\n  }\n]\n\n/**\n * For basic (EOA) accounts that are Ambire smart account keys use the derived\n * address at index N + x, where N is this derivation offset (this constant),\n * and x is the given <account> index in the derivation (template) path.\n */\nexport const SMART_ACCOUNT_SIGNER_KEY_DERIVATION_OFFSET = 100000\n"]}