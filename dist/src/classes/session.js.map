{"version":3,"file":"session.js","sourceRoot":"","sources":["../../../src/classes/session.ts"],"names":[],"mappings":";;;AAUA,4FAA4F;AAC5F,mEAAmE;AACnE,MAAa,OAAO;IAClB,MAAM,GAAW,EAAE,CAAA;IAEnB,IAAI,GAAW,EAAE,CAAA;IAEjB,IAAI,GAAW,EAAE,CAAA;IAEjB,KAAK,GAAkB,IAAI,CAAA;IAE3B,yEAAyE;IACzE,oBAAoB,GAAW,CAAC,CAAC,CAAA;IAEjC,SAAS,GAAqB,IAAI,CAAA;IAElC,SAAS,GAAY,KAAK,CAAA;IAE1B,WAAW,CAAC,KAAU,EAAE,IAAS;QAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;QAC1E,CAAC;IACH,CAAC;IAED,YAAY,IAAiB;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACpB,CAAC;IAED,YAAY,CAAC,SAAoB;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC5B,CAAC;IAED,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAe;QAChD,IAAI,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAChC,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAC1B,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAC1B,IAAI,KAAK;YAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IAC/B,CAAC;IAED,IAAI,SAAS;QACX,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,CAAA;IACvC,CAAC;IAED,MAAM;QACJ,OAAO;YACL,GAAG,IAAI;YACP,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAA;IACH,CAAC;CACF;AA/CD,0BA+CC","sourcesContent":["import { Messenger } from '../interfaces/messenger'\n\nexport interface SessionProp {\n  origin?: string\n  icon?: string\n  name?: string\n  tabId?: number\n  isWeb3App?: boolean\n}\n\n// Each instance of a Session represents an active connection between a dApp and the wallet.\n// For more details on how to use it, refer to the DappsController.\nexport class Session {\n  origin: string = ''\n\n  icon: string = ''\n\n  name: string = ''\n\n  tabId: number | null = null\n\n  // requestIds start from 0 but the default val should not be the fist req\n  lastHandledRequestId: number = -1\n\n  messenger: Messenger | null = null\n\n  isWeb3App: boolean = false\n\n  sendMessage(event: any, data: any) {\n    if (this.messenger) {\n      this.messenger.send('broadcast', { event, data }, { tabId: this.tabId })\n    }\n  }\n\n  constructor(data: SessionProp) {\n    this.setProp(data)\n  }\n\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger\n  }\n\n  setProp({ origin, icon, name, tabId }: SessionProp) {\n    if (origin) this.origin = origin\n    if (icon) this.icon = icon\n    if (name) this.name = name\n    if (tabId) this.tabId = tabId\n  }\n\n  get sessionId() {\n    return `${this.tabId}-${this.origin}`\n  }\n\n  toJSON() {\n    return {\n      ...this,\n      sessionId: this.sessionId\n    }\n  }\n}\n"]}