{"version":3,"file":"EmittableError.js","sourceRoot":"","sources":["../../../src/classes/EmittableError.ts"],"names":[],"mappings":";;AAEA,MAAqB,cAAe,SAAQ,KAAK;IAC/C,KAAK,CAAmB;IAExB,OAAO,CAAqB;IAE5B,KAAK,CAAO;IAEZ,YAAY,QAAmF;QAC7F,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAA;QAC/B,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAA;QAC5B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAA;QAE3B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAC1C,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAA;QAC7B,CAAC;IACH,CAAC;CACF;AAnBD,iCAmBC","sourcesContent":["import { ErrorRef } from '../controllers/eventEmitter/eventEmitter'\n\nexport default class EmittableError extends Error {\n  level: ErrorRef['level']\n\n  message: ErrorRef['message']\n\n  error: Error\n\n  constructor(errorRef: { message: ErrorRef['message']; level: ErrorRef['level']; error?: Error }) {\n    super()\n    this.message = errorRef.message\n    this.name = 'EmittableError'\n    this.level = errorRef.level\n\n    if (!errorRef.error) {\n      this.error = new Error(errorRef.message)\n    } else {\n      this.error = errorRef.error\n    }\n  }\n}\n"]}