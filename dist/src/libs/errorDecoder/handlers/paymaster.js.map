{"version":3,"file":"paymaster.js","sourceRoot":"","sources":["../../../../../src/libs/errorDecoder/handlers/paymaster.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,OAAO,EAA8B,SAAS,EAAE,MAAM,UAAU,CAAA;AAEhE,MAAM,qBAAqB;IAClB,OAAO,CAAC,IAAY,EAAE,KAAU;QACrC,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;QAEtB,OAAO,IAAI,KAAK,gBAAgB,IAAI,IAAI,KAAK,2BAA2B,CAAA;IAC1E,CAAC;IAEM,MAAM,CAAC,IAAY,EAAE,KAAU;QACpC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,KAAK,CAAA;QAEjC,OAAO;YACL,IAAI,EAAE,SAAS,CAAC,cAAc;YAC9B,MAAM;YACN,IAAI,EAAE,EAAE;SACT,CAAA;IACH,CAAC;CACF;AAED,eAAe,qBAAqB,CAAA","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport { DecodedError, ErrorHandler, ErrorType } from '../types'\n\nclass PaymasterErrorHandler implements ErrorHandler {\n  public matches(data: string, error: any) {\n    const { name } = error\n\n    return name === 'PaymasterError' || name === 'PaymasterSponsorshipError'\n  }\n\n  public handle(data: string, error: any): DecodedError {\n    const { message: reason } = error\n\n    return {\n      type: ErrorType.PaymasterError,\n      reason,\n      data: ''\n    }\n  }\n}\n\nexport default PaymasterErrorHandler\n"]}