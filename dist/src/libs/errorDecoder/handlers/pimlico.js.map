{"version":3,"file":"pimlico.js","sourceRoot":"","sources":["../../../../../src/libs/errorDecoder/handlers/pimlico.ts"],"names":[],"mappings":";;AAAA,2CAA2C;AAC3C,uDAAkD;AAClD,oCAAgE;AAEhE,MAAM,6BAA6B;IAC1B,OAAO,CAAC,IAAY,EAAE,KAAU;QACrC,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAA;QAE7B,OAAO,WAAW,IAAI,WAAW,KAAK,kBAAO,CAAA;IAC/C,CAAC;IAEM,MAAM,CAAC,IAAY,EAAE,KAAU;QACpC,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,CAAA;QAC/C,MAAM,UAAU,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;QAE3E,qCAAqC;QACrC,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAI,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAC1C,MAAM,GAAG,cAAc,CAAA;QACzB,CAAC;QAED,OAAO;YACL,IAAI,EAAE,iBAAS,CAAC,YAAY;YAC5B,MAAM;YACN,IAAI,EAAE,MAAM;SACb,CAAA;IACH,CAAC;CACF;AAED,kBAAe,6BAA6B,CAAA","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport { PIMLICO } from '../../../consts/bundlers'\nimport { DecodedError, ErrorHandler, ErrorType } from '../types'\n\nclass PimlicoEstimationErrorHandler implements ErrorHandler {\n  public matches(data: string, error: any) {\n    const { bundlerName } = error\n\n    return bundlerName && bundlerName === PIMLICO\n  }\n\n  public handle(data: string, error: any): DecodedError {\n    const { message } = error?.error || error || {}\n    const lowerCased = typeof message === 'string' ? message.toLowerCase() : ''\n\n    // TODO: expand with more error cases\n    let reason = ''\n    if (lowerCased.includes('internal error')) {\n      reason = 'pimlico: 500'\n    }\n\n    return {\n      type: ErrorType.BundlerError,\n      reason,\n      data: reason\n    }\n  }\n}\n\nexport default PimlicoEstimationErrorHandler\n"]}