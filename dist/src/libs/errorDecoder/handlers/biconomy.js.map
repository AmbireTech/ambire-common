{"version":3,"file":"biconomy.js","sourceRoot":"","sources":["../../../../../src/libs/errorDecoder/handlers/biconomy.ts"],"names":[],"mappings":";;AAAA,2CAA2C;AAC3C,uDAAmD;AACnD,oCAAgE;AAEhE,MAAM,8BAA8B;IAC3B,OAAO,CAAC,IAAY,EAAE,KAAU;QACrC,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAA;QAE7B,OAAO,WAAW,IAAI,WAAW,KAAK,mBAAQ,CAAA;IAChD,CAAC;IAEM,MAAM,CAAC,IAAY,EAAE,KAAU;QACpC,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,CAAA;QAC/C,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,EAAE,CAAA;QAExC,qCAAqC;QACrC,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;YACvE,MAAM,GAAG,eAAe,CAAA;SACzB;QAED,OAAO;YACL,IAAI,EAAE,iBAAS,CAAC,YAAY;YAC5B,MAAM;YACN,IAAI,EAAE,MAAM;SACb,CAAA;IACH,CAAC;CACF;AAED,kBAAe,8BAA8B,CAAA","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport { BICONOMY } from '../../../consts/bundlers'\nimport { DecodedError, ErrorHandler, ErrorType } from '../types'\n\nclass BiconomyEstimationErrorHandler implements ErrorHandler {\n  public matches(data: string, error: any) {\n    const { bundlerName } = error\n\n    return bundlerName && bundlerName === BICONOMY\n  }\n\n  public handle(data: string, error: any): DecodedError {\n    const { message } = error?.error || error || {}\n    const lowerCased = message.toLowerCase()\n\n    // TODO: expand with more error cases\n    let reason = ''\n    if (lowerCased.includes('400') || lowerCased.includes('internal error')) {\n      reason = 'biconomy: 400'\n    }\n\n    return {\n      type: ErrorType.BundlerError,\n      reason,\n      data: reason\n    }\n  }\n}\n\nexport default BiconomyEstimationErrorHandler\n"]}