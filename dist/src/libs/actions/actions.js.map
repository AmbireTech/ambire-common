{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../src/libs/actions/actions.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-cycle\nimport { AccountOpAction, Action } from '../../controllers/actions/actions'\nimport { DappProviderRequest } from '../../interfaces/dapp'\nimport { AccountOp } from '../accountOp/accountOp'\n\nexport const dappRequestMethodToActionKind = (method: DappProviderRequest['method']) => {\n  if (['call', 'calls', 'eth_sendTransaction', 'wallet_sendCalls'].includes(method)) return 'calls'\n  if (\n    [\n      'eth_signTypedData',\n      'eth_signTypedData_v1',\n      'eth_signTypedData_v3',\n      'eth_signTypedData_v4'\n    ].includes(method)\n  )\n    return 'typedMessage'\n  if (['personal_sign'].includes(method)) return 'message'\n  // method to camelCase\n  return method.replace(/_(.)/g, (m, p1) => p1.toUpperCase())\n}\n\nexport const getAccountOpsByNetwork = (\n  accountAddr: string,\n  actions: Action[]\n): { [key: string]: AccountOp[] } | undefined => {\n  const accountOps = (actions.filter((a) => a.type === 'accountOp') as AccountOpAction[])\n    .map((a) => a.accountOp)\n    .filter((op) => op.accountAddr === accountAddr)\n\n  if (!accountOps.length) return undefined\n\n  return accountOps.reduce((acc: any, accountOp) => {\n    const { networkId } = accountOp\n    if (!acc[networkId]) acc[networkId] = []\n\n    acc[networkId].push(accountOp)\n    return acc\n  }, {})\n}\n\nexport const getAccountOpActionsByNetwork = (\n  accountAddr: string,\n  actions: Action[]\n): { [key: string]: AccountOpAction[] } => {\n  const accountOpActions = (\n    actions.filter((a) => a.type === 'accountOp') as AccountOpAction[]\n  ).filter((action) => action.accountOp.accountAddr === accountAddr)\n\n  const actionsByNetwork = accountOpActions.reduce((acc: any, accountOpAction) => {\n    const { networkId } = accountOpAction.accountOp\n    if (!acc[networkId]) acc[networkId] = []\n    acc[networkId].push(accountOpAction)\n    return acc\n  }, {})\n  return actionsByNetwork\n}\n\nexport const getAccountOpFromAction = (\n  accountOpActionId: AccountOpAction['id'],\n  actions: Action[]\n) => {\n  const accountOpAction = actions.find((a) => a.id === accountOpActionId) as AccountOpAction\n  if (!accountOpAction) return undefined\n  return accountOpAction.accountOp\n}\n\nexport const messageOnNewAction = (action: Action, addType: 'queued' | 'updated') => {\n  let requestType = ''\n  if (action.type === 'accountOp') requestType = 'Sign Transaction'\n  if (action.type === 'signMessage') requestType = 'Sign Message'\n  if (action.type === 'dappRequest') {\n    if (action.userRequest.action.kind === 'dappConnect') requestType = 'Dapp Connect'\n    if (action.userRequest.action.kind === 'walletAddEthereumChain') requestType = 'Add Chain'\n    if (action.userRequest.action.kind === 'walletWatchAsset') requestType = 'Watch Asset'\n    if (action.userRequest.action.kind === 'ethGetEncryptionPublicKey')\n      requestType = 'Get Encryption Public Key'\n  }\n\n  if (addType === 'queued') {\n    return `A new${requestType ? ` ${requestType} ` : ' '}request was queued.`\n  }\n\n  if (addType === 'updated') {\n    return `${requestType ? ` ${requestType} ` : ' '}request was updated.`\n  }\n\n  return null\n}\n"]}