{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../src/libs/humanizer/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { Account } from '../../interfaces/account'\nimport { Network } from '../../interfaces/network'\nimport { Message } from '../../interfaces/userRequest'\nimport { AccountOp } from '../accountOp/accountOp'\nimport { Call } from '../accountOp/types'\n\n// @TODO remove property humanizerMeta\nexport type HumanizerVisualization = (\n  | {\n      type:\n        | 'address'\n        | 'label'\n        | 'action'\n        | 'danger'\n        | 'deadline'\n        | 'chain'\n        | 'message'\n        | 'image'\n        | 'link'\n        | 'text'\n      url?: string\n      address?: string\n      content?: string\n      value?: bigint\n      warning?: boolean\n      chainId?: bigint\n      messageContent?: Uint8Array | string\n    }\n  | {\n      type: 'token'\n      address: string\n      value: bigint\n      chainId?: bigint\n    }\n) & { isHidden?: boolean; id: number; content?: string; isBold?: boolean }\nexport interface IrCall extends Call {\n  fullVisualization?: HumanizerVisualization[]\n  warnings?: HumanizerWarning[]\n}\nexport interface IrMessage extends Message {\n  fullVisualization?: HumanizerVisualization[]\n  warnings?: HumanizerWarning[]\n}\nexport interface HumanizerWarning {\n  content: string\n  level?: 'caution' | 'alert' | 'alarm'\n}\nexport interface Ir {\n  calls: IrCall[]\n  messages: IrMessage[]\n}\n\n// @TODO make humanizer options interface\nexport interface HumanizerCallModule {\n  (\n    AccountOp: AccountOp,\n    calls: IrCall[],\n    humanizerMeta: HumanizerMeta,\n    options?: HumanizerOptions\n  ): IrCall[]\n}\n\nexport interface HumanizerTypedMessageModule {\n  (typedMessage: Message): Omit<IrMessage, keyof Message>\n}\n\nexport interface AbiFragment {\n  selector: string\n  type: 'error' | 'function' | 'event'\n  signature: string\n}\n\nexport interface HumanizerMetaAddress {\n  name?: string\n  // undefined means it is not a token\n  token?: { symbol: string; decimals: number; networks?: string[] }\n  // undefined means not a SC, {} means it is SC but we have no more info\n  isSC?: { abiName?: string }\n}\n\n// more infor here https://github.com/AmbireTech/ambire-app/issues/1662\nexport interface HumanizerMeta {\n  abis: {\n    [name: string]: {\n      [selector: string]: AbiFragment\n    }\n    NO_ABI: {\n      [selector: string]: AbiFragment\n    }\n  }\n  knownAddresses: {\n    [address: string]: HumanizerMetaAddress\n  }\n}\n\nexport interface HumanizerOptions {\n  network?: Network\n  chainId?: bigint\n}\n\nexport type DataToHumanize = AccountOp | Message\n\nexport type KnownAddressLabels = { [key in Account['addr']]: string }\n"]}