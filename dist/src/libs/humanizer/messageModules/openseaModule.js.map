{"version":3,"file":"openseaModule.js","sourceRoot":"","sources":["../../../../../src/libs/humanizer/messageModules/openseaModule.ts"],"names":[],"mappings":"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","sourcesContent":["import { isHexString, toUtf8String } from 'ethers'\n\nimport { Message } from '../../../interfaces/userRequest'\nimport { HumanizerTypedMessageModule } from '../interfaces'\nimport { getAction, getLabel, getToken } from '../utils'\n\nconst SEAPORT_ADDRESS = [\n  '0x0000000000000068F116a894984e2DB1123eB395',\n\n  '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n\n  '0x00000000006c3852cbEf3e08E8dF289169EdE581',\n\n  '0x00000000F9490004C11Cef243f5400493c00Ad63',\n\n  '0x00e5F120f500006757E984F1DED400fc00370000',\n\n  '0x0000f00000627D293Ab4Dfb40082001724dB006F'\n]\n\nexport const openseaMessageModule: HumanizerTypedMessageModule = (message: Message) => {\n  if (message.content.kind === 'message' && typeof message.content.message === 'string') {\n    let messageAsText: string = message.content.message\n    if (isHexString(message.content.message) && message.content.message.length % 2 === 0) {\n      messageAsText = toUtf8String(message.content.message)\n    }\n    const OPENSEA_LOGIN_MESSAGE_PREFIX = 'Welcome to OpenSea!'\n    if (\n      messageAsText.includes(OPENSEA_LOGIN_MESSAGE_PREFIX) &&\n      messageAsText.toLowerCase().includes(message.accountAddr.toLowerCase())\n    ) {\n      return {\n        fullVisualization: [getAction('Log in'), getLabel('OpenSea', true)]\n      }\n    }\n    const OPENSEA_PRO_LOGIN_MESSAGE_PREFIX = 'Sign in to OpenSea Pro'\n    if (\n      messageAsText.includes(OPENSEA_PRO_LOGIN_MESSAGE_PREFIX) &&\n      messageAsText.toLowerCase().includes(message.accountAddr.toLowerCase())\n    ) {\n      return {\n        fullVisualization: [getAction('Log in'), getLabel('OpenSea Pro', true)]\n      }\n    }\n  }\n  if (message.content.kind === 'typedMessage') {\n    if (\n      message.content.domain.name === 'Seaport' &&\n      message.content.domain.version === '1.6' &&\n      SEAPORT_ADDRESS.includes(message.content.domain.verifyingContract || '')\n    ) {\n      const considerations = message.content.message.consideration\n      const offer = message.content.message.offer\n\n      const extractItems = ({ itemType, token, identifierOrCriteria, startAmount }: any) => {\n        if (itemType === '0') return { address: token, amountOrId: BigInt(startAmount) }\n        if (itemType === '1') return { address: token, amountOrId: BigInt(startAmount) }\n        if (itemType === '2') return { address: token, amountOrId: BigInt(identifierOrCriteria) }\n        if (itemType === '3') return { address: token, amountOrId: BigInt(identifierOrCriteria) }\n        return null\n      }\n      const itemsToList = offer.map(extractItems).filter((x: any) => x)\n      const itemsToGet = considerations\n        .filter(({ recipient }: any) => recipient === message.accountAddr)\n        .map(extractItems)\n        .filter((x: any) => x)\n\n      return {\n        fullVisualization: [\n          getAction('Make offer to swap'),\n          ...itemsToList.map(({ address, amountOrId }: any) => getToken(address, amountOrId)),\n          getLabel('for'),\n          ...itemsToGet.map(({ address, amountOrId }: any) => getToken(address, amountOrId))\n        ]\n      }\n    }\n  }\n  return { fullVisualization: [] }\n}\n"]}