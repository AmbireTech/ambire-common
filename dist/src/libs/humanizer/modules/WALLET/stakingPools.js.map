{"version":3,"file":"stakingPools.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/WALLET/stakingPools.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interface } from 'ethers'\n\nimport { StakingPool } from '../../const/abis'\nimport { HumanizerVisualization, IrCall } from '../../interfaces'\nimport { getAction, getAddressVisualization, getLabel, getToken } from '../../utils'\n\nconst STAKING_POOLS: { [key: string]: { [key: string]: string } } = {\n  '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935': {\n    baseToken: '0x88800092ff476844f74dc2fc427974bbee2794ae',\n    name: 'WALLET Staking Pool'\n  },\n  '0xb6456b57f03352be48bf101b46c1752a0813491a': {\n    baseToken: '0xade00c28244d5ce17d72e40330b1c318cd12b7c3',\n    name: 'ADX Staking Pool'\n  },\n  // this is on polygon for tests\n  '0xec3b10ce9cabab5dbf49f946a623e294963fbb4e': {\n    baseToken: '0xe9415e904143e42007865e6864f7f632bd054a08',\n    name: 'WALLET Staking Pool (Test)'\n  }\n}\n// const WALLET_TOKEN_ADDR = '0x88800092ff476844f74dc2fc427974bbee2794ae'\n\nexport const StakingPools = (): { [key: string]: (c: IrCall) => HumanizerVisualization[] } => {\n  const iface = new Interface(StakingPool)\n  return {\n    [iface.getFunction('enter')?.selector!]: (call: IrCall) => {\n      const { amount } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Deposit'),\n        getToken(STAKING_POOLS[call.to.toLowerCase()].baseToken, amount),\n        getLabel('to'),\n        getAddressVisualization(call.to)\n      ]\n    },\n    [iface.getFunction('leave')?.selector!]: (call: IrCall) => {\n      const { shares } = iface.parseTransaction(call)!.args\n\n      return [\n        getAction('Leave'),\n        getLabel('with'),\n        getToken(STAKING_POOLS[call.to.toLowerCase()].baseToken, shares),\n        getAddressVisualization(call.to)\n      ]\n    },\n    [iface.getFunction('withdraw')?.selector!]: (call: IrCall) => {\n      const { shares } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Withdraw'),\n        getToken(STAKING_POOLS[call.to.toLowerCase()].baseToken, shares),\n        getLabel('from'),\n        getAddressVisualization(call.to)\n      ]\n    },\n\n    [iface.getFunction('rageLeave')?.selector!]: (call: IrCall) => {\n      const { shares } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Rage leave'),\n        getLabel('with'),\n        getToken(STAKING_POOLS[call.to.toLowerCase()].baseToken, shares),\n        getAddressVisualization(call.to)\n      ]\n    }\n  }\n}\n"]}