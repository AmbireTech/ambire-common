{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/WALLET/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interface } from 'ethers'\n\nimport { STK_WALLET, WALLET_STAKING_ADDR, WALLET_TOKEN } from '../../../../consts/addresses'\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { StkWallet } from '../../const/abis/stkWallet'\nimport { HumanizerCallModule, IrCall } from '../../interfaces'\nimport {\n  checkIfUnknownAction,\n  getAction,\n  getLabel,\n  getToken,\n  getUnknownVisualization\n} from '../../utils'\nimport { StakingPools } from './stakingPools'\n// update return ir to be {...ir,calls:newCalls} instead of {calls:newCalls} everywhere\nimport { WALLETSupplyControllerMapping } from './WALLETSupplyController'\n\nconst stakingAddresses = [\n  '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935',\n  '0xb6456b57f03352be48bf101b46c1752a0813491a',\n  '0xec3b10ce9cabab5dbf49f946a623e294963fbb4e'\n]\n\nconst stkWalletIface = new Interface(StkWallet)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const WALLETModule: HumanizerCallModule = (_: AccountOp, irCalls: IrCall[]) => {\n  const matcher = {\n    supplyController: WALLETSupplyControllerMapping(),\n    stakingPool: StakingPools(),\n    stkWallet: {\n      [stkWalletIface.getFunction('wrapAll')!.selector]: () => {\n        return [\n          getAction('Wrap all'),\n          getToken(WALLET_STAKING_ADDR, 0n),\n          getLabel('to'),\n          getToken(STK_WALLET, 0n)\n        ]\n      },\n      [stkWalletIface.getFunction('wrap')!.selector]: ({ data }: IrCall) => {\n        const [shareAmount] = stkWalletIface.parseTransaction({ data })!.args\n\n        return [\n          getAction('Wrap'),\n          getToken(WALLET_STAKING_ADDR, shareAmount),\n          getLabel('to'),\n          getToken(STK_WALLET, 0n)\n        ]\n      },\n      [stkWalletIface.getFunction('unwrap')!.selector]: ({ data }: IrCall) => {\n        const [shareAmount] = stkWalletIface.parseTransaction({ data })!.args\n\n        return [\n          getAction('Unwrap'),\n          getToken(STK_WALLET, 0n),\n          getLabel('for'),\n          getToken(WALLET_STAKING_ADDR, shareAmount)\n        ]\n      },\n      [stkWalletIface.getFunction('stakeAndWrap')!.selector]: ({ data }: IrCall) => {\n        const [amount] = stkWalletIface.parseTransaction({ data })!.args\n\n        return [\n          getAction('Stake and wrap'),\n          getToken(WALLET_TOKEN, amount),\n          getLabel('for'),\n          getToken(STK_WALLET, 0n)\n        ]\n      }\n    }\n  }\n  const newCalls = irCalls.map((call: IrCall) => {\n    if (\n      stakingAddresses.includes(call.to.toLowerCase()) &&\n      (!call.fullVisualization || checkIfUnknownAction(call.fullVisualization))\n    ) {\n      if (matcher.stakingPool[call.data.slice(0, 10)]) {\n        return {\n          ...call,\n          fullVisualization: matcher.stakingPool[call.data.slice(0, 10)](call)\n        }\n      }\n      return {\n        ...call,\n        fullVisualization: getUnknownVisualization('staking', call)\n      }\n    }\n    if (matcher.supplyController[call.data.slice(0, 10)]) {\n      return {\n        ...call,\n        fullVisualization: matcher.supplyController[call.data.slice(0, 10)](call)\n      }\n    }\n\n    if (call.to === STK_WALLET && matcher.stkWallet[call.data.slice(0, 10)]) {\n      return {\n        ...call,\n        fullVisualization: matcher.stkWallet[call.data.slice(0, 10)](call)\n      }\n    }\n    return call\n  })\n  return newCalls\n}\n"]}