{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/ENS/index.ts"],"names":[],"mappings":";;;AAAA,mCAAyD;AAGzD,mDAA0D;AAE1D,uCAA0E;AAE1E,MAAM,cAAc,GAAG,4CAA4C,CAAA;AACnE,MAAM,YAAY,GAAG,4CAA4C,CAAA;AACjE,MAAM,YAAY,GAAG,4CAA4C,CAAA;AAEjE,MAAM,KAAK,GAAG,IAAI,kBAAS,CAAC;IAC1B,iKAAiK;IACjK,0BAA0B;IAC1B,0EAA0E;IAC1E,kCAAkC;IAClC,6CAA6C;IAC7C,kEAAkE;IAClE,wCAAwC;IACxC,wCAAwC;IACxC,4CAA4C;IAC5C,8DAA8D;CAC/D,CAAC,CAAA;AAEF,MAAM,eAAe,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAA;AAC9C,MAAM,eAAe,GAAG,CAAC,QAAgB,EAAU,EAAE;IACnD,MAAM,aAAa,GAAG,GAAG,QAAQ,GAAG,eAAe,QACjD,QAAQ,GAAG,EAAE,GAAG,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GACzC,EAAE,CAAA;IACF,OAAO,aAAa,CAAA;AACtB,CAAC,CAAA;AAEM,MAAM,SAAS,GAAwB,CAAC,SAAoB,EAAE,OAAiB,EAAE,EAAE;IACxF,6BAA6B;IAC7B,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QAC1B,IAAI,IAAA,mBAAU,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,cAAc,EAAE,CAAC;YAC3C,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,UAAU,CAAE,CAAC,QAAQ,EAAE,CAAC;gBACvE,MAAM,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ;gBACR,UAAU;gBACV,YAAY;gBACZ,QAAQ;gBACR,iBAAiB;gBACjB,uBAAuB;kBACxB,GAAG,KAAK,CAAC,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;gBACnD,MAAM,iBAAiB,GAAG,CAAC,IAAA,iBAAS,EAAC,UAAU,CAAC,EAAE,IAAA,gBAAQ,EAAC,GAAG,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC,CAAA;gBAEhF,IAAI,KAAK,KAAK,SAAS,CAAC,WAAW;oBACjC,iBAAiB,CAAC,IAAI,CAAC,IAAA,gBAAQ,EAAC,IAAI,CAAC,EAAE,IAAA,+BAAuB,EAAC,KAAK,CAAC,CAAC,CAAA;gBACxE,MAAM,aAAa,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAA;gBAE/C,iBAAiB,CAAC,IAAI,CAAC,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAE,IAAA,gBAAQ,EAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAA;gBAEtE,OAAO,EAAE,GAAG,IAAI,EAAE,iBAAiB,EAAE,CAAA;YACvC,CAAC;YAED,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,CAAE,CAAC,QAAQ,EAAE,CAAC;gBACpE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;gBACrE,MAAM,aAAa,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAA;gBAC/C,MAAM,iBAAiB,GAAG;oBACxB,IAAA,iBAAS,EAAC,OAAO,CAAC;oBAClB,IAAA,gBAAQ,EAAC,GAAG,EAAE,MAAM,CAAC;oBACrB,IAAA,gBAAQ,EAAC,KAAK,CAAC;oBACf,IAAA,gBAAQ,EAAC,aAAa,EAAE,IAAI,CAAC;iBAC9B,CAAA;gBAED,OAAO,EAAE,GAAG,IAAI,EAAE,iBAAiB,EAAE,CAAA;YACvC,CAAC;YAED,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAE,CAAC,QAAQ,EAAE,CAAC;gBACrE,OAAO;oBACL,GAAG,IAAI;oBACP,iBAAiB,EAAE,CAAC,IAAA,iBAAS,EAAC,SAAS,CAAC,EAAE,IAAA,gBAAQ,EAAC,2BAA2B,CAAC,CAAC;iBACjF,CAAA;YACH,CAAC;QACH,CAAC;QACD,MAAM,eAAe,GAAG;YACtB,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAY,EAAE,EAAE;gBACzD,MAAM;gBACJ,QAAQ;gBACR,GAAG,EACH,KAAK,EACN,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;gBAC7C,OAAO,CAAC,IAAA,iBAAS,EAAC,KAAK,CAAC,EAAE,IAAA,gBAAQ,EAAC,GAAG,GAAG,KAAK,CAAC,EAAE,IAAA,gBAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;YACzE,CAAC;YACD,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAY,EAAE,EAAE;gBACzD,MAAM;gBACJ,QAAQ;gBACR,QAAQ,EACR,CAAC,EACF,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;gBAC7C,MAAM,EAAE,GAAG,8BAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;gBAChD,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAA;gBACtD,OAAO,WAAW,KAAK,OAAO;oBAC5B,CAAC,CAAC;wBACE,IAAA,iBAAS,EAAC,cAAc,CAAC;wBACzB,IAAA,gBAAQ,EAAC,IAAI,CAAC;wBACd,IAAA,kBAAS,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,+BAAuB,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,gBAAQ,EAAC,CAAC,EAAE,IAAI,CAAC;qBAC9D;oBACH,CAAC,CAAC;wBACE,IAAA,iBAAS,EAAC,KAAK,CAAC;wBAChB,IAAA,gBAAQ,EAAC,SAAS,CAAC;wBACnB,IAAA,kBAAS,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,+BAAuB,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAA,gBAAQ,EAAC,CAAC,EAAE,IAAI,CAAC;wBAC7D,IAAA,gBAAQ,EAAC,IAAI,CAAC;wBACd,IAAA,gBAAQ,EAAC,WAAW,EAAE,IAAI,CAAC;qBAC5B,CAAA;YACP,CAAC;YACD,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE;gBACpD,OAAO,CAAC,IAAA,iBAAS,EAAC,QAAQ,CAAC,EAAE,IAAA,gBAAQ,EAAC,MAAM,CAAC,CAAC,CAAA;YAChD,CAAC;YACD,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE;gBAC5C,OAAO,CAAC,IAAA,iBAAS,EAAC,KAAK,CAAC,EAAE,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC,CAAA;YAC5C,CAAC;SACF,CAAA;QAED,IAAI,IAAA,mBAAU,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,YAAY,EAAE,CAAC;YACzC,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzC,OAAO,EAAE,GAAG,IAAI,EAAE,iBAAiB,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAA;YAE3F,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,WAAW,CAAE,CAAC,QAAQ,EAAE,CAAC;gBACxE,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;gBACjE,MAAM,SAAS,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAA;gBACjC,MAAM,iBAAiB,GAAG,IAAI;qBAC3B,GAAG,CAAC,CAAC,CAAS,EAA4B,EAAE;oBAC3C,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;wBACpC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpC,CAAC,CAAC,CAAC,IAAA,iBAAS,EAAC,oBAAoB,CAAC,CAAC,CAAA;gBACvC,CAAC,CAAC;qBACD,MAAM,CACL,CAAC,GAA6B,EAAE,IAA8B,EAAE,KAAa,EAAE,EAAE,CAC/E,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACjD,EAAE,CACH,CAAA;gBACH,OAAO,EAAE,GAAG,IAAI,EAAE,iBAAiB,EAAE,CAAA;YACvC,CAAC;QACH,CAAC;QACD,IACE,IAAA,mBAAU,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,YAAY;YACpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAE,CAAC,QAAQ,CAAC,EAC7D,CAAC;YACD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;YAC3E,MAAM,aAAa,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAA;YAE/C,OAAO;gBACL,GAAG,IAAI;gBACP,iBAAiB,EAAE;oBACjB,IAAA,iBAAS,EAAC,OAAO,CAAC;oBAClB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAA,gBAAQ,EAAC,GAAG,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC7D,IAAA,gBAAQ,EAAC,KAAK,CAAC;oBACf,IAAA,gBAAQ,EAAC,aAAa,EAAE,IAAI,CAAC;iBAC9B;aACF,CAAA;QACH,CAAC;QACD,OAAO,IAAI,CAAA;IACb,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AA7HY,QAAA,SAAS,aA6HrB","sourcesContent":["import { getAddress, Interface, isAddress } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { registeredCoinTypes } from '../../const/coinType'\nimport { HumanizerCallModule, HumanizerVisualization, IrCall } from '../../interfaces'\nimport { getAction, getAddressVisualization, getLabel } from '../../utils'\n\nconst ENS_CONTROLLER = '0x253553366Da8546fC250F225fe3d25d0C782303b'\nconst ENS_RESOLVER = '0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63'\nconst BULK_RENEWAL = '0xa12159e5131b1eEf6B4857EEE3e1954744b5033A'\n\nconst iface = new Interface([\n  'function register(string name,address owner, uint256 duration, bytes32 secret, address resolver, bytes[] data, bool reverseRecord, uint16 ownerControlledFuses)',\n  'function commit(bytes32)',\n  'function setText(bytes32 node,string calldata key,string calldata value)',\n  'function multicall(bytes[] data)',\n  // 'function setAddr(bytes32,uint256,bytes)',\n  'function setAddr(bytes32 node, uint256 coinType, bytes memory a)',\n  'function setContenthash(bytes32,bytes)',\n  'function setABI(bytes32,uint256,bytes)',\n  'function renew(string id,uint256 duration)',\n  'function renewAll(string[] calldata names, uint256 duration)'\n])\n\nconst YEAR_IN_SECONDS = 60n * 60n * 24n * 365n\nconst getDurationText = (duration: bigint): string => {\n  const durationLabel = `${duration / YEAR_IN_SECONDS} year${\n    duration < 2n * YEAR_IN_SECONDS ? '' : 's'\n  }`\n  return durationLabel\n}\n\nexport const ensModule: HumanizerCallModule = (accountOp: AccountOp, irCalls: IrCall[]) => {\n  // @TODO: set text and others\n  return irCalls.map((call) => {\n    if (getAddress(call.to) === ENS_CONTROLLER) {\n      if (call.data.slice(0, 10) === iface.getFunction('register')!.selector) {\n        const {\n          name,\n          owner,\n          duration\n          // secret,\n          // resolver,\n          // data,\n          // reverseRecord,\n          // ownerControlledFuses\n        } = iface.decodeFunctionData('register', call.data)\n        const fullVisualization = [getAction('Register'), getLabel(`${name}.ens`, true)]\n\n        if (owner !== accountOp.accountAddr)\n          fullVisualization.push(getLabel('to'), getAddressVisualization(owner))\n        const durationLabel = getDurationText(duration)\n\n        fullVisualization.push(getLabel('for'), getLabel(durationLabel, true))\n\n        return { ...call, fullVisualization }\n      }\n\n      if (call.data.slice(0, 10) === iface.getFunction('renew')!.selector) {\n        const { id, duration } = iface.decodeFunctionData('renew', call.data)\n        const durationLabel = getDurationText(duration)\n        const fullVisualization = [\n          getAction('Renew'),\n          getLabel(`${id}.eth`),\n          getLabel('for'),\n          getLabel(durationLabel, true)\n        ]\n\n        return { ...call, fullVisualization }\n      }\n\n      if (call.data.slice(0, 10) === iface.getFunction('commit')!.selector) {\n        return {\n          ...call,\n          fullVisualization: [getAction('Request'), getLabel('to register an ENS record')]\n        }\n      }\n    }\n    const resolverMatcher = {\n      [iface.getFunction('setText')!.selector]: (data: string) => {\n        const {\n          // node,\n          key,\n          value\n        } = iface.decodeFunctionData('setText', data)\n        return [getAction('Set'), getLabel(`${key} to`), getLabel(value, true)]\n      },\n      [iface.getFunction('setAddr')!.selector]: (data: string) => {\n        const {\n          // node,\n          coinType,\n          a\n        } = iface.decodeFunctionData('setAddr', data)\n        const ct = registeredCoinTypes[Number(coinType)]\n        const networkName = (ct && ct[2]) || 'Unknown network'\n        return networkName === 'Ether'\n          ? [\n              getAction('Transfer ENS'),\n              getLabel('to'),\n              isAddress(a) ? getAddressVisualization(a) : getLabel(a, true)\n            ]\n          : [\n              getAction('Set'),\n              getLabel('address'),\n              isAddress(a) ? getAddressVisualization(a) : getLabel(a, true),\n              getLabel('on'),\n              getLabel(networkName, true)\n            ]\n      },\n      [iface.getFunction('setContenthash')!.selector]: () => {\n        return [getAction('Update'), getLabel('data')]\n      },\n      [iface.getFunction('setABI')!.selector]: () => {\n        return [getAction('Set'), getLabel('ABI')]\n      }\n    }\n\n    if (getAddress(call.to) === ENS_RESOLVER) {\n      if (resolverMatcher[call.data.slice(0, 10)])\n        return { ...call, fullVisualization: resolverMatcher[call.data.slice(0, 10)](call.data) }\n\n      if (call.data.slice(0, 10) === iface.getFunction('multicall')!.selector) {\n        const { data } = iface.decodeFunctionData('multicall', call.data)\n        const separator = getLabel('and')\n        const fullVisualization = data\n          .map((i: string): HumanizerVisualization[] => {\n            return resolverMatcher[i.slice(0, 10)]\n              ? resolverMatcher[i.slice(0, 10)](i)\n              : [getAction('Unknown ENS action')]\n          })\n          .reduce(\n            (acc: HumanizerVisualization[], curr: HumanizerVisualization[], index: number) =>\n              acc.concat(index ? [separator, ...curr] : curr),\n            []\n          )\n        return { ...call, fullVisualization }\n      }\n    }\n    if (\n      getAddress(call.to) === BULK_RENEWAL &&\n      call.data.startsWith(iface.getFunction('renewAll')!.selector)\n    ) {\n      const { names, duration } = iface.decodeFunctionData('renewAll', call.data)\n      const durationLabel = getDurationText(duration)\n\n      return {\n        ...call,\n        fullVisualization: [\n          getAction('Renew'),\n          ...names.map((name: string) => getLabel(`${name}.eth`, true)),\n          getLabel('for'),\n          getLabel(durationLabel, true)\n        ]\n      }\n    }\n    return call\n  })\n}\n"]}