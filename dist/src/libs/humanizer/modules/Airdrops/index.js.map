{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/Airdrops/index.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAIlC,uCAAiD;AAEjD,MAAM,KAAK,GAAG,IAAI,kBAAS,CAAC;IAC1B,4EAA4E;CAC7E,CAAC,CAAA;AACF,MAAM,iBAAiB,GAAG,4CAA4C,CAAA;AAE/D,MAAM,cAAc,GAAwB,CACjD,SAAoB,EACpB,cAAwB,EACxB,EAAE;IACF,MAAM,OAAO,GAAG;QACd,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAY,EAAU,EAAE;YACrE,IAAI,IAAI,CAAC,EAAE,KAAK,4CAA4C;gBAAE,OAAO,IAAI,CAAA;YACzE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAE,CAAC,IAAI,CAAA;YACrD,MAAM,iBAAiB,GAAG,CAAC,IAAA,iBAAS,EAAC,OAAO,CAAC,EAAE,IAAA,gBAAQ,EAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,CAAA;YACnF,OAAO,EAAE,GAAG,IAAI,EAAE,iBAAiB,EAAE,CAAA;QACvC,CAAC;KACF,CAAA;IACD,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACjC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAC/E,CAAA;AACH,CAAC,CAAA;AAfY,QAAA,cAAc,kBAe1B","sourcesContent":["import { Interface } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { HumanizerCallModule, IrCall } from '../../interfaces'\nimport { getAction, getToken } from '../../utils'\n\nconst iface = new Interface([\n  'function claimTokens(uint256 index, uint256 amount, bytes32[] merkleProof)'\n])\nconst WTC_TOKEN_ADDRESS = '0xeF4461891DfB3AC8572cCf7C794664A8DD927945'\n\nexport const airdropsModule: HumanizerCallModule = (\n  accountOp: AccountOp,\n  currentIrCalls: IrCall[]\n) => {\n  const matcher = {\n    [iface.getFunction('claimTokens')!.selector]: (call: IrCall): IrCall => {\n      if (call.to !== '0x4ee97a759AACa2EdF9c1445223b6Cd17c2eD3fb4') return call\n      const { amount } = iface.parseTransaction(call)!.args\n      const fullVisualization = [getAction('Claim'), getToken(WTC_TOKEN_ADDRESS, amount)]\n      return { ...call, fullVisualization }\n    }\n  }\n  return currentIrCalls.map((call) =>\n    matcher[call.data.slice(0, 10)] ? matcher[call.data.slice(0, 10)](call) : call\n  )\n}\n"]}