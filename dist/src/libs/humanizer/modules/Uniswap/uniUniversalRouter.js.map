{"version":3,"file":"uniUniversalRouter.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/Uniswap/uniUniversalRouter.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbiCoder, Interface, ZeroAddress } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { UniswapUniversalRouter } from '../../const/abis'\nimport { HumanizerVisualization, IrCall } from '../../interfaces'\nimport {\n  getAction,\n  getAddressVisualization,\n  getDeadline,\n  getLabel,\n  getToken,\n  getWrapping\n} from '../../utils'\nimport { COMMANDS, COMMANDS_DESCRIPTIONS } from './Commands'\nimport { HumanizerUniMatcher } from './interfaces'\nimport { getUniRecipientText, parsePath, uniReduce } from './utils'\n\nconst coder = new AbiCoder()\n\nconst extractParams = (inputsDetails: any, input: any) => {\n  const types = inputsDetails.map((i: any) => i.type)\n  const decodedInput = coder.decode(types, input)\n\n  const params: any = {}\n  inputsDetails.forEach((item: any, index: number) => {\n    params[item.name] = decodedInput[index]\n  })\n\n  return params\n}\n\n// this function splits uniswap commands from single hex string to multiple hex strings\n// '0x1234' => ['0x12', '0x34']\nfunction parseCommands(commands: string): string[] | null {\n  // all commands are 1 byte = 2 hex chars\n  if (commands.length % 2) return null\n  if (!/^0x[0-9A-Fa-f]+$/.test(commands)) return null\n  const res: string[] = []\n  // iterate over pairs of chars\n  for (let i = 2; i < commands.length; i += 2) {\n    res.push(`0x${commands.slice(i, i + 2)}`)\n  }\n  return res\n}\n\nexport const uniUniversalRouter = (): HumanizerUniMatcher => {\n  const ifaceUniversalRouter = new Interface(UniswapUniversalRouter)\n  return {\n    [`${\n      ifaceUniversalRouter.getFunction(\n        'execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)'\n      )?.selector\n    }`]: (accountOp: AccountOp, call: IrCall) => {\n      const [commands, inputs, deadline] = ifaceUniversalRouter.parseTransaction(call)?.args || []\n      const parsedCommands = parseCommands(commands)\n      const parsed: HumanizerVisualization[][] = []\n\n      parsedCommands\n        ? parsedCommands.forEach((command: string, index: number) => {\n            if (command === COMMANDS.V3_SWAP_EXACT_IN) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.V3_SWAP_EXACT_IN\n              const params = extractParams(inputsDetails, inputs[index])\n              const path = parsePath(params.path)\n              parsed.push([\n                getAction('Swap'),\n                getToken(path[0], params.amountIn),\n                getLabel('for at least'),\n                getToken(path[path.length - 1], params.amountOutMin),\n                getDeadline(deadline)\n              ])\n            } else if (command === COMMANDS.V3_SWAP_EXACT_OUT) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.V3_SWAP_EXACT_OUT\n              const params = extractParams(inputsDetails, inputs[index])\n              const path = parsePath(params.path)\n\n              parsed.push([\n                getAction('Swap up to'),\n                getToken(path[path.length - 1], params.amountInMax),\n                getLabel('for'),\n                getToken(path[0], params.amountOut),\n                getDeadline(deadline)\n              ])\n            } else if (command === COMMANDS.SWEEP) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.SWEEP\n              const params = extractParams(inputsDetails, inputs[index])\n              if (\n                ['0x0000000000000000000000000000000000000001', accountOp.accountAddr].includes(\n                  params.recipient\n                )\n              )\n                parsed.push([\n                  getAction('Take'),\n                  getLabel('at least'),\n                  getToken(params.token, params.amountMin)\n                ])\n              else\n                parsed.push([\n                  getAction('Send'),\n                  getToken(params.token, params.amountMin),\n                  getLabel('to'),\n                  getAddressVisualization(params.recipient)\n                ])\n            } else if (command === COMMANDS.PAY_PORTION) {\n              // @NOTE: this is used for paying fee although its already calculated in the humanized response\n              // @NOTE: no need to be displayed but we can add warning id the fee is too high?\n              // const { inputsDetails } = COMMANDS_DESCRIPTIONS.PAY_PORTION\n              // const params = extractParams(inputsDetails, inputs[index])\n              // parsed.push({\n              //   ...call,\n              //   fullVisualization: [\n              //     getAction('Pay fee'),\n              //     getLabel('of'),\n              //     // bips are fee. can be 0 or within 10-9999 and converts to %\n              //     // https://docs.uniswap.org/contracts/v2/guides/interface-integration/custom-interface-linking#constraints\n              //     getLabel(`${Number(params.bips) / 100}%`)\n              //   ]\n              // })\n            } else if (command === COMMANDS.TRANSFER) {\n              // when we swap with exact out the ui displays amount X for out token\n              // the actual swap is X + small fee\n              // and this is the small fee that is to be sent to the fee collector of uniswap\n              // at later stage of the humanizer pipeline if swap with the same token is present exactly before this transfer\n              // we will subtract the amount from the swap and remove this call from the visualization\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.TRANSFER\n              const params = extractParams(inputsDetails, inputs[index])\n              parsed.push([\n                getAction('Send'),\n                getToken(params.token, params.value),\n                getLabel('to'),\n                getAddressVisualization(params.recipient)\n              ])\n            } else if (command === COMMANDS.V2_SWAP_EXACT_IN) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.V2_SWAP_EXACT_IN\n              const params = extractParams(inputsDetails, inputs[index])\n              const path = params.path\n\n              parsed.push([\n                getAction('Swap'),\n                getToken(path[0], params.amountIn),\n                getLabel('for at least'),\n                getToken(path[path.length - 1], params.amountOutMin),\n                getDeadline(deadline)\n              ])\n            } else if (command === COMMANDS.V2_SWAP_EXACT_OUT) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.V2_SWAP_EXACT_OUT\n              const params = extractParams(inputsDetails, inputs[index])\n              const path = params.path\n\n              parsed.push([\n                getAction('Swap up to'),\n                getToken(path[0], params.amountInMax),\n                getLabel('for'),\n                getToken(path[path.length - 1], params.amountOut),\n                getDeadline(deadline)\n              ])\n            } else if (command === COMMANDS.PERMIT2_PERMIT) {\n              const {\n                permit: {\n                  details: { token, amount /* expiration, nonce */ },\n                  spender\n                  // sigDeadline\n                }\n                // signature\n              } = extractParams(COMMANDS_DESCRIPTIONS.PERMIT2_PERMIT.inputsDetails, inputs[index])\n              parsed.push([\n                getAction('Grant approval'),\n                getLabel('for'),\n                getToken(token, amount),\n                getLabel('to'),\n                getAddressVisualization(spender)\n              ])\n            } else if (command === COMMANDS.WRAP_ETH) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.WRAP_ETH\n              const params = extractParams(inputsDetails, inputs[index])\n              params.amountMin && parsed.push(getWrapping(ZeroAddress, params.amountMin))\n            } else if (command === COMMANDS.UNWRAP_WETH) {\n              const { inputsDetails } = COMMANDS_DESCRIPTIONS.UNWRAP_WETH\n              const params = extractParams(inputsDetails, inputs[index])\n\n              params.amountMin &&\n                parsed.push([\n                  getAction('Unwrap'),\n                  getToken(ZeroAddress, params.amountMin),\n                  ...getUniRecipientText(accountOp.accountAddr, params.recipient)\n                ])\n            } else\n              parsed.push([\n                getAction('Uniswap action'),\n                getLabel('to'),\n                getAddressVisualization(call.to)\n              ])\n          })\n        : parsed.push([\n            getAction('Uniswap action'),\n            getLabel('to'),\n            getAddressVisualization(call.to)\n          ])\n\n      return uniReduce(parsed)\n    }\n  }\n}\n"]}