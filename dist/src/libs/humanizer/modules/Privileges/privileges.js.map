{"version":3,"file":"privileges.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/Privileges/privileges.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAA;AAE5C,OAAO,aAAa,MAAM,sDAAsD,CAAA;AAChF,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAA;AAQ9D,OAAO,EAAE,SAAS,EAAE,uBAAuB,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAExF,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;AAE9C,MAAM,kBAAkB,GAAG,CACzB,aAA4B,EAC5B,IAAY,EACc,EAAE;IAC5B,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAE,CAAC,IAAI,CAAA;IACzD,IAAI,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,aAAa,CAAC,IAAI,IAAI,KAAK,kBAAkB;QAC3F,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAA;IAC7D,IAAI,IAAI,KAAK,QAAQ;QACnB,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAA;IACpF,OAAO;QACL,SAAS,CAAC,sBAAsB,CAAC;QACjC,QAAQ,CAAC,IAAI,CAAC;QACd,uBAAuB,CAAC,IAAI,CAAC;QAC7B,QAAQ,CAAC,IAAI,CAAC;QACd,IAAI,KAAK,oEAAoE;YAC3E,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAC5B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;KACnB,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAwB,CACrD,SAAoB,EACpB,OAAiB,EACjB,aAA4B,EAC5B,EAAE;IACF,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACpC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,QAAQ,EAAE;YAC9E,OAAO;gBACL,GAAG,IAAI;gBACP,iBAAiB,EAAE,kBAAkB,CAAC,aAAa,EAAE,IAAI,CAAC;aAC3D,CAAA;SACF;QACD,OAAO,IAAI,CAAA;IACb,CAAC,CAAC,CAAA;IACF,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA","sourcesContent":["import { Interface, ZeroHash } from 'ethers'\n\nimport AmbireAccount from '../../../../../contracts/compiled/AmbireAccount.json'\nimport { ENTRY_POINT_MARKER } from '../../../../consts/deploy'\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport {\n  HumanizerCallModule,\n  HumanizerMeta,\n  HumanizerVisualization,\n  IrCall\n} from '../../interfaces'\nimport { getAction, getAddressVisualization, getKnownName, getLabel } from '../../utils'\n\nconst iface = new Interface(AmbireAccount.abi)\n\nconst parsePrivilegeCall = (\n  humanizerMeta: HumanizerMeta,\n  call: IrCall\n): HumanizerVisualization[] => {\n  const { addr, priv } = iface.parseTransaction(call)!.args\n  if (getKnownName(humanizerMeta, addr)?.includes('entry point') && priv === ENTRY_POINT_MARKER)\n    return [getAction('Enable'), getAddressVisualization(addr)]\n  if (priv === ZeroHash)\n    return [getAction('Revoke access'), getLabel('of'), getAddressVisualization(addr)]\n  return [\n    getAction('Update access status'),\n    getLabel('of'),\n    getAddressVisualization(addr),\n    getLabel('to'),\n    priv === '0x0000000000000000000000000000000000000000000000000000000000000001'\n      ? getLabel('regular access')\n      : getLabel(priv)\n  ]\n}\n\nexport const privilegeHumanizer: HumanizerCallModule = (\n  accountOp: AccountOp,\n  irCalls: IrCall[],\n  humanizerMeta: HumanizerMeta\n) => {\n  const newCalls = irCalls.map((call) => {\n    if (call.data.slice(0, 10) === iface.getFunction('setAddrPrivilege')?.selector) {\n      return {\n        ...call,\n        fullVisualization: parsePrivilegeCall(humanizerMeta, call)\n      }\n    }\n    return call\n  })\n  return newCalls\n}\n"]}