{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/TraderJoe/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interface, ZeroAddress } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { JoeRouter } from '../../const/abis'\nimport { HumanizerCallModule, IrCall } from '../../interfaces'\nimport { getAction, getDeadline, getLabel, getRecipientText, getToken } from '../../utils'\n\n// @TODO limit order manager\n// @TODO those use AVAX in the function method\n// https://snowtrace.io/address/0x60aE616a2155Ee3d9A68541Ba4544862310933d4\n// https://arbiscan.io/address/0xbeE5c10Cf6E4F68f831E11C1D9E59B43560B3642\n// https://arbiscan.io/address/0x7BFd7192E76D950832c77BB412aaE841049D8D9B\nconst traderJoeModule: HumanizerCallModule = (accOp: AccountOp, calls: IrCall[]) => {\n  const iface = new Interface(JoeRouter)\n  const matcher = {\n    [iface.getFunction(\n      'swapExactNATIVEForTokens(uint256 amountOutMin,(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountOutMin, path, to, deadline } = iface.parseTransaction(call)!.args\n      const tokenOut = path[2][path[2].length - 1]\n      return [\n        getAction('Swap'),\n        getToken(ZeroAddress, call.value),\n        getLabel('for at least'),\n        getToken(tokenOut, amountOutMin),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    },\n    [iface.getFunction(\n      'swapNATIVEForExactTokens(uint256 amountOut,tuple(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountOut, path, to, deadline } = iface.parseTransaction(call)!.args\n      const tokenOut = path[2][path[2].length - 1]\n      return [\n        getAction('Swap up to'),\n        getToken(ZeroAddress, call.value),\n        getLabel('for'),\n        getToken(tokenOut, amountOut),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    },\n    [iface.getFunction(\n      'swapExactTokensForNATIVE(uint256 amountIn,uint256 amountOutMinNATIVE,tuple(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountIn, amountOutMinNATIVE, path, to, deadline } =\n        iface.parseTransaction(call)!.args\n      return [\n        getAction('Swap'),\n        getToken(path[2][0], amountIn),\n        getLabel('for at least'),\n        getToken(ZeroAddress, amountOutMinNATIVE),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    },\n    [iface.getFunction(\n      'swapTokensForExactNATIVE(uint256 amountNATIVEOut,uint256 amountInMax,tuple(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountNATIVEOut, amountInMax, path, to, deadline } =\n        iface.parseTransaction(call)!.args\n      return [\n        getAction('Swap up to'),\n        getToken(path[2][0], amountInMax),\n        getLabel('for'),\n        getToken(ZeroAddress, amountNATIVEOut),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    },\n    [iface.getFunction(\n      'swapExactTokensForTokens(uint256 amountIn,uint256 amountOutMin,tuple(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountIn, amountOutMin, path, to, deadline } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Swap'),\n        getToken(path[2][0], amountIn),\n        getLabel('for at least'),\n        getToken(path[2][path[2].length - 1], amountOutMin),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    },\n    [iface.getFunction(\n      'swapTokensForExactTokens(uint256 amountOut,uint256 amountInMax,tuple(uint256[],uint8[],address[]) path,address to,uint256 deadline)'\n    )?.selector!]: (call: IrCall) => {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const { amountOut, amountInMax, path, to, deadline } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Swap up to'),\n        getToken(path[2][0], amountInMax),\n        getLabel('for'),\n        getToken(path[2][path[2].length - 1], amountOut),\n        ...getRecipientText(accOp.accountAddr, to),\n        getDeadline(deadline)\n      ]\n    }\n  }\n\n  const newCalls = calls.map((call) => {\n    if (call.fullVisualization || !matcher[call.data.slice(0, 10)]) return call\n    return { ...call, fullVisualization: matcher[call.data.slice(0, 10)](call) }\n  })\n\n  return newCalls\n}\n\nexport default traderJoeModule\n"]}