{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/1Inch/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interface, ZeroAddress } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { OneInch } from '../../const/abis/1Inch'\nimport { HumanizerCallModule, IrCall } from '../../interfaces'\nimport {\n  eToNative,\n  getAction,\n  getAddressVisualization,\n  getLabel,\n  getRecipientText,\n  getToken,\n  uintToAddress\n} from '../../utils'\n\nconst OneInchModule: HumanizerCallModule = (accOp: AccountOp, calls: IrCall[]) => {\n  const iface = new Interface(OneInch)\n  const matcher = {\n    [iface.getFunction('cancelOrder(uint256 makerTraits, bytes32 orderHash)')?.selector!]: (\n      call: IrCall\n    ) => {\n      const { orderHash } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Cancel order'),\n        getLabel(`with order hash ${orderHash.slice(0, 5)}...${orderHash.slice(63, 66)}`)\n      ]\n    },\n    [iface.getFunction(\n      'unoswap2(uint256 token, uint256 amount, uint256 minReturn, uint256 dex, uint256 dex2)'\n    )?.selector!]: (call: IrCall) => {\n      const { token: tokenArg, amount } = iface.parseTransaction(call)!.args\n\n      const token = uintToAddress(tokenArg)\n\n      return [getAction('Swap'), getToken(eToNative(token), amount)]\n    },\n    [iface.getFunction(\n      'swap(address executor,tuple(address srcToken,address dstToken,address srcReceiver,address dstReceiver,uint256 amount,uint256 minReturnAmount,uint256 flags) desc,bytes data)'\n    )?.selector!]: (call: IrCall) => {\n      const {\n        desc: { srcToken, dstToken, dstReceiver, amount, minReturnAmount }\n      } = iface.parseTransaction(call)!.args\n      return [\n        getAction('Swap'),\n        getToken(eToNative(srcToken), amount),\n        getLabel('for'),\n        getToken(eToNative(dstToken), minReturnAmount),\n        ...getRecipientText(accOp.accountAddr, dstReceiver)\n      ]\n    },\n    [iface.getFunction('ethUnoswap(uint256, uint256)')?.selector!]: (call: IrCall) => {\n      return [getAction('Swap'), getToken(ZeroAddress, call.value)]\n    },\n    [iface.getFunction('unoswap(uint256 token,uint256 amount,uint256 minReturn,uint256 dex)')\n      ?.selector!]: (call: IrCall) => {\n      const { token: tokenArg, amount } = iface.parseTransaction(call)!.args\n\n      const token = uintToAddress(tokenArg)\n\n      return [getAction('Swap'), getToken(eToNative(token), amount)]\n    },\n    [iface.getFunction(\n      'unoswapTo(uint256 to,uint256 token,uint256 amount,uint256 minReturn,uint256 dex)'\n    )?.selector!]: (call: IrCall) => {\n      const { token: tokenArg, amount } = iface.parseTransaction(call)!.args\n      const token = uintToAddress(tokenArg)\n\n      return [getAction('Swap'), getToken(eToNative(token), amount)]\n    },\n    [iface.getFunction(\n      'unoswap3(uint256 token,uint256 amount,uint256 minReturn,uint256 dex,uint256 dex2,uint256 dex3)'\n    )?.selector!]: (call: IrCall) => {\n      const { token: tokenArg, amount } = iface.parseTransaction(call)!.args\n      const token = uintToAddress(tokenArg)\n\n      return [getAction('Swap'), getToken(eToNative(token), amount)]\n    },\n    [iface.getFunction(\n      'swap(address executor, tuple(address srcToken, address dstToken, address srcReceiver, address dstReceiver, uint256 amount, uint256 minReturnAmount, uint256 flags) desc, bytes permit, bytes data) payable returns (uint256 returnAmount, uint256 spentAmount)'\n    )?.selector!]: (call: IrCall) => {\n      const {\n        executor,\n        desc: { srcToken, dstToken, srcReceiver, dstReceiver, amount, minReturnAmount, flags },\n        permit,\n        data\n      } = iface.parseTransaction(call)!.args\n\n      return [\n        getAction('Swap'),\n        getToken(srcToken, amount),\n        getLabel('for'),\n        getToken(dstToken, minReturnAmount),\n        ...getRecipientText(accOp.accountAddr, dstReceiver)\n      ]\n    }\n  }\n  const newCalls = calls.map((call) => {\n    if (call.fullVisualization || !matcher[call.data.slice(0, 10)]) return call\n    return { ...call, fullVisualization: matcher[call.data.slice(0, 10)](call) }\n  })\n\n  return newCalls\n}\n\nexport default OneInchModule\n"]}