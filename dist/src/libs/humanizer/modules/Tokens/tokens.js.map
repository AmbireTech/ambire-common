{"version":3,"file":"tokens.js","sourceRoot":"","sources":["../../../../../../src/libs/humanizer/modules/Tokens/tokens.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interface, ZeroAddress } from 'ethers'\n\nimport { AccountOp } from '../../../accountOp/accountOp'\nimport { ERC20, ERC721 } from '../../const/abis'\nimport { HumanizerCallModule, IrCall } from '../../interfaces'\nimport { getAction, getAddressVisualization, getLabel, getToken } from '../../utils'\n\n// @TODO merge this with the  erc20 humanizer module as sometimes\n// we see no difference between the two\nexport const genericErc721Humanizer: HumanizerCallModule = (\n  accountOp: AccountOp,\n  currentIrCalls: IrCall[]\n) => {\n  const iface = new Interface(ERC721)\n  const nftTransferVisualization = (call: IrCall) => {\n    const args = iface.parseTransaction(call)?.args.toArray() || []\n    return args[0] === accountOp.accountAddr\n      ? [\n          getAction('Send'),\n          getToken(call.to, args[2]),\n          getLabel('to'),\n          getAddressVisualization(args[1])\n        ]\n      : [\n          getAction('Transfer'),\n          getToken(call.to, args[2]),\n          getLabel('from'),\n          getAddressVisualization(args[0]),\n          getLabel('to'),\n          getAddressVisualization(args[1])\n        ]\n  }\n  const matcher = {\n    [iface.getFunction('approve')?.selector!]: (call: IrCall) => {\n      const args = iface.parseTransaction(call)?.args.toArray() || []\n      return args[0] === ZeroAddress\n        ? [getAction('Revoke approval'), getLabel('for'), getToken(call.to, args[1])]\n        : [\n            getAction('Grant approval'),\n            getLabel('for'),\n            getToken(call.to, args[1]),\n            getLabel('to'),\n            getAddressVisualization(args[0])\n          ]\n    },\n    [iface.getFunction('setApprovalForAll')?.selector!]: (call: IrCall) => {\n      const args = iface.parseTransaction(call)?.args.toArray() || []\n      return args[1]\n        ? [\n            getAction('Grant approval'),\n            getLabel('for all nfts'),\n            getToken(call.to, args[1]),\n            getLabel('to'),\n            getAddressVisualization(args[0])\n          ]\n        : [getAction('Revoke approval'), getLabel('for all nfts'), getAddressVisualization(args[0])]\n    },\n    // not in tests\n    [iface.getFunction('safeTransferFrom', ['address', 'address', 'uint256'])?.selector!]:\n      nftTransferVisualization,\n    // [`${\n    //   iface.getFunction('safeTransferFrom', ['address', 'address', 'uint256', 'bytes'])\n    //     ?.selector\n    // }`]: nftTransferVisualization,\n    [iface.getFunction('transferFrom', ['address', 'address', 'uint256'])?.selector!]:\n      nftTransferVisualization\n  }\n\n  const newCalls = currentIrCalls.map((call) => {\n    // could do additional check if it is actually NFT contract\n    return matcher[call.data.substring(0, 10)]\n      ? {\n          ...call,\n          fullVisualization: matcher[call.data.substring(0, 10)](call)\n        }\n      : call\n  })\n  return newCalls\n}\n\nexport const genericErc20Humanizer: HumanizerCallModule = (\n  accountOp: AccountOp,\n  currentIrCalls: IrCall[]\n) => {\n  const iface = new Interface(ERC20)\n  const matcher = {\n    [iface.getFunction('approve')?.selector!]: (call: IrCall) => {\n      const args = iface.parseTransaction(call)?.args.toArray() || []\n      return args[1] !== BigInt(0)\n        ? [\n            getAction('Grant approval'),\n            getLabel('for'),\n            getToken(call.to, args[1]),\n            getLabel('to'),\n            getAddressVisualization(args[0])\n          ]\n        : [\n            getAction('Revoke approval'),\n            getToken(call.to, args[1]),\n            getLabel('for'),\n            getAddressVisualization(args[0])\n          ]\n    },\n    [iface.getFunction('increaseAllowance')?.selector!]: (call: IrCall) => {\n      const { spender, addedValue } = iface.decodeFunctionData('increaseAllowance', call.data)\n\n      return [\n        getAction('Increase allowance'),\n        getLabel('of'),\n        getAddressVisualization(spender),\n        getLabel('with'),\n        getToken(call.to, addedValue)\n      ]\n    },\n\n    [iface.getFunction('decreaseAllowance')?.selector!]: (call: IrCall) => {\n      const { spender, subtractedValue } = iface.decodeFunctionData('decreaseAllowance', call.data)\n\n      return [\n        getAction('Decrease allowance'),\n        getLabel('of'),\n        getAddressVisualization(spender),\n        getLabel('with'),\n        getToken(call.to, subtractedValue)\n      ]\n    },\n    [iface.getFunction('transfer')?.selector!]: (call: IrCall) => {\n      const args = iface.parseTransaction(call)?.args.toArray() || []\n      return [\n        getAction('Send'),\n        getToken(call.to, args[1]),\n        getLabel('to'),\n        getAddressVisualization(args[0])\n      ]\n    },\n    [iface.getFunction('transferFrom')?.selector!]: (call: IrCall) => {\n      const args = iface.parseTransaction(call)?.args.toArray() || []\n      if (args[0] === accountOp.accountAddr) {\n        return [\n          getAction('Transfer'),\n          getToken(call.to, args[2]),\n          getLabel('to'),\n          getAddressVisualization(args[1])\n        ]\n      }\n      if (args[1] === accountOp.accountAddr) {\n        return [\n          getAction('Take'),\n          getToken(call.to, args[2]),\n          getLabel('from'),\n          getAddressVisualization(args[0])\n        ]\n      }\n      return [\n        getAction('Move'),\n        getToken(call.to, args[2]),\n        getLabel('from'),\n        getAddressVisualization(args[0]),\n        getLabel('to'),\n        getAddressVisualization(args[1])\n      ]\n    }\n  }\n  const newCalls = currentIrCalls.map((call) => {\n    const sigHash = call.data.substring(0, 10)\n    return matcher[sigHash]\n      ? {\n          ...call,\n          fullVisualization: matcher[sigHash](call)\n        }\n      : call\n  })\n  return newCalls\n}\n"]}