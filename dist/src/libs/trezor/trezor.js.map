{"version":3,"file":"trezor.js","sourceRoot":"","sources":["../../../../src/libs/trezor/trezor.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACI,MAAM,6BAA6B,GAAG,CAAC,SAAkB,EAAE,QAAiB,EAAU,EAAE;IAC7F,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ;QAAE,OAAO,4DAA4D,CAAA;IAEhG,IAAI,SAAS,KAAK,oBAAoB;QACpC,OAAO,sDAAsD,CAAA;IAE/D,IAAI,SAAS,KAAK,yBAAyB;QAAE,OAAO,iCAAiC,CAAA;IAErF,IACE,QAAQ,EAAE,WAAW,EAAE,EAAE,QAAQ,CAAC,mCAAmC,CAAC;QACtE,SAAS,KAAK,qBAAqB;QAEnC,OAAO,iCAAiC,CAAA;IAE1C,IAAI,SAAS,KAAK,uBAAuB;QACvC,OAAO,mFAAmF,CAAA;IAE5F,OAAO,GAAG,QAAQ,KAAK,SAAS,IAAI,wBAAwB,GAAG,CAAA;AACjE,CAAC,CAAA;AAlBY,QAAA,6BAA6B,iCAkBzC;AAED;;;;GAIG;AACI,MAAM,sBAAsB,GAAG,CAAC,KAAc,EAAU,EAAE;IAC/D,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;QAClD,OAAO,4DAA4D,CAAA;IACrE,CAAC;IAED,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AANY,QAAA,sBAAsB,0BAMlC","sourcesContent":["/**\n * Used to \"translate\" error codes returned by the Trezor device into a\n * human-readable messages. Although there is a message incoming from Trezor,\n * it's not self-explanatory and can be difficult for the end users to understand.\n */\nexport const getMessageFromTrezorErrorCode = (errorCode?: string, errorMsg?: string): string => {\n  if (!errorCode && !errorMsg) return 'Could not connect to your Trezor device. Please try again.'\n\n  if (errorCode === 'Method_Interrupted')\n    return 'Closing the Trezor popup interrupted the connection.'\n\n  if (errorCode === 'Failure_ActionCancelled') return 'Rejected by your Trezor device.'\n\n  if (\n    errorMsg?.toLowerCase()?.includes('device disconnected during action') ||\n    errorCode === 'Device_Disconnected'\n  )\n    return 'Trezor device got disconnected.'\n\n  if (errorCode === 'Device_CallInProgress')\n    return 'Trezor device busy. Please make sure there are no pending requests on the device.'\n\n  return `${errorMsg} (${errorCode ?? 'no error code incoming'})`\n}\n\n/**\n * Used to \"translate\" errors thrown by the Trezor device into a human-readable\n * messages. Some of them are not self-explanatory and can be difficult for the\n * end users to understand.\n */\nexport const normalizeTrezorMessage = (error?: string): string => {\n  if (!error || error?.includes('handshake failed')) {\n    return 'Could not connect to your Trezor device. Please try again.'\n  }\n\n  return error\n}\n"]}