{"version":3,"file":"EOA.js","sourceRoot":"","sources":["../../../../src/libs/account/EOA.ts"],"names":[],"mappings":";;;AAAA,2CAA2C;AAC3C,sDAAsD;AACtD,mCAAoC;AAGpC,sDAA0D;AAS1D,+CAA2C;AAE3C,0DAA0D;AAC1D,+EAA+E;AAC/E,MAAa,GAAI,SAAQ,yBAAW;IAClC,kBAAkB,CAAqB;IAEvC,gBAAgB,CAA2B;IAE3C,0BAA0B,CAAC,UAA0B,EAAE,EAAa;QAClE,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAA;QACrC,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC;YACxB,IAAI,UAAU,CAAC,QAAQ,YAAY,KAAK;gBAAE,OAAO,UAAU,CAAC,QAAQ,CAAA;QACtE,CAAC;QACD,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;YACtB,IAAI,UAAU,CAAC,MAAM,YAAY,KAAK;gBAAE,OAAO,UAAU,CAAC,MAAM,CAAA;QAClE,CAAC;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,yBAAyB;QACvB,OAAO,KAAK,CAAA;IACd,CAAC;IAED,sBAAsB,CACpB,UAAiC,EACjC,iBAAqC;QAErC,MAAM,MAAM,GAAG,iBAAiB,CAAC,IAAI,CACnC,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI;YAChC,GAAG,CAAC,KAAK,CAAC,OAAO,KAAK,oBAAW;YACjC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAC7B,CAAA;QACD,IAAI,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAA;QAClF,OAAO,CAAC,MAAM,CAAC,CAAA;IACjB,CAAC;IAED,UAAU,CACR,UAAyC,EACzC,OAGC;QAED,MAAM,OAAO,GAAG,UAAU,YAAY,KAAK,CAAA;QAC3C,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,IAAI,CAAC,OAAO,CAAC,EAAE;YAAE,OAAO,EAAE,CAAA;QAEvE,MAAM,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAA;QAC9B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;YACrB,kEAAkE;YAClE,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;gBAAE,OAAO,UAAU,CAAC,kBAAkB,CAAC,OAAO,CAAA;QACtE,CAAC;QAED,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAA;QAC5F,OAAO,UAAU,CAAC,kBAAkB,CAAC,OAAO,GAAG,aAAa;YAC1D,CAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,OAAO;YACvC,CAAC,CAAC,aAAa,CAAA;IACnB,CAAC;IAED,kBAAkB,CAChB,SAA2B,EAC3B,OAEC;QAED,OAAO,6BAAiB,CAAC,MAAM,CAAA;IACjC,CAAC;IAED,8BAA8B,CAAC,EAAa;QAC1C,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;IAC5B,CAAC;IAED,2BAA2B;QACzB,OAAO,KAAK,CAAA;IACd,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAA;IACb,CAAC;IAED,eAAe;QACb,OAAO,aAAa,CAAA;IACtB,CAAC;CACF;AAjFD,kBAiFC","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ZeroAddress } from 'ethers'\nimport { Hex } from '../../interfaces/hex'\nimport { AccountOp } from '../accountOp/accountOp'\nimport { BROADCAST_OPTIONS } from '../broadcast/broadcast'\nimport {\n  AmbireEstimation,\n  FeePaymentOption,\n  FullEstimation,\n  FullEstimationSummary,\n  ProviderEstimation\n} from '../estimate/interfaces'\nimport { TokenResult } from '../portfolio'\nimport { BaseAccount } from './BaseAccount'\n\n// this class describes a plain EOA that cannot transition\n// to 7702 either because the network or the hardware wallet doesnt' support it\nexport class EOA extends BaseAccount {\n  providerEstimation?: ProviderEstimation\n\n  ambireEstimation?: AmbireEstimation | Error\n\n  getEstimationCriticalError(estimation: FullEstimation, op: AccountOp): Error | null {\n    const numberOfCalls = op.calls.length\n    if (numberOfCalls === 1) {\n      if (estimation.provider instanceof Error) return estimation.provider\n    }\n    if (numberOfCalls > 1) {\n      if (estimation.ambire instanceof Error) return estimation.ambire\n    }\n    return null\n  }\n\n  supportsBundlerEstimation() {\n    return false\n  }\n\n  getAvailableFeeOptions(\n    estimation: FullEstimationSummary,\n    feePaymentOptions: FeePaymentOption[]\n  ): FeePaymentOption[] {\n    const native = feePaymentOptions.find(\n      (opt) =>\n        opt.paidBy === this.account.addr &&\n        opt.token.address === ZeroAddress &&\n        !opt.token.flags.onGasTank\n    )\n    if (!native) throw new Error('no native fee payment option, it should not happen')\n    return [native]\n  }\n\n  getGasUsed(\n    estimation: FullEstimationSummary | Error,\n    options: {\n      feeToken: TokenResult\n      op: AccountOp\n    }\n  ): bigint {\n    const isError = estimation instanceof Error\n    if (isError || !estimation.providerEstimation || !options.op) return 0n\n\n    const calls = options.op.calls\n    if (calls.length === 1) {\n      const call = calls[0]\n      // a normal transfer is 21k, so just return the providerEstimation\n      if (call.data === '0x') return estimation.providerEstimation.gasUsed\n    }\n\n    const ambireGasUsed = estimation.ambireEstimation ? estimation.ambireEstimation.gasUsed : 0n\n    return estimation.providerEstimation.gasUsed > ambireGasUsed\n      ? estimation.providerEstimation.gasUsed\n      : ambireGasUsed\n  }\n\n  getBroadcastOption(\n    feeOption: FeePaymentOption,\n    options: {\n      op: AccountOp\n    }\n  ): string {\n    return BROADCAST_OPTIONS.bySelf\n  }\n\n  shouldBroadcastCallsSeparately(op: AccountOp): boolean {\n    return op.calls.length > 1\n  }\n\n  canUseReceivingNativeForFee(): boolean {\n    return false\n  }\n\n  getBroadcastCalldata(): Hex {\n    return '0x'\n  }\n\n  getAtomicStatus(): 'unsupported' | 'supported' | 'ready' {\n    return 'unsupported'\n  }\n}\n"]}