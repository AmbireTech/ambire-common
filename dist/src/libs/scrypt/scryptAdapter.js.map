{"version":3,"file":"scryptAdapter.js","sourceRoot":"","sources":["../../../../src/libs/scrypt/scryptAdapter.ts"],"names":[],"mappings":";;;AAAA,yCAA8C;AAE9C,iDAA4D;AAM5D,MAAa,aAAa;IACxB,SAAS,GAAa,SAAS,CAAA;IAE/B,YAAY,QAAkB;QAC5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;IAC3B,CAAC;IAED,KAAK,CAAC,MAAM,CACV,QAA2B,EAC3B,IAAgB,EAChB,MAA8B;QAE9B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,MAAM,CAAA;QAEjC,IAAI,IAAI,CAAC,SAAS,KAAK,eAAe,EAAE,CAAC;YACvC,kDAAkD;YAClD,OAAO,IAAA,eAAW,EAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAA;QACzE,CAAC;QAED,+CAA+C;QAC/C,MAAM,MAAM,GAAG,MAAM,IAAA,kBAAQ,EAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;QACvE,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,CAAA;IAC/B,CAAC;CACF;AAvBD,sCAuBC","sourcesContent":["import { scrypt as scryptJs } from 'scrypt-js'\n\nimport { scrypt as nobleScrypt } from '@noble/hashes/scrypt'\n\nimport { Platform } from '../../interfaces/platform'\n\nexport type NormalizedScryptParams = { N: number; r: number; p: number; dkLen: number }\n\nexport class ScryptAdapter {\n  #platform: Platform = 'default'\n\n  constructor(platform: Platform) {\n    this.#platform = platform\n  }\n\n  async scrypt(\n    password: ArrayLike<number>,\n    salt: Uint8Array,\n    params: NormalizedScryptParams\n  ): Promise<Uint8Array> {\n    const { N, r, p, dkLen } = params\n\n    if (this.#platform === 'browser-gecko') {\n      // noble/hashes scrypt returns Uint8Array directly\n      return nobleScrypt(Uint8Array.from(password), salt, { N, r, p, dkLen })\n    }\n\n    // scrypt-js returns Promise<ArrayLike<number>>\n    const result = await scryptJs(password, salt, N, r, p, dkLen, () => {})\n    return new Uint8Array(result)\n  }\n}\n"]}