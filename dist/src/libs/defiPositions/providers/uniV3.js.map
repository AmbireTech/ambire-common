{"version":3,"file":"uniV3.js","sourceRoot":"","sources":["../../../../../src/libs/defiPositions/providers/uniV3.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonRpcProvider, Provider } from 'ethers'\n\nimport DeFiPositionsDeploylessCode from '../../../../contracts/compiled/DeFiUniswapV3Positions.json'\nimport { Network } from '../../../interfaces/network'\nimport { fromDescriptor } from '../../deployless/deployless'\nimport { UNISWAP_V3 } from '../defiAddresses'\nimport { AssetType, Position, PositionsByProvider } from '../types'\nimport { uniV3DataToPortfolioPosition } from './helpers/univ3Math'\n\nexport async function getUniV3Positions(\n  userAddr: string,\n  provider: Provider | JsonRpcProvider,\n  network: Network\n): Promise<PositionsByProvider | null> {\n  const { chainId } = network\n  if (chainId && !UNISWAP_V3[chainId.toString() as keyof typeof UNISWAP_V3]) return null\n\n  const { nonfungiblePositionManagerAddr, factoryAddr } =\n    UNISWAP_V3[chainId.toString() as keyof typeof UNISWAP_V3]\n\n  const deploylessDeFiPositionsGetter = fromDescriptor(\n    provider,\n    DeFiPositionsDeploylessCode,\n    network.rpcNoStateOverride\n  )\n  const [result] = await deploylessDeFiPositionsGetter.call('getUniV3Position', [\n    userAddr,\n    nonfungiblePositionManagerAddr,\n    factoryAddr\n  ])\n\n  const data = result.map((asset: any) => ({\n    positionId: asset.positionId,\n    token0Symbol: asset.token0Symbol,\n    token0Name: asset.token0Name,\n    token0Decimals: asset.token0Decimals,\n    token1Symbol: asset.token1Symbol,\n    token1Name: asset.token1Name,\n    token1Decimals: asset.token1Decimals,\n    feeGrowthGlobal0X128: asset.feeGrowthGlobal0X128,\n    positionInfo: {\n      nonce: asset.positionInfo.nonce,\n      operator: asset.positionInfo.operator,\n      token0: asset.positionInfo.token0,\n      token1: asset.positionInfo.token1,\n      fee: asset.positionInfo.fee,\n      tickLower: asset.positionInfo.tickLower,\n      tickUpper: asset.positionInfo.tickUpper,\n      liquidity: asset.positionInfo.liquidity,\n      feeGrowthInside0LastX128: asset.positionInfo.feeGrowthInside0LastX128,\n      feeGrowthInside1LastX128: asset.positionInfo.feeGrowthInside1LastX128,\n      tokensOwed0: asset.positionInfo.tokensOwed0,\n      tokensOwed1: asset.positionInfo.tokensOwed1\n    },\n    poolSlot0: {\n      sqrtPriceX96: asset.poolSlot0.sqrtPriceX96,\n      tick: asset.poolSlot0.tick,\n      observationIndex: asset.poolSlot0.observationIndex,\n      observationCardinality: asset.poolSlot0.observationCardinality,\n      observationCardinalityNext: asset.poolSlot0.observationCardinalityNext,\n      feeProtocol: asset.poolSlot0.feeProtocol,\n      unlocked: asset.poolSlot0.unlocked\n    }\n  }))\n\n  const positions: Position[] = data\n    .map((pos: any) => {\n      const tokenAmounts = uniV3DataToPortfolioPosition(\n        pos.positionInfo.liquidity,\n        pos.poolSlot0.sqrtPriceX96,\n        pos.positionInfo.tickLower,\n        pos.positionInfo.tickUpper\n      )\n      return {\n        id: pos.positionId.toString(),\n        additionalData: {\n          inRange: tokenAmounts.isInRage,\n          liquidity: pos.positionInfo.liquidity\n        },\n        assets: [\n          {\n            address: pos.positionInfo.token0,\n            symbol: pos.token0Symbol,\n            name: pos.token0Name,\n            decimals: Number(pos.token0Decimals),\n            amount: BigInt(tokenAmounts.amount0),\n            type: AssetType.Liquidity\n          },\n          {\n            address: pos.positionInfo.token1,\n            symbol: pos.token1Symbol,\n            name: pos.token1Name,\n            decimals: Number(pos.token1Decimals),\n            amount: BigInt(tokenAmounts.amount1),\n            type: AssetType.Liquidity\n          }\n        ]\n      }\n    })\n    .filter((p: Position) => p.additionalData.liquidity !== BigInt(0))\n\n  if (positions.length === 0) return null\n\n  return {\n    providerName: 'Uniswap V3',\n    chainId,\n    type: 'liquidity-pool',\n    positions\n  }\n}\n"]}