{"version":3,"file":"accountState.js","sourceRoot":"","sources":["../../../../src/libs/accountState/accountState.ts"],"names":[],"mappings":"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","sourcesContent":["import { Provider } from 'ethers'\n\nimport AmbireAccountState from '../../../contracts/compiled/AmbireAccountState.json'\nimport { ENTRY_POINT_MARKER, ERC_4337_ENTRYPOINT, MAX_UINT256 } from '../../consts/deploy'\nimport { Account, AccountOnchainState } from '../../interfaces/account'\nimport { Network } from '../../interfaces/network'\nimport { getAccountDeployParams, isSmartAccount } from '../account/account'\nimport { fromDescriptor } from '../deployless/deployless'\n\nexport async function getAccountState(\n  provider: Provider,\n  network: Network,\n  accounts: Account[],\n  blockTag: string | number = 'latest'\n): Promise<AccountOnchainState[]> {\n  const deploylessAccountState = fromDescriptor(\n    provider,\n    AmbireAccountState,\n    !network.rpcNoStateOverride\n  )\n\n  const args = accounts.map((account) => {\n    const associatedKeys =\n      network?.erc4337?.enabled && !account.associatedKeys.includes(ERC_4337_ENTRYPOINT)\n        ? [...account.associatedKeys, ERC_4337_ENTRYPOINT]\n        : account.associatedKeys\n\n    return [\n      account.addr,\n      associatedKeys,\n      ...(account.creation == null\n        ? ['0x0000000000000000000000000000000000000000', '0x']\n        : getAccountDeployParams(account)),\n      network?.erc4337?.enabled ? ERC_4337_ENTRYPOINT : '0x0000000000000000000000000000000000000000'\n    ]\n  })\n\n  async function getEOAsNonce(eoaAccounts: any[]): Promise<{ [addr: string]: number }> {\n    const nonces: any = await Promise.all(\n      eoaAccounts.map((addr: string) => provider.getTransactionCount(addr))\n    )\n    return Object.assign(\n      {},\n      ...eoaAccounts.map((addr: string, index: string | number) => ({\n        [addr]: BigInt(nonces[index])\n      }))\n    )\n  }\n\n  const [[accountStateResult], eoaNonces] = await Promise.all([\n    deploylessAccountState.call('getAccountsState', [args], {\n      blockTag\n    }),\n    getEOAsNonce(\n      accounts.filter((account) => !isSmartAccount(account)).map((account) => account.addr)\n    )\n  ])\n\n  const result: AccountOnchainState[] = accountStateResult.map((accResult: any, index: number) => {\n    const associatedKeys = accResult.associatedKeyPrivileges.map(\n      (privilege: string, keyIndex: number) => {\n        return [args[index][1][keyIndex], privilege]\n      }\n    )\n\n    const res = {\n      accountAddr: accounts[index].addr,\n      nonce: !isSmartAccount(accounts[index]) ? eoaNonces[accounts[index].addr] : accResult.nonce,\n      erc4337Nonce: accResult.erc4337Nonce,\n      isDeployed: accResult.isDeployed,\n      associatedKeys: Object.fromEntries(associatedKeys),\n      isV2: accResult.isV2,\n      balance: accResult.balance,\n      isEOA: accResult.isEOA,\n      isErc4337Enabled: !!(\n        network?.erc4337?.enabled &&\n        accResult.erc4337Nonce < MAX_UINT256 &&\n        associatedKeys.find(\n          (associatedKey: string[]) =>\n            associatedKey[0] === ERC_4337_ENTRYPOINT && associatedKey[1] === ENTRY_POINT_MARKER\n        )\n      ),\n      currentBlock: accResult.currentBlock,\n      deployError:\n        accounts[index].associatedKeys.length > 0 && accResult.associatedKeyPrivileges.length === 0\n    }\n\n    return res\n  })\n\n  return result\n}\n"]}