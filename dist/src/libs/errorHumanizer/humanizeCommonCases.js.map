{"version":3,"file":"humanizeCommonCases.js","sourceRoot":"","sources":["../../../../src/libs/errorHumanizer/humanizeCommonCases.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,8BAA8B,EAAE,MAAM,UAAU,CAAA;AAEzD,MAAM,kCAAkC,GAAG,CACzC,MAAqB,EACrB,MAAc,EACC,EAAE;IACjB,IAAI,OAAO,GAAG,IAAI,CAAA;IAElB,IAAI,CAAC,MAAM;QAAE,OAAO,OAAO,CAAA;IAE3B,8BAA8B,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QAC/C,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CACpD,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CACzD,CAAA;QACD,IAAI,CAAC,UAAU;YAAE,OAAM;QAEvB,OAAO,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAA;IAClE,CAAC,CAAC,CAAA;IAEF,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA;AAED,OAAO,EAAE,kCAAkC,EAAE,CAAA","sourcesContent":["import { BROADCAST_OR_ESTIMATION_ERRORS } from './errors'\n\nconst humanizeEstimationOrBroadcastError = (\n  reason: string | null,\n  prefix: string\n): string | null => {\n  let message = null\n\n  if (!reason) return message\n\n  BROADCAST_OR_ESTIMATION_ERRORS.forEach((error) => {\n    const isMatching = error.reasons.some((errorReason) =>\n      reason.toLowerCase().includes(errorReason.toLowerCase())\n    )\n    if (!isMatching) return\n\n    message = `${prefix !== '' ? `${prefix} ` : ''}${error.message}`\n  })\n\n  return message\n}\n\nexport { humanizeEstimationOrBroadcastError }\n"]}