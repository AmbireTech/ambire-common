{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/libs/accountOp/types.ts"],"names":[],"mappings":";;;AAGA,IAAY,eAQX;AARD,WAAY,eAAe;IACzB,sCAAmB,CAAA;IACnB,+EAA4D,CAAA;IAC5D,sCAAmB,CAAA;IACnB,sCAAmB,CAAA;IACnB,wCAAqB,CAAA;IACrB,iEAA8C,CAAA;IAC9C,4DAAyC,CAAA;AAC3C,CAAC,EARW,eAAe,+BAAf,eAAe,QAQ1B","sourcesContent":["import { Hex } from '../../interfaces/hex'\nimport { Calls, UserRequest } from '../../interfaces/userRequest'\n\nexport enum AccountOpStatus {\n  Pending = 'pending',\n  BroadcastedButNotConfirmed = 'broadcasted-but-not-confirmed',\n  Success = 'success',\n  Failure = 'failure',\n  Rejected = 'rejected',\n  UnknownButPastNonce = 'unknown-but-past-nonce',\n  BroadcastButStuck = 'broadcast-but-stuck'\n}\n\nexport interface Call {\n  to: string\n  value: bigint\n  data: string\n  // if this call is associated with a particular user request\n  // multiple calls can be associated with the same user request, for example\n  // when a batching request is made\n  fromUserRequestId?: UserRequest['id']\n  id?: Calls['calls'][number]['id']\n  txnId?: Hex\n  status?: AccountOpStatus\n  fee?: {\n    inToken: string\n    amount: bigint\n  }\n}\n"]}