{"version":3,"file":"polling.js","sourceRoot":"","sources":["../../../../src/libs/polling/polling.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,6CAA6C,CAAA;AAEtE,MAAM,eAAe,GAAG,KAAK,CAAA;AAC7B,OAAO;AACP,iIAAiI;AACjI,yIAAyI;AACzI,MAAM,OAAO,OAAQ,SAAQ,YAAY;IACvC,KAAK,CAGJ;IAED,cAAc,GAAW,IAAI,CAAA;IAE7B,eAAe,GAAa,CAAC,GAAG,CAAC,CAAA;IAEjC,SAAS,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;IAExC,YAAY,eAA0B;QACpC,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE,KAAK;SACf,CAAA;QACD,IAAI,eAAe;YAAE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAA;IAC7D,CAAC;IAED,KAAK,CAAC,IAAI,CACR,EAAY,EACZ,MAAW,EACX,OAAwB,EACxB,UAA2B,EAC3B,OAAgB,EAChB,WAAoB;QAEpB,MAAM,WAAW,GAAG,WAAW,IAAI,CAAC,CAAA;QACpC,MAAM,OAAO,GAAa,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACtD,sDAAsD;QACtD,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,KAAK,GAAG;gBACX,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,EAAE;aACV,CAAA;YACD,IAAI,UAAU,IAAI,UAAU,EAAE;gBAAE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAA;YACpD,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC;iBAC/B,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;iBACjD,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAA;YACnD,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;gBACvF,IAAI,CAAC,KAAK,GAAG,MAAM,CAAA;gBACnB,IAAI,CAAC,UAAU,EAAE,CAAA;aAClB;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE;gBACzB,OAAO,OAAO,CAAC,MAAM,CAAC,CAAA;aACvB;YAED,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,IAAI,eAAe,CAAC,EAAE;gBACzE,OAAO,OAAO,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;aAC3D;YAED,IAAI,CAAC,MAAM,CAAC,OAAO;gBAAE,OAAO,OAAO,CAAC,MAAM,CAAC,CAAA;YAE3C,OAAO,OAAO,CACZ,MAAM,IAAI,CAAC,IAAI,CACb,EAAE,EACF,MAAM,EACN,GAAG,EAAE,CAAC,IAAI,EACV,UAAU,EACV,OAAO,IAAI,eAAe,EAC1B,IAAI,CAAC,cAAc,CACpB,CACF,CAAA;QACH,CAAC,EAAE,WAAW,CAAC,CAChB,CAAA;QACD,OAAO,IAAI,OAAO,EAAE,CAAA;QACpB,OAAO,OAAO,CAAA;IAChB,CAAC;CACF","sourcesContent":["import EventEmitter from '../../controllers/eventEmitter/eventEmitter'\n\nconst DEFAULT_TIMEOUT = 60000\n// DOCS\n// the purpouse ofthis class is to make requests until a specific case is satisfied, unallowed error occures or the time runs out\n// used for checking if the magicLink, sent to the email, has been clicked, making the emailAddress confirmed and eligible for email vult\nexport class Polling extends EventEmitter {\n  state: {\n    isError: boolean\n    error?: any\n  }\n\n  defaultTimeout: number = 2000\n\n  allowableErrors: number[] = [401]\n\n  startTime: number = new Date().getTime()\n\n  constructor(allowableErrors?: number[]) {\n    super()\n    this.state = {\n      isError: false\n    }\n    if (allowableErrors) this.allowableErrors = allowableErrors\n  }\n\n  async exec<T>(\n    fn: Function,\n    params: any,\n    cleanup: Function | null,\n    shouldStop: Function | null,\n    timeout?: number,\n    pollingtime?: number\n  ): Promise<T | null> {\n    const execTimeout = pollingtime || 0\n    const promise: T | null = await new Promise((resolve) =>\n      // eslint-disable-next-line no-promise-executor-return\n      setTimeout(async () => {\n        this.state = {\n          isError: false,\n          error: {}\n        }\n        if (shouldStop && shouldStop()) return resolve(null)\n        const result = await fn(...params)\n          .catch((error: any) => ({ isError: true, error }))\n          .then((res: any) => ({ isError: false, ...res }))\n        if (result.isError && this.allowableErrors.includes(result?.error?.output?.res?.status)) {\n          this.state = result\n          this.emitUpdate()\n        } else if (result.isError) {\n          return resolve(result)\n        }\n\n        if (new Date().getTime() - this.startTime >= (timeout || DEFAULT_TIMEOUT)) {\n          return resolve({ ...result, error: new Error('timeout') })\n        }\n\n        if (!result.isError) return resolve(result)\n\n        return resolve(\n          await this.exec(\n            fn,\n            params,\n            () => null,\n            shouldStop,\n            timeout || DEFAULT_TIMEOUT,\n            this.defaultTimeout\n          )\n        )\n      }, execTimeout)\n    )\n    cleanup && cleanup()\n    return promise\n  }\n}\n"]}