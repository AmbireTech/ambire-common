{"version":3,"file":"getNetworksWithAssets.js","sourceRoot":"","sources":["../../../../src/libs/portfolio/getNetworksWithAssets.ts"],"names":[],"mappings":"AAIA,MAAM,4BAA4B,GAAG,CACnC,SAAoB,EACpB,YAA0B,EAC1B,qBAEC,EACD,SAAuB,EACH,EAAE;IACtB,MAAM,kBAAkB,GAAG,EAAE,GAAG,qBAAqB,CAAC,SAAS,CAAC,EAAE,CAAA;IAElE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;QAC9C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YAAE,OAAM;QAEjC,MAAM,SAAS,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAA;QACjD,MAAM,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,EAAE,MAAM,CAAA;QAE9C,mCAAmC;QACnC,IAAI,CAAC,MAAM,IAAI,SAAS;YAAE,OAAM;QAEhC,iCAAiC;QACjC,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;QAChF,MAAM,eAAe,GAAG,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAA;QAE3E,yCAAyC;QACzC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC,eAAe,CAAA;IAC7E,CAAC,CAAC,CAAA;IAEF,OAAO,kBAAkB,CAAA;AAC3B,CAAC,CAAA;AAED,eAAe,4BAA4B,CAAA","sourcesContent":["import { AccountId } from '../../interfaces/account'\nimport { RPCProviders } from '../../interfaces/provider'\nimport { AccountAssetsState, AccountState } from './interfaces'\n\nconst getAccountNetworksWithAssets = (\n  accountId: AccountId,\n  accountState: AccountState,\n  storageStateByAccount: {\n    [accountId: string]: AccountAssetsState\n  },\n  providers: RPCProviders\n): AccountAssetsState => {\n  const networksWithAssets = { ...storageStateByAccount[accountId] }\n\n  Object.keys(accountState).forEach((networkId) => {\n    if (!providers[networkId]) return\n\n    const isRPCDown = !providers[networkId].isWorking\n    const result = accountState[networkId]?.result\n\n    // RPC is down or an error occurred\n    if (!result || isRPCDown) return\n\n    // RPC is up and we have a result\n    const nonZeroTokens = result.tokens.filter(({ amount }) => Number(amount) !== 0)\n    const hasCollectibles = result.collections && result.collections.length > 0\n\n    // The account has assets on this network\n    networksWithAssets[networkId] = !!nonZeroTokens.length || !!hasCollectibles\n  })\n\n  return networksWithAssets\n}\n\nexport default getAccountNetworksWithAssets\n"]}