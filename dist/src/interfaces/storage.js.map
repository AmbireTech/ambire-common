{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../../src/interfaces/storage.ts"],"names":[],"mappings":"","sourcesContent":["import { SignedMessage } from '../controllers/activity/types'\n// eslint-disable-next-line import/no-cycle\nimport { StoredPhishingDetection } from '../controllers/phishing/phishing'\nimport { SubmittedAccountOp } from '../libs/accountOp/submittedAccountOp'\nimport { NetworksWithPositionsByAccounts } from '../libs/defiPositions/types'\nimport { CustomToken, TokenPreference } from '../libs/portfolio/customToken'\nimport {\n  AccountAssetsState as PortfolioAccountAssetsState,\n  PreviousHintsStorage\n} from '../libs/portfolio/interfaces'\nimport { Account, AccountId, AccountPreferences } from './account'\nimport { Dapp } from './dapp'\nimport { Key, KeystoreSeed, MainKeyEncryptedWithSecret, StoredKey } from './keystore'\nimport { Network } from './network'\nimport { CashbackStatusByAccount } from './selectedAccount'\nimport { SwapAndBridgeActiveRoute } from './swapAndBridge'\n\nexport type StorageProps = {\n  passedMigrations: string[]\n  migrations: string[]\n  networks: { [key: string]: Network }\n  accounts: Account[]\n  networkPreferences?: { [key: string]: Partial<Network> }\n  accountPreferences?: { [key: AccountId]: AccountPreferences }\n  accountsOps: { [key: string]: { [key: string]: SubmittedAccountOp[] } }\n  signedMessages: { [key: AccountId]: SignedMessage[] }\n  networksWithAssetsByAccount: { [accountId: string]: PortfolioAccountAssetsState }\n  networksWithPositionsByAccounts: NetworksWithPositionsByAccounts\n  tokenPreferences: TokenPreference[]\n  customTokens: CustomToken[]\n  previousHints: PreviousHintsStorage\n  keyPreferences: { addr: Key['addr']; type: Key['type']; label: string }[]\n  keystoreKeys: StoredKey[]\n  keystoreSeeds: KeystoreSeed[]\n  cashbackStatusByAccount: CashbackStatusByAccount\n  dapps: Dapp[]\n  invite: object\n  isPinned: boolean\n  isSetupComplete: boolean\n  keyStoreUid: string | null\n  keystoreSecrets: MainKeyEncryptedWithSecret[]\n  onboardingState?: object\n  phishingDetection: StoredPhishingDetection\n  selectedAccount: string | null\n  swapAndBridgeActiveRoutes: SwapAndBridgeActiveRoute[]\n  termsState?: object\n}\n\nexport interface Storage {\n  get<K extends keyof StorageProps | string | undefined>(\n    key: K,\n    defaultValue?: any\n  ): Promise<K extends keyof StorageProps ? StorageProps[K] : any>\n  set(key: string, value: any): Promise<null>\n  remove(key: string): Promise<null>\n}\n"]}