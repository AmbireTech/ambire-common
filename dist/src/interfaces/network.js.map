{"version":3,"file":"network.js","sourceRoot":"","sources":["../../../src/interfaces/network.ts"],"names":[],"mappings":"","sourcesContent":["import { BUNDLER } from '../consts/bundlers'\n\nexport type NetworkId = string\n\nexport interface Erc4337settings {\n  enabled: boolean\n  hasPaymaster: boolean\n  hasBundlerSupport?: boolean\n  bundlers?: BUNDLER[]\n  defaultBundler?: BUNDLER\n}\n\ninterface FeeOptions {\n  is1559: boolean\n  minBaseFee?: bigint\n  elasticityMultiplier?: bigint\n  baseFeeMaxChangeDenominator?: bigint\n  feeIncrease?: bigint // should we increase the relayer fee in %\n  // transactions on Base get stuck on slow as we lower the baseFee a lot\n  // so we make the minBaseFee the same as the last block one\n  minBaseFeeEqualToLastBlock?: boolean\n}\n\nexport interface NetworkInfo {\n  force4337?: boolean\n  chainId: bigint\n  isSAEnabled: boolean\n  hasSingleton: boolean\n  isOptimistic: boolean\n  rpcNoStateOverride: boolean\n  erc4337: Erc4337settings\n  areContractsDeployed: boolean\n  feeOptions: { is1559: boolean }\n  platformId: string\n  nativeAssetId: string\n  flagged: boolean\n}\n\nexport type NetworkInfoLoading<T> = {\n  [K in keyof T]: T[K] | 'LOADING'\n}\n\nexport interface NetworkFeature {\n  id: string\n  title: string\n  msg?: string\n  level: 'success' | 'danger' | 'warning' | 'loading' | 'initial'\n}\n\n// NetworkId is a string: this is our internal identifier for the network\n// chainId is a number and is the chainID used for replay protection (EIP-155)\n// we need this distinction because:\n// 1) it's easier to work with the string identifier, for example if we have an object segmented by networks it's easier to debug with string IDs\n// 2) multiple distinct networks may (rarely) run the same chainId\nexport interface Network {\n  id: NetworkId\n  name: string\n  nativeAssetSymbol: string\n  chainId: bigint\n  rpcUrls: string[]\n  explorerUrl: string\n  selectedRpcUrl: string\n  erc4337: Erc4337settings\n  rpcNoStateOverride: boolean\n  feeOptions: FeeOptions\n  isSAEnabled: boolean\n  areContractsDeployed: boolean\n  features: NetworkFeature[]\n  hasRelayer: boolean\n  hasSingleton: boolean\n  platformId: string\n  nativeAssetId: string\n  iconUrls?: string[]\n  reestimateOn?: number\n  isOptimistic?: boolean\n  flagged?: boolean\n  predefined: boolean\n  wrappedAddr?: string\n  blockGasLimit?: bigint\n  oldNativeAssetSymbols?: string[]\n  disableEstimateGas?: boolean\n  force4337?: boolean\n  allowForce4337?: boolean\n}\n\nexport interface AddNetworkRequestParams {\n  name: Network['name']\n  rpcUrls: Network['rpcUrls']\n  selectedRpcUrl: Network['selectedRpcUrl']\n  chainId: Network['chainId']\n  nativeAssetSymbol: Network['nativeAssetSymbol']\n  explorerUrl: Network['explorerUrl']\n  iconUrls: Network['iconUrls']\n}\n\nexport interface ChainlistNetwork {\n  name: string\n  chain: string\n  icon: string\n  rpc: string[]\n  features: {\n    name: string\n  }[]\n  faucets: string[]\n  nativeCurrency: {\n    name: string\n    symbol: string\n    decimals: number\n  }\n  infoURL: string\n  shortName: string\n  chainId: number\n  networkId: number\n  slip44: number\n  ens: {\n    registry: string\n  }\n  explorers: {\n    name: string\n    url: string\n    standard: string\n    icon?: string\n  }[]\n}\n"]}