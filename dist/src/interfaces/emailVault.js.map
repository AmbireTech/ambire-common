{"version":3,"file":"emailVault.js","sourceRoot":"","sources":["../../../src/interfaces/emailVault.ts"],"names":[],"mappings":";;;AAIA,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,yCAA2B,CAAA;IAC3B,mCAAqB,CAAA;IACrB,qCAAuB,CAAA;AACzB,CAAC,EAJW,UAAU,0BAAV,UAAU,QAIrB;AAcD,IAAY,oBAEX;AAFD,WAAY,oBAAoB;IAC9B,yDAAiC,CAAA;AACnC,CAAC,EAFW,oBAAoB,oCAApB,oBAAoB,QAE/B","sourcesContent":["import { AccountCreation, AccountId } from './account'\n\nexport type MagicLinkFlow = 'recovery' | 'setup'\n\nexport enum SecretType {\n  RecoveryKey = 'recoveryKey',\n  KeyStore = 'keyStore',\n  keyBackup = 'keyBackup'\n}\n\nexport interface EmailVaultSecret {\n  key: string\n  value?: string\n  type: SecretType\n}\n\nexport interface EmailVaultAccountInfo {\n  addr: AccountId\n  associatedKeys: string[]\n  creation: AccountCreation | null\n}\n\nexport enum OperationRequestType {\n  requestKeySync = 'requestKeySync'\n}\n/**\n * Operations are used for communication between devices.\n *\n * @interface EmailVaultOperation\n * @property {string} [id] - A value that is randomly assigned by the relayer if the operation is legit.\n * @property {OperationRequestType} type - A label for the intention of the operation.\n * @property {string} requester - In the context of the EmailVault, this is the device's keystoreId, acting as a public key for encryption.\n * @property {string} key - In the context of the EmailVault and syncing keys, this is the address for the EOA we want the private key for (might not be applicable for new operation types, if any).\n * @property {string} [value] - The fetched value.\n * @property {string} [password] - The password associated with the operation. The relayer doesn't return the value of the op if wrong password\n */\nexport interface EmailVaultOperation {\n  id?: string\n  type: OperationRequestType\n  requester: string\n  key: string\n  value?: string\n  password?: string\n}\n\nexport interface EmailVaultData {\n  recoveryKey: string\n  email: string\n  availableAccounts: { [addr: string]: EmailVaultAccountInfo }\n  availableSecrets: { [key: string]: EmailVaultSecret }\n  operations: EmailVaultOperation[]\n}\n\nexport interface RecoveryKey {\n  key: String\n  type: String\n}\n"]}