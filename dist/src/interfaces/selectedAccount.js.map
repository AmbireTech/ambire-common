{"version":3,"file":"selectedAccount.js","sourceRoot":"","sources":["../../../src/interfaces/selectedAccount.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  CollectionResult as CollectionResultInterface,\n  NetworkSimulatedAccountOp,\n  NetworkState,\n  TokenResult as TokenResultInterface\n} from '../libs/portfolio/interfaces'\nimport { AccountId } from './account'\n\n/** A stripped version of the portfolio state that will be used in the UI */\nexport type SelectedAccountPortfolioState = {\n  [chainId: string]:\n    | (Omit<NetworkState, 'result'> & {\n        result?: Omit<\n          NonNullable<NetworkState['result']>,\n          'tokens' | 'collections' | 'tokenErrors' | 'hintsFromExternalAPI' | 'priceCache'\n        >\n      })\n    | undefined\n}\n\nexport type SelectedAccountPortfolioTokenResult = TokenResultInterface & {\n  latestAmount?: bigint\n  pendingAmount?: bigint\n}\n\nexport interface SelectedAccountPortfolio {\n  tokens: SelectedAccountPortfolioTokenResult[]\n  collections: CollectionResultInterface[]\n  totalBalance: number\n  /** Either all portfolio networks have loaded or a timeout has been reached and there are tokens.\n   * @example - If the user has 3 networks and 2 of them have loaded, but the third has not and a timeout has been reached\n   * the value of isReadyToVisualize will be true.\n   */\n  isReadyToVisualize: boolean\n  /** True after all networks have initially loaded. May be true even if a network is loading (e.g. during an interval update). */\n  isAllReady: boolean\n  networkSimulatedAccountOp: NetworkSimulatedAccountOp\n  latest: SelectedAccountPortfolioState\n  pending: SelectedAccountPortfolioState\n}\n\n// As of version 4.53.0, cashback status information has been introduced.\n// Previously, each account stored a separate cashback status object with multiple timestamps.\n// Now, cashback statuses are represented as a single normalized value for simplifying.\n// This type represents the old structure before migration.\nexport type LegacyCashbackStatus = {\n  firstCashbackReceivedAt: number | null\n  firstCashbackSeenAt: number | null\n  cashbackWasZeroAt: number | null\n}\n\nexport type CashbackStatus = 'no-cashback' | 'unseen-cashback' | 'cashback-modal' | 'seen-cashback'\n\nexport type CashbackStatusByAccount = {\n  [key: AccountId]: CashbackStatus\n}\n"]}