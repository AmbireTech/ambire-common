{"version":3,"file":"jiffyscan.js","sourceRoot":"","sources":["../../../../src/services/explorers/jiffyscan.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,UAAkB,EAAE,OAAc;IAClE,MAAM,GAAG,GAAG,+CAA+C,UAAU,EAAE,CAAA;IAEvE,OAAO,OAAO,CAAC,IAAI,CAAC;QAClB,OAAO,CAAC,GAAG,EAAE;YACX,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,EAAE;aAC3D;SACF,CAAC;QACF,IAAI,OAAO,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;YAC/B,UAAU,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;QACjE,CAAC,CAAC;KACH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACd,OAAO,IAAI,CAAA;IACb,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import { Fetch } from '../../interfaces/fetch'\n\nexport async function fetchUserOp(userOpHash: string, fetchFn: Fetch) {\n  const url = `https://api.jiffyscan.xyz/v0/getUserOp?hash=${userOpHash}`\n\n  return Promise.race([\n    fetchFn(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': process.env.REACT_APP_JIFFYSCAN_API_KEY || ''\n      }\n    }),\n    new Promise((_resolve, reject) => {\n      setTimeout(() => reject(new Error('jiffy scan timeout')), 2500)\n    })\n  ]).catch((e) => {\n    console.log(e)\n    return null\n  })\n}\n"]}