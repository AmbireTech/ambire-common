{"version":3,"file":"biconomy.js","sourceRoot":"","sources":["../../../../src/services/bundlers/biconomy.ts"],"names":[],"mappings":";;;AAGA,2CAA2C;AAC3C,oDAAyD;AACzD,uCAAmC;AAGnC,MAAa,QAAS,SAAQ,iBAAO;IACzB,MAAM,CAAC,OAAgB;QAC/B,OAAO,sCAAsC,OAAO,CAAC,OAAO,iDAAiD,CAAA;IAC/G,CAAC;IAES,KAAK,CAAC,WAAW,CAAC,OAAgB;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAC1C,MAAM,MAAM,GAAQ,MAAM,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAA;QACvE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAA;QAC/B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAA;QACxB,OAAO,MAAM,CAAC,QAAQ,CAAA;QACtB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,OAAgB,EAAE,UAAkB;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAC1C,MAAM,MAAM,GAAG,MAAM,QAAQ;aAC1B,IAAI,CAAC,iCAAiC,EAAE,CAAC,UAAU,CAAC,CAAC;aACrD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAA;YAChE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAEd,OAAO;gBACL,KAAK,EAAE,WAAW;aACnB,CAAA;QACH,CAAC,CAAC,CAAA;QAEJ,IAAI,YAAY,GAAiB;YAC/B,MAAM,EAAE,WAAW;SACpB,CAAA;QACD,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,QAAQ,MAAM,CAAC,KAAK,EAAE;gBACpB,KAAK,WAAW;oBACd,YAAY,GAAG;wBACb,MAAM,EAAE,WAAW;qBACpB,CAAA;oBACD,MAAK;gBAEP,qEAAqE;gBACrE,oEAAoE;gBACpE,+CAA+C;gBAC/C,KAAK,iBAAiB;oBACpB,YAAY,GAAG;wBACb,MAAM,EAAE,WAAW;qBACpB,CAAA;oBACD,MAAK;gBAEP,KAAK,8BAA8B;oBACjC,YAAY,GAAG;wBACb,MAAM,EAAE,UAAU;qBACnB,CAAA;oBACD,MAAK;gBAEP,KAAK,WAAW,CAAC;gBACjB,KAAK,QAAQ;oBACX,YAAY,GAAG;wBACb,MAAM,EAAE,OAAO;wBACf,eAAe,EAAE,MAAM,CAAC,eAAe;qBACxC,CAAA;oBACD,MAAK;gBAEP,KAAK,WAAW;oBACd,YAAY,GAAG;wBACb,MAAM,EAAE,OAAO;wBACf,eAAe,EAAE,MAAM,CAAC,eAAe;qBACxC,CAAA;oBACD,MAAK;gBAEP;oBACE,MAAK;aACR;SACF;QAED,OAAO,YAAY,CAAA;IACrB,CAAC;IAEM,OAAO;QACZ,OAAO,mBAAQ,CAAA;IACjB,CAAC;CACF;AA/ED,4BA+EC","sourcesContent":["/* eslint-disable no-console */\nimport { Network } from 'interfaces/network'\n\n/* eslint-disable class-methods-use-this */\nimport { BICONOMY, BUNDLER } from '../../consts/bundlers'\nimport { Bundler } from './bundler'\nimport { GasSpeeds, UserOpStatus } from './types'\n\nexport class Biconomy extends Bundler {\n  protected getUrl(network: Network): string {\n    return `https://bundler.biconomy.io/api/v3/${network.chainId}/nJPK7B3ru.dd7f7861-190d-41bd-af80-6877f74b8f44`\n  }\n\n  protected async getGasPrice(network: Network): Promise<GasSpeeds> {\n    const provider = this.getProvider(network)\n    const prices: any = await provider.send('biconomy_getGasFeeValues', [])\n    prices.medium = prices.standard\n    prices.ape = prices.fast\n    delete prices.standard\n    return prices\n  }\n\n  public async getStatus(network: Network, userOpHash: string): Promise<UserOpStatus> {\n    const provider = this.getProvider(network)\n    const result = await provider\n      .send('biconomy_getUserOperationStatus', [userOpHash])\n      .catch((e) => {\n        console.log('biconomy_getUserOperationStatus returned an error')\n        console.log(e)\n\n        return {\n          state: 'NOT_FOUND'\n        }\n      })\n\n    let userOpStatus: UserOpStatus = {\n      status: 'not_found'\n    }\n    if (result.state) {\n      switch (result.state) {\n        case 'NOT_FOUND':\n          userOpStatus = {\n            status: 'not_found'\n          }\n          break\n\n        // currently, we don't handle the middle stage called bundler mempool\n        // it can be treated the same way as not_found - which means it will\n        // query the bundler again until it has a txnId\n        case 'BUNDLER_MEMPOOL':\n          userOpStatus = {\n            status: 'not_found'\n          }\n          break\n\n        case 'DROPPED_FROM_BUNDLER_MEMPOOL':\n          userOpStatus = {\n            status: 'rejected'\n          }\n          break\n\n        case 'SUBMITTED':\n        case 'FAILED':\n          userOpStatus = {\n            status: 'found',\n            transactionHash: result.transactionHash\n          }\n          break\n\n        case 'CONFIRMED':\n          userOpStatus = {\n            status: 'found',\n            transactionHash: result.transactionHash\n          }\n          break\n\n        default:\n          break\n      }\n    }\n\n    return userOpStatus\n  }\n\n  public getName(): BUNDLER {\n    return BICONOMY\n  }\n}\n"]}