{"version":3,"file":"getBundler.js","sourceRoot":"","sources":["../../../../src/services/bundlers/getBundler.ts"],"names":[],"mappings":";;;AAAA,oDAAkE;AAElE,yCAAqC;AAErC,uCAAmC;AAEnC,SAAgB,gBAAgB,CAAC,WAAoB;IACnD,QAAQ,WAAW,EAAE;QACnB,KAAK,kBAAO;YACV,OAAO,IAAI,iBAAO,EAAE,CAAA;QAEtB,KAAK,mBAAQ;YACX,OAAO,IAAI,mBAAQ,EAAE,CAAA;QAEvB;YACE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;KAC5C;AACH,CAAC;AAXD,4CAWC;AAED;;;GAGG;AACH,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,kBAAO,CAAA;IAC7F,OAAO,gBAAgB,CAAC,WAAW,CAAC,CAAA;AACtC,CAAC;AAHD,8CAGC","sourcesContent":["import { BICONOMY, BUNDLER, PIMLICO } from '../../consts/bundlers'\nimport { Network } from '../../interfaces/network'\nimport { Biconomy } from './biconomy'\nimport { Bundler } from './bundler'\nimport { Pimlico } from './pimlico'\n\nexport function getBundlerByName(bundlerName: BUNDLER): Bundler {\n  switch (bundlerName) {\n    case PIMLICO:\n      return new Pimlico()\n\n    case BICONOMY:\n      return new Biconomy()\n\n    default:\n      throw new Error('Bundler settings error')\n  }\n}\n\n/**\n * Get the default bundler for the network without any extra logic.\n * If it's set, get it. If not, use pimlico\n */\nexport function getDefaultBundler(network: Network): Bundler {\n  const bundlerName = network.erc4337.defaultBundler ? network.erc4337.defaultBundler : PIMLICO\n  return getBundlerByName(bundlerName)\n}\n"]}