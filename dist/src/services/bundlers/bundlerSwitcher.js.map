{"version":3,"file":"bundlerSwitcher.js","sourceRoot":"","sources":["../../../../src/services/bundlers/bundlerSwitcher.ts"],"names":[],"mappings":";AAAA,2CAA2C;;;AAM3C,6CAAkE;AAElE,MAAa,eAAe;IAChB,OAAO,CAAS;IAEhB,OAAO,CAAS;IAEhB,YAAY,GAAc,EAAE,CAAA;IAEtC;;;OAGG;IACH,6BAA6B,CAAU;IAEvC,YAAY,OAAgB,EAAE,6BAAuC;QACnE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,OAAO,GAAG,IAAA,8BAAiB,EAAC,OAAO,CAAC,CAAA;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;QAC9C,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAA;IACpE,CAAC;IAES,WAAW;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAA;QAC9C,OAAO,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAA;IACxC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,SAAS,CAAC,GAAY,EAAE,YAA0B;QAChD,wBAAwB;QACxB,IAAI,CAAC,GAAG,CAAC,QAAQ;YAAE,OAAO,KAAK,CAAA;QAE/B,sEAAsE;QACtE,IAAI,IAAI,CAAC,6BAA6B,EAAE;YAAE,OAAO,KAAK,CAAA;QAEtD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO,KAAK,CAAA;QAErC,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;YAC1E,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,KAAK,CAAA;QAEhD,OAAO,CACL,CAAC,YAAY;YACb,YAAY,CAAC,KAAK,KAAK,eAAe;YACtC,YAAY,CAAC,KAAK,KAAK,cAAc,CACtC,CAAA;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;QACpD,CAAC;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;YAC1E,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,OAAO,GAAG,IAAA,6BAAgB,EAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAA;QACrD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;CACF;AA/DD,0CA+DC","sourcesContent":["/* eslint-disable class-methods-use-this */\n\nimport { BUNDLER } from '../../consts/bundlers'\nimport { Account } from '../../interfaces/account'\nimport { Network } from '../../interfaces/network'\nimport { Bundler } from './bundler'\nimport { getBundlerByName, getDefaultBundler } from './getBundler'\n\nexport class BundlerSwitcher {\n  protected network: Network\n\n  protected bundler: Bundler\n\n  protected usedBundlers: BUNDLER[] = []\n\n  /**\n   * This service is stateless so we're allowing a method\n   * to jump in and forbid updates if the controller state forbids them\n   */\n  hasControllerForbiddenUpdates: Function\n\n  constructor(network: Network, hasControllerForbiddenUpdates: Function) {\n    this.network = network\n    this.bundler = getDefaultBundler(network)\n    this.usedBundlers.push(this.bundler.getName())\n    this.hasControllerForbiddenUpdates = hasControllerForbiddenUpdates\n  }\n\n  protected hasBundlers() {\n    const bundlers = this.network.erc4337.bundlers\n    return bundlers && bundlers.length > 1\n  }\n\n  getBundler(): Bundler {\n    return this.bundler\n  }\n\n  canSwitch(acc: Account, bundlerError: Error | null): boolean {\n    // no fallbacks for EOAs\n    if (!acc.creation) return false\n\n    // don't switch the bundler if the account op is in a state of signing\n    if (this.hasControllerForbiddenUpdates()) return false\n\n    if (!this.hasBundlers()) return false\n\n    const availableBundlers = this.network.erc4337.bundlers!.filter((bundler) => {\n      return this.usedBundlers.indexOf(bundler) === -1\n    })\n\n    if (availableBundlers.length === 0) return false\n\n    return (\n      !bundlerError ||\n      bundlerError.cause === 'biconomy: 400' ||\n      bundlerError.cause === 'pimlico: 500'\n    )\n  }\n\n  switch(): Bundler {\n    if (!this.hasBundlers()) {\n      throw new Error('no available bundlers to switch')\n    }\n\n    const availableBundlers = this.network.erc4337.bundlers!.filter((bundler) => {\n      return this.usedBundlers.indexOf(bundler) === -1\n    })\n    this.bundler = getBundlerByName(availableBundlers[0])\n    this.usedBundlers.push(this.bundler.getName())\n    return this.bundler\n  }\n}\n"]}